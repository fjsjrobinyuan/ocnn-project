-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ocnn6_net_8_layer_pipeline is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 9;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS3_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS3_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS4_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS4_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS4_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS4_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS4_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS4_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS4_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS4_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS5_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS5_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS5_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS5_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS5_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS5_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS5_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS5_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS6_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS6_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS6_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS6_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS6_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS6_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS6_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS6_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS7_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS7_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS7_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS7_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS7_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS7_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS7_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS7_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS8_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_BIAS8_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS8_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS8_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_BIAS8_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS8_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS8_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS8_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_OUTPUT_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUTPUT_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUTPUT_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_OUTPUT_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUTPUT_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUTPUT_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_OUTPUT_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_READ_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_READ_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_READ_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_READ_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_READ_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_READ_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_READ_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_READ_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS2_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS3_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS3_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS4_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS4_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS4_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS4_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS4_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS4_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS4_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS5_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS5_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS5_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS5_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS5_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS5_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS5_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS6_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS6_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS6_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS6_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS6_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS6_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS6_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS7_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS7_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS7_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS7_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS7_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS7_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS7_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS8_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS8_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS8_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WEIGHTS8_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS8_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS8_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WEIGHTS8_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WRITE_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_WRITE_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WRITE_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WRITE_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WRITE_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WRITE_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WRITE_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_WRITE_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BIAS1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS3_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS4_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS4_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS4_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS5_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS5_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS5_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS6_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS6_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS6_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS7_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS7_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS7_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_BIAS8_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS8_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_BIAS8_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_OUTPUT_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_OUTPUT_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_OUTPUT_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_READ_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_READ_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_READ_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS3_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS4_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS4_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS4_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS5_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS5_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS5_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS6_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS6_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS6_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS7_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS7_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS7_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM_WEIGHTS8_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS8_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_WEIGHTS8_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_gmem_bias1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias1_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias1_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias1_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias1_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias1_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias1_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias1_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias1_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias1_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias1_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias2_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias2_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias2_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias2_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias2_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias2_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias2_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias2_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias2_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias2_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias3_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias3_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias3_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias3_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias3_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias3_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias3_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias3_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias3_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias3_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS3_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias4_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias4_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias4_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias4_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias4_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias4_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias4_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias4_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias4_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias4_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias4_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias4_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias4_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias4_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias4_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias4_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias4_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias4_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias4_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias4_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias4_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias4_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias4_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias4_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias4_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias4_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias4_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias4_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias4_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS4_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias5_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias5_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias5_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias5_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias5_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias5_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias5_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias5_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias5_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias5_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias5_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias5_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias5_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias5_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias5_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias5_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias5_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias5_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias5_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias5_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias5_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias5_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias5_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias5_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias5_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias5_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias5_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias5_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias5_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS5_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias6_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias6_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias6_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias6_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias6_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias6_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias6_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias6_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias6_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias6_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias6_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias6_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias6_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias6_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias6_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias6_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias6_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias6_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias6_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias6_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias6_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias6_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias6_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias6_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias6_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias6_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias6_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias6_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias6_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias6_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias6_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias6_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias6_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias6_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias6_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias6_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias6_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias6_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias6_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias6_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias6_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias6_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias6_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias6_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias6_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS6_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias7_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias7_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias7_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias7_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias7_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias7_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias7_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias7_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias7_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias7_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias7_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias7_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias7_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias7_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias7_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias7_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias7_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias7_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias7_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias7_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias7_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias7_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias7_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias7_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias7_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias7_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias7_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias7_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias7_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias7_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias7_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias7_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias7_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias7_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias7_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias7_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias7_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias7_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias7_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias7_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias7_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias7_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias7_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias7_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias7_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS7_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias8_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_bias8_AWREADY : IN STD_LOGIC;
    m_axi_gmem_bias8_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias8_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias8_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias8_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias8_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias8_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias8_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias8_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias8_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias8_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias8_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias8_WVALID : OUT STD_LOGIC;
    m_axi_gmem_bias8_WREADY : IN STD_LOGIC;
    m_axi_gmem_bias8_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias8_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_bias8_WLAST : OUT STD_LOGIC;
    m_axi_gmem_bias8_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias8_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias8_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_bias8_ARREADY : IN STD_LOGIC;
    m_axi_gmem_bias8_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_bias8_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias8_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_bias8_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias8_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias8_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias8_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias8_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_bias8_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias8_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_bias8_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias8_RVALID : IN STD_LOGIC;
    m_axi_gmem_bias8_RREADY : OUT STD_LOGIC;
    m_axi_gmem_bias8_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_DATA_WIDTH-1 downto 0);
    m_axi_gmem_bias8_RLAST : IN STD_LOGIC;
    m_axi_gmem_bias8_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias8_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_bias8_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias8_BVALID : IN STD_LOGIC;
    m_axi_gmem_bias8_BREADY : OUT STD_LOGIC;
    m_axi_gmem_bias8_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_bias8_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_bias8_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BIAS8_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_output_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_output_AWREADY : IN STD_LOGIC;
    m_axi_gmem_output_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_output_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_output_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_output_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_output_WVALID : OUT STD_LOGIC;
    m_axi_gmem_output_WREADY : IN STD_LOGIC;
    m_axi_gmem_output_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_DATA_WIDTH-1 downto 0);
    m_axi_gmem_output_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_output_WLAST : OUT STD_LOGIC;
    m_axi_gmem_output_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_output_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_output_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_output_ARREADY : IN STD_LOGIC;
    m_axi_gmem_output_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_output_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_output_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_output_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_output_RVALID : IN STD_LOGIC;
    m_axi_gmem_output_RREADY : OUT STD_LOGIC;
    m_axi_gmem_output_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_DATA_WIDTH-1 downto 0);
    m_axi_gmem_output_RLAST : IN STD_LOGIC;
    m_axi_gmem_output_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_output_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_output_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_BVALID : IN STD_LOGIC;
    m_axi_gmem_output_BREADY : OUT STD_LOGIC;
    m_axi_gmem_output_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_ID_WIDTH-1 downto 0);
    m_axi_gmem_output_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_OUTPUT_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_read_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_read_AWREADY : IN STD_LOGIC;
    m_axi_gmem_read_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_read_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ID_WIDTH-1 downto 0);
    m_axi_gmem_read_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_read_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_read_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_read_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_read_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_read_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_read_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_read_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_read_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_read_WVALID : OUT STD_LOGIC;
    m_axi_gmem_read_WREADY : IN STD_LOGIC;
    m_axi_gmem_read_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_DATA_WIDTH-1 downto 0);
    m_axi_gmem_read_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_read_WLAST : OUT STD_LOGIC;
    m_axi_gmem_read_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ID_WIDTH-1 downto 0);
    m_axi_gmem_read_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_read_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_read_ARREADY : IN STD_LOGIC;
    m_axi_gmem_read_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_read_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ID_WIDTH-1 downto 0);
    m_axi_gmem_read_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_read_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_read_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_read_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_read_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_read_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_read_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_read_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_read_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_read_RVALID : IN STD_LOGIC;
    m_axi_gmem_read_RREADY : OUT STD_LOGIC;
    m_axi_gmem_read_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_DATA_WIDTH-1 downto 0);
    m_axi_gmem_read_RLAST : IN STD_LOGIC;
    m_axi_gmem_read_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ID_WIDTH-1 downto 0);
    m_axi_gmem_read_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_read_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_read_BVALID : IN STD_LOGIC;
    m_axi_gmem_read_BREADY : OUT STD_LOGIC;
    m_axi_gmem_read_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_read_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_ID_WIDTH-1 downto 0);
    m_axi_gmem_read_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_READ_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights1_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights1_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights1_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights1_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights1_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights1_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights1_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights1_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights1_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights1_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights2_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights2_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights2_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights2_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights2_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights2_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights2_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights2_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights2_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights2_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights3_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights3_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights3_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights3_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights3_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights3_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights3_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights3_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights3_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights3_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS3_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights4_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights4_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights4_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights4_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights4_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights4_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights4_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights4_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights4_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights4_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights4_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights4_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights4_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights4_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights4_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights4_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights4_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights4_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights4_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights4_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights4_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights4_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights4_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights4_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights4_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights4_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights4_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights4_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights4_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights4_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights4_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights4_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights4_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights4_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights4_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights4_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights4_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights4_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights4_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights4_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights4_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights4_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights4_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights4_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights4_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS4_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights5_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights5_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights5_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights5_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights5_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights5_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights5_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights5_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights5_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights5_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights5_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights5_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights5_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights5_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights5_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights5_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights5_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights5_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights5_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights5_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights5_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights5_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights5_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights5_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights5_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights5_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights5_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights5_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights5_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights5_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights5_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights5_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights5_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights5_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights5_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights5_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights5_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights5_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights5_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights5_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights5_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights5_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights5_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights5_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights5_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS5_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights6_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights6_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights6_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights6_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights6_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights6_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights6_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights6_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights6_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights6_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights6_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights6_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights6_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights6_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights6_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights6_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights6_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights6_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights6_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights6_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights6_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights6_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights6_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights6_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights6_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights6_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights6_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights6_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights6_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights6_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights6_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights6_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights6_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights6_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights6_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights6_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights6_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights6_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights6_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights6_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights6_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights6_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights6_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights6_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights6_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS6_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights7_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights7_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights7_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights7_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights7_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights7_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights7_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights7_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights7_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights7_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights7_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights7_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights7_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights7_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights7_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights7_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights7_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights7_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights7_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights7_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights7_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights7_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights7_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights7_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights7_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights7_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights7_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights7_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights7_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights7_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights7_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights7_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights7_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights7_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights7_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights7_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights7_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights7_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights7_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights7_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights7_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights7_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights7_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights7_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights7_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS7_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights8_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_weights8_AWREADY : IN STD_LOGIC;
    m_axi_gmem_weights8_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights8_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights8_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights8_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights8_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights8_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights8_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights8_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights8_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights8_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights8_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights8_WVALID : OUT STD_LOGIC;
    m_axi_gmem_weights8_WREADY : IN STD_LOGIC;
    m_axi_gmem_weights8_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights8_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_weights8_WLAST : OUT STD_LOGIC;
    m_axi_gmem_weights8_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights8_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights8_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_weights8_ARREADY : IN STD_LOGIC;
    m_axi_gmem_weights8_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_weights8_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights8_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_weights8_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights8_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights8_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights8_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights8_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_weights8_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights8_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_weights8_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights8_RVALID : IN STD_LOGIC;
    m_axi_gmem_weights8_RREADY : OUT STD_LOGIC;
    m_axi_gmem_weights8_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_DATA_WIDTH-1 downto 0);
    m_axi_gmem_weights8_RLAST : IN STD_LOGIC;
    m_axi_gmem_weights8_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights8_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_weights8_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights8_BVALID : IN STD_LOGIC;
    m_axi_gmem_weights8_BREADY : OUT STD_LOGIC;
    m_axi_gmem_weights8_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_weights8_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH-1 downto 0);
    m_axi_gmem_weights8_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WEIGHTS8_BUSER_WIDTH-1 downto 0);
    m_axi_gmem_write_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_write_AWREADY : IN STD_LOGIC;
    m_axi_gmem_write_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_write_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ID_WIDTH-1 downto 0);
    m_axi_gmem_write_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_write_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_write_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_write_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_write_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_write_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_write_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_write_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_write_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_write_WVALID : OUT STD_LOGIC;
    m_axi_gmem_write_WREADY : IN STD_LOGIC;
    m_axi_gmem_write_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_DATA_WIDTH-1 downto 0);
    m_axi_gmem_write_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_write_WLAST : OUT STD_LOGIC;
    m_axi_gmem_write_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ID_WIDTH-1 downto 0);
    m_axi_gmem_write_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_write_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_write_ARREADY : IN STD_LOGIC;
    m_axi_gmem_write_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_write_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ID_WIDTH-1 downto 0);
    m_axi_gmem_write_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_write_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_write_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_write_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_write_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_write_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_write_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_write_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_write_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_write_RVALID : IN STD_LOGIC;
    m_axi_gmem_write_RREADY : OUT STD_LOGIC;
    m_axi_gmem_write_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_DATA_WIDTH-1 downto 0);
    m_axi_gmem_write_RLAST : IN STD_LOGIC;
    m_axi_gmem_write_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ID_WIDTH-1 downto 0);
    m_axi_gmem_write_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_write_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_write_BVALID : IN STD_LOGIC;
    m_axi_gmem_write_BREADY : OUT STD_LOGIC;
    m_axi_gmem_write_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_write_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_ID_WIDTH-1 downto 0);
    m_axi_gmem_write_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_WRITE_BUSER_WIDTH-1 downto 0);
    input_voxel_stream_dout : IN STD_LOGIC_VECTOR (1084 downto 0);
    input_voxel_stream_empty_n : IN STD_LOGIC;
    input_voxel_stream_read : OUT STD_LOGIC;
    L3_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
    L3_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
    L2_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
    L2_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
    L1_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
    L1_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
    L0_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
    L0_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
    L3_bitmap_o_ap_vld : OUT STD_LOGIC;
    L2_bitmap_o_ap_vld : OUT STD_LOGIC;
    L1_bitmap_o_ap_vld : OUT STD_LOGIC;
    L0_bitmap_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of ocnn6_net_8_layer_pipeline is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ocnn6_net_8_layer_pipeline_ocnn6_net_8_layer_pipeline,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=3.330000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.995000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=773,HLS_SYN_DSP=0,HLS_SYN_FF=388885,HLS_SYN_LUT=402734,HLS_VERSION=2024_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_GMEM_WRITE_USER_VALUE : INTEGER := 0;
    constant C_M_AXI_GMEM_WRITE_PROT_VALUE : INTEGER := 0;
    constant C_M_AXI_GMEM_WRITE_CACHE_VALUE : INTEGER := 3;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal final_output_full_cubic : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv4_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv5_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv6_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal fc1_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal fc2_weights : STD_LOGIC_VECTOR (63 downto 0);
    signal conv1_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal conv2_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal conv3_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal conv4_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal conv5_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal conv6_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal fc1_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal fc2_bias : STD_LOGIC_VECTOR (63 downto 0);
    signal pruned_feature_dram_read : STD_LOGIC_VECTOR (63 downto 0);
    signal pruned_feature_dram_write : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal gmem_bias1_0_AWREADY : STD_LOGIC;
    signal gmem_bias1_0_WREADY : STD_LOGIC;
    signal gmem_bias1_0_ARREADY : STD_LOGIC;
    signal gmem_bias1_0_RVALID : STD_LOGIC;
    signal gmem_bias1_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias1_0_RLAST : STD_LOGIC;
    signal gmem_bias1_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias1_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_bias1_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias1_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias1_0_BVALID : STD_LOGIC;
    signal gmem_bias2_0_AWREADY : STD_LOGIC;
    signal gmem_bias2_0_WREADY : STD_LOGIC;
    signal gmem_bias2_0_ARREADY : STD_LOGIC;
    signal gmem_bias2_0_RVALID : STD_LOGIC;
    signal gmem_bias2_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias2_0_RLAST : STD_LOGIC;
    signal gmem_bias2_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias2_0_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal gmem_bias2_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias2_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias2_0_BVALID : STD_LOGIC;
    signal gmem_bias3_0_AWREADY : STD_LOGIC;
    signal gmem_bias3_0_WREADY : STD_LOGIC;
    signal gmem_bias3_0_ARREADY : STD_LOGIC;
    signal gmem_bias3_0_RVALID : STD_LOGIC;
    signal gmem_bias3_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias3_0_RLAST : STD_LOGIC;
    signal gmem_bias3_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias3_0_RFIFONUM : STD_LOGIC_VECTOR (10 downto 0);
    signal gmem_bias3_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias3_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias3_0_BVALID : STD_LOGIC;
    signal gmem_bias4_0_AWREADY : STD_LOGIC;
    signal gmem_bias4_0_WREADY : STD_LOGIC;
    signal gmem_bias4_0_ARREADY : STD_LOGIC;
    signal gmem_bias4_0_RVALID : STD_LOGIC;
    signal gmem_bias4_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias4_0_RLAST : STD_LOGIC;
    signal gmem_bias4_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias4_0_RFIFONUM : STD_LOGIC_VECTOR (11 downto 0);
    signal gmem_bias4_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias4_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias4_0_BVALID : STD_LOGIC;
    signal gmem_bias5_0_AWREADY : STD_LOGIC;
    signal gmem_bias5_0_WREADY : STD_LOGIC;
    signal gmem_bias5_0_ARREADY : STD_LOGIC;
    signal gmem_bias5_0_RVALID : STD_LOGIC;
    signal gmem_bias5_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias5_0_RLAST : STD_LOGIC;
    signal gmem_bias5_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias5_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_bias5_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias5_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias5_0_BVALID : STD_LOGIC;
    signal gmem_bias6_0_AWREADY : STD_LOGIC;
    signal gmem_bias6_0_WREADY : STD_LOGIC;
    signal gmem_bias6_0_ARREADY : STD_LOGIC;
    signal gmem_bias6_0_RVALID : STD_LOGIC;
    signal gmem_bias6_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias6_0_RLAST : STD_LOGIC;
    signal gmem_bias6_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias6_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_bias6_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias6_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias6_0_BVALID : STD_LOGIC;
    signal gmem_bias7_0_AWREADY : STD_LOGIC;
    signal gmem_bias7_0_WREADY : STD_LOGIC;
    signal gmem_bias7_0_ARREADY : STD_LOGIC;
    signal gmem_bias7_0_RVALID : STD_LOGIC;
    signal gmem_bias7_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias7_0_RLAST : STD_LOGIC;
    signal gmem_bias7_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias7_0_RFIFONUM : STD_LOGIC_VECTOR (11 downto 0);
    signal gmem_bias7_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias7_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias7_0_BVALID : STD_LOGIC;
    signal gmem_bias8_0_AWREADY : STD_LOGIC;
    signal gmem_bias8_0_WREADY : STD_LOGIC;
    signal gmem_bias8_0_ARREADY : STD_LOGIC;
    signal gmem_bias8_0_RVALID : STD_LOGIC;
    signal gmem_bias8_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_bias8_0_RLAST : STD_LOGIC;
    signal gmem_bias8_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias8_0_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal gmem_bias8_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_bias8_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_bias8_0_BVALID : STD_LOGIC;
    signal gmem_output_0_AWREADY : STD_LOGIC;
    signal gmem_output_0_WREADY : STD_LOGIC;
    signal gmem_output_0_ARREADY : STD_LOGIC;
    signal gmem_output_0_RVALID : STD_LOGIC;
    signal gmem_output_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_output_0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_output_0_BVALID : STD_LOGIC;
    signal gmem_output_0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_output_0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_output_0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_read_0_AWREADY : STD_LOGIC;
    signal gmem_read_0_WREADY : STD_LOGIC;
    signal gmem_read_0_ARREADY : STD_LOGIC;
    signal gmem_read_0_RVALID : STD_LOGIC;
    signal gmem_read_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_read_0_RLAST : STD_LOGIC;
    signal gmem_read_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_read_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_read_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_read_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_read_0_BVALID : STD_LOGIC;
    signal gmem_read_0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_read_0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_read_0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights1_0_AWREADY : STD_LOGIC;
    signal gmem_weights1_0_WREADY : STD_LOGIC;
    signal gmem_weights1_0_ARREADY : STD_LOGIC;
    signal gmem_weights1_0_RVALID : STD_LOGIC;
    signal gmem_weights1_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights1_0_RLAST : STD_LOGIC;
    signal gmem_weights1_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights1_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights1_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights1_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights1_0_BVALID : STD_LOGIC;
    signal gmem_weights2_0_AWREADY : STD_LOGIC;
    signal gmem_weights2_0_WREADY : STD_LOGIC;
    signal gmem_weights2_0_ARREADY : STD_LOGIC;
    signal gmem_weights2_0_RVALID : STD_LOGIC;
    signal gmem_weights2_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights2_0_RLAST : STD_LOGIC;
    signal gmem_weights2_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights2_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights2_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights2_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights2_0_BVALID : STD_LOGIC;
    signal gmem_weights3_0_AWREADY : STD_LOGIC;
    signal gmem_weights3_0_WREADY : STD_LOGIC;
    signal gmem_weights3_0_ARREADY : STD_LOGIC;
    signal gmem_weights3_0_RVALID : STD_LOGIC;
    signal gmem_weights3_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights3_0_RLAST : STD_LOGIC;
    signal gmem_weights3_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights3_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights3_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights3_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights3_0_BVALID : STD_LOGIC;
    signal gmem_weights4_0_AWREADY : STD_LOGIC;
    signal gmem_weights4_0_WREADY : STD_LOGIC;
    signal gmem_weights4_0_ARREADY : STD_LOGIC;
    signal gmem_weights4_0_RVALID : STD_LOGIC;
    signal gmem_weights4_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights4_0_RLAST : STD_LOGIC;
    signal gmem_weights4_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights4_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights4_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights4_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights4_0_BVALID : STD_LOGIC;
    signal gmem_weights5_0_AWREADY : STD_LOGIC;
    signal gmem_weights5_0_WREADY : STD_LOGIC;
    signal gmem_weights5_0_ARREADY : STD_LOGIC;
    signal gmem_weights5_0_RVALID : STD_LOGIC;
    signal gmem_weights5_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights5_0_RLAST : STD_LOGIC;
    signal gmem_weights5_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights5_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights5_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights5_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights5_0_BVALID : STD_LOGIC;
    signal gmem_weights6_0_AWREADY : STD_LOGIC;
    signal gmem_weights6_0_WREADY : STD_LOGIC;
    signal gmem_weights6_0_ARREADY : STD_LOGIC;
    signal gmem_weights6_0_RVALID : STD_LOGIC;
    signal gmem_weights6_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights6_0_RLAST : STD_LOGIC;
    signal gmem_weights6_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights6_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights6_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights6_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights6_0_BVALID : STD_LOGIC;
    signal gmem_weights7_0_AWREADY : STD_LOGIC;
    signal gmem_weights7_0_WREADY : STD_LOGIC;
    signal gmem_weights7_0_ARREADY : STD_LOGIC;
    signal gmem_weights7_0_RVALID : STD_LOGIC;
    signal gmem_weights7_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights7_0_RLAST : STD_LOGIC;
    signal gmem_weights7_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights7_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights7_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights7_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights7_0_BVALID : STD_LOGIC;
    signal gmem_weights8_0_AWREADY : STD_LOGIC;
    signal gmem_weights8_0_WREADY : STD_LOGIC;
    signal gmem_weights8_0_ARREADY : STD_LOGIC;
    signal gmem_weights8_0_RVALID : STD_LOGIC;
    signal gmem_weights8_0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_weights8_0_RLAST : STD_LOGIC;
    signal gmem_weights8_0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights8_0_RFIFONUM : STD_LOGIC_VECTOR (12 downto 0);
    signal gmem_weights8_0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_weights8_0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_weights8_0_BVALID : STD_LOGIC;
    signal entry_proc_U0_ap_start : STD_LOGIC;
    signal entry_proc_U0_start_full_n : STD_LOGIC;
    signal entry_proc_U0_ap_done : STD_LOGIC;
    signal entry_proc_U0_ap_continue : STD_LOGIC;
    signal entry_proc_U0_ap_idle : STD_LOGIC;
    signal entry_proc_U0_ap_ready : STD_LOGIC;
    signal entry_proc_U0_start_out : STD_LOGIC;
    signal entry_proc_U0_start_write : STD_LOGIC;
    signal entry_proc_U0_final_output_full_cubic_c_din : STD_LOGIC_VECTOR (63 downto 0);
    signal entry_proc_U0_final_output_full_cubic_c_write : STD_LOGIC;
    signal entry_proc_U0_pruned_feature_dram_read_c_din : STD_LOGIC_VECTOR (63 downto 0);
    signal entry_proc_U0_pruned_feature_dram_read_c_write : STD_LOGIC;
    signal Block_entry_proc_U0_ap_start : STD_LOGIC;
    signal Block_entry_proc_U0_ap_done : STD_LOGIC;
    signal Block_entry_proc_U0_ap_continue : STD_LOGIC;
    signal Block_entry_proc_U0_ap_idle : STD_LOGIC;
    signal Block_entry_proc_U0_ap_ready : STD_LOGIC;
    signal Block_entry_proc_U0_initial_processed_voxels_din : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_U0_initial_processed_voxels_write : STD_LOGIC;
    signal Block_entry_proc_U0_total_processed_voxels : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_U0_total_processed_voxels_ap_vld : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_ap_start : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_ap_done : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_ap_continue : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_ap_idle : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_ap_ready : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_input_voxel_stream_read : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_feature_data_stream_din : STD_LOGIC_VECTOR (1084 downto 0);
    signal pipeline_bitmap_stage_U0_feature_data_stream_write : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_write_addr_stream_din : STD_LOGIC_VECTOR (59 downto 0);
    signal pipeline_bitmap_stage_U0_write_addr_stream_write : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_L3_bitmap_o : STD_LOGIC_VECTOR (511 downto 0);
    signal pipeline_bitmap_stage_U0_L3_bitmap_o_ap_vld : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_L2_bitmap_o : STD_LOGIC_VECTOR (511 downto 0);
    signal pipeline_bitmap_stage_U0_L2_bitmap_o_ap_vld : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_L1_bitmap_o : STD_LOGIC_VECTOR (511 downto 0);
    signal pipeline_bitmap_stage_U0_L1_bitmap_o_ap_vld : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_L0_bitmap_o : STD_LOGIC_VECTOR (511 downto 0);
    signal pipeline_bitmap_stage_U0_L0_bitmap_o_ap_vld : STD_LOGIC;
    signal pipeline_bitmap_stage_U0_bitmap_info : STD_LOGIC_VECTOR (159 downto 0);
    signal pipeline_bitmap_stage_U0_bitmap_info_ap_vld : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_start_out : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_start_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_pruned_feature_dram_read_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_feature_data_stream_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_write_addr_stream_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WLAST : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARVALID : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_RREADY : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_BREADY : STD_LOGIC;
    signal Loop_VITIS_LOOP_131_1_proc_U0_pruned_voxel_count_0_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_131_1_proc_U0_pruned_voxel_count_0_out_write : STD_LOGIC;
    signal Block_entry_proc_24_U0_ap_start : STD_LOGIC;
    signal Block_entry_proc_24_U0_ap_done : STD_LOGIC;
    signal Block_entry_proc_24_U0_ap_continue : STD_LOGIC;
    signal Block_entry_proc_24_U0_ap_idle : STD_LOGIC;
    signal Block_entry_proc_24_U0_ap_ready : STD_LOGIC;
    signal Block_entry_proc_24_U0_start_out : STD_LOGIC;
    signal Block_entry_proc_24_U0_start_write : STD_LOGIC;
    signal Block_entry_proc_24_U0_pruned_voxel_count_0_loc_read : STD_LOGIC;
    signal Block_entry_proc_24_U0_wide_trip_count_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_24_U0_wide_trip_count_out_write : STD_LOGIC;
    signal Block_entry_proc_24_U0_p_out_din : STD_LOGIC_VECTOR (33 downto 0);
    signal Block_entry_proc_24_U0_p_out_write : STD_LOGIC;
    signal Block_entry_proc_24_U0_pruned_voxel_count_0_reload_loc_c1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_24_U0_pruned_voxel_count_0_reload_loc_c1_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_ap_start : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_ap_done : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_read : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_current_morton_list_din : STD_LOGIC_VECTOR (8 downto 0);
    signal Loop_VITIS_LOOP_209_5_proc_U0_current_morton_list_write : STD_LOGIC;
    signal Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_c_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_c_write : STD_LOGIC;
    signal Block_entry_proc_25_U0_ap_start : STD_LOGIC;
    signal Block_entry_proc_25_U0_ap_done : STD_LOGIC;
    signal Block_entry_proc_25_U0_ap_continue : STD_LOGIC;
    signal Block_entry_proc_25_U0_ap_idle : STD_LOGIC;
    signal Block_entry_proc_25_U0_ap_ready : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_read_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_p_loc_read : STD_LOGIC;
    signal Block_entry_proc_25_U0_wide_trip_count_loc_read : STD_LOGIC;
    signal Block_entry_proc_25_U0_pruned_voxel_count_0_reload_loc_read : STD_LOGIC;
    signal Block_entry_proc_25_U0_current_morton_list_read : STD_LOGIC;
    signal Block_entry_proc_25_U0_layer_pipeline_streams_8_din : STD_LOGIC_VECTOR (1084 downto 0);
    signal Block_entry_proc_25_U0_layer_pipeline_streams_8_write : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights1_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights2_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights3_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights4_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights5_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights6_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights7_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_weights8_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias1_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias2_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias3_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias4_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias5_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias6_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias7_0_BREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WLAST : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARVALID : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_RREADY : STD_LOGIC;
    signal Block_entry_proc_25_U0_m_axi_gmem_bias8_0_BREADY : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_ap_start : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_ap_done : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_ap_continue : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_ap_idle : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_ap_ready : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_layer_pipeline_streams_8_read : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWVALID : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WVALID : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WLAST : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARVALID : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_RREADY : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_BREADY : STD_LOGIC;
    signal ocnn6_final_layer_output_reconstruction_streaming_U0_full_cubic_output_read : STD_LOGIC;
    signal final_output_full_cubic_c_full_n : STD_LOGIC;
    signal final_output_full_cubic_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal final_output_full_cubic_c_empty_n : STD_LOGIC;
    signal final_output_full_cubic_c_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal final_output_full_cubic_c_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_feature_dram_read_c_full_n : STD_LOGIC;
    signal pruned_feature_dram_read_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal pruned_feature_dram_read_c_empty_n : STD_LOGIC;
    signal pruned_feature_dram_read_c_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_feature_dram_read_c_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal feature_data_stream_full_n : STD_LOGIC;
    signal feature_data_stream_dout : STD_LOGIC_VECTOR (1084 downto 0);
    signal feature_data_stream_empty_n : STD_LOGIC;
    signal feature_data_stream_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal feature_data_stream_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal write_addr_stream_full_n : STD_LOGIC;
    signal write_addr_stream_dout : STD_LOGIC_VECTOR (59 downto 0);
    signal write_addr_stream_empty_n : STD_LOGIC;
    signal write_addr_stream_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal write_addr_stream_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_voxel_count_0_loc_full_n : STD_LOGIC;
    signal pruned_voxel_count_0_loc_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pruned_voxel_count_0_loc_empty_n : STD_LOGIC;
    signal pruned_voxel_count_0_loc_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_voxel_count_0_loc_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal wide_trip_count_loc_full_n : STD_LOGIC;
    signal wide_trip_count_loc_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal wide_trip_count_loc_empty_n : STD_LOGIC;
    signal wide_trip_count_loc_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal wide_trip_count_loc_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal p_loc_full_n : STD_LOGIC;
    signal p_loc_dout : STD_LOGIC_VECTOR (33 downto 0);
    signal p_loc_empty_n : STD_LOGIC;
    signal p_loc_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal p_loc_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_voxel_count_0_reload_loc_c1_full_n : STD_LOGIC;
    signal pruned_voxel_count_0_reload_loc_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pruned_voxel_count_0_reload_loc_c1_empty_n : STD_LOGIC;
    signal pruned_voxel_count_0_reload_loc_c1_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_voxel_count_0_reload_loc_c1_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal current_morton_list_full_n : STD_LOGIC;
    signal current_morton_list_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal current_morton_list_empty_n : STD_LOGIC;
    signal current_morton_list_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal current_morton_list_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_voxel_count_0_reload_loc_c_full_n : STD_LOGIC;
    signal pruned_voxel_count_0_reload_loc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pruned_voxel_count_0_reload_loc_c_empty_n : STD_LOGIC;
    signal pruned_voxel_count_0_reload_loc_c_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal pruned_voxel_count_0_reload_loc_c_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal layer_pipeline_streams_8_full_n : STD_LOGIC;
    signal layer_pipeline_streams_8_dout : STD_LOGIC_VECTOR (1084 downto 0);
    signal layer_pipeline_streams_8_empty_n : STD_LOGIC;
    signal layer_pipeline_streams_8_num_data_valid : STD_LOGIC_VECTOR (10 downto 0);
    signal layer_pipeline_streams_8_fifo_cap : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Block_entry_proc_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_entry_proc_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_pipeline_bitmap_stage_U0_ap_ready : STD_LOGIC;
    signal ap_sync_reg_Block_entry_proc_25_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_entry_proc_25_U0_ap_ready : STD_LOGIC;
    signal start_for_Loop_VITIS_LOOP_131_1_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_VITIS_LOOP_131_1_proc_U0_full_n : STD_LOGIC;
    signal start_for_Loop_VITIS_LOOP_131_1_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_VITIS_LOOP_131_1_proc_U0_empty_n : STD_LOGIC;
    signal start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_full_n : STD_LOGIC;
    signal start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_empty_n : STD_LOGIC;
    signal start_for_Block_entry_proc_24_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_entry_proc_24_U0_full_n : STD_LOGIC;
    signal start_for_Block_entry_proc_24_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_entry_proc_24_U0_empty_n : STD_LOGIC;
    signal start_for_Loop_VITIS_LOOP_209_5_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_VITIS_LOOP_209_5_proc_U0_full_n : STD_LOGIC;
    signal start_for_Loop_VITIS_LOOP_209_5_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_VITIS_LOOP_209_5_proc_U0_empty_n : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component ocnn6_net_8_layer_pipeline_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        final_output_full_cubic : IN STD_LOGIC_VECTOR (63 downto 0);
        final_output_full_cubic_c_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        final_output_full_cubic_c_full_n : IN STD_LOGIC;
        final_output_full_cubic_c_write : OUT STD_LOGIC;
        final_output_full_cubic_c_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        final_output_full_cubic_c_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_feature_dram_read : IN STD_LOGIC_VECTOR (63 downto 0);
        pruned_feature_dram_read_c_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        pruned_feature_dram_read_c_full_n : IN STD_LOGIC;
        pruned_feature_dram_read_c_write : OUT STD_LOGIC;
        pruned_feature_dram_read_c_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_feature_dram_read_c_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_Block_entry_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        initial_processed_voxels_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        initial_processed_voxels_full_n : IN STD_LOGIC;
        initial_processed_voxels_write : OUT STD_LOGIC;
        total_processed_voxels : OUT STD_LOGIC_VECTOR (31 downto 0);
        total_processed_voxels_ap_vld : OUT STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_pipeline_bitmap_stage IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_voxel_stream_dout : IN STD_LOGIC_VECTOR (1084 downto 0);
        input_voxel_stream_empty_n : IN STD_LOGIC;
        input_voxel_stream_read : OUT STD_LOGIC;
        feature_data_stream_din : OUT STD_LOGIC_VECTOR (1084 downto 0);
        feature_data_stream_full_n : IN STD_LOGIC;
        feature_data_stream_write : OUT STD_LOGIC;
        feature_data_stream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        feature_data_stream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        write_addr_stream_din : OUT STD_LOGIC_VECTOR (59 downto 0);
        write_addr_stream_full_n : IN STD_LOGIC;
        write_addr_stream_write : OUT STD_LOGIC;
        write_addr_stream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        write_addr_stream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        L3_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
        L3_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
        L3_bitmap_o_ap_vld : OUT STD_LOGIC;
        L2_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
        L2_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
        L2_bitmap_o_ap_vld : OUT STD_LOGIC;
        L1_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
        L1_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
        L1_bitmap_o_ap_vld : OUT STD_LOGIC;
        L0_bitmap_i : IN STD_LOGIC_VECTOR (511 downto 0);
        L0_bitmap_o : OUT STD_LOGIC_VECTOR (511 downto 0);
        L0_bitmap_o_ap_vld : OUT STD_LOGIC;
        bitmap_info : OUT STD_LOGIC_VECTOR (159 downto 0);
        bitmap_info_ap_vld : OUT STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_Loop_VITIS_LOOP_131_1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        pruned_feature_dram_read_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        pruned_feature_dram_read_empty_n : IN STD_LOGIC;
        pruned_feature_dram_read_read : OUT STD_LOGIC;
        pruned_feature_dram_read_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_feature_dram_read_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        feature_data_stream_dout : IN STD_LOGIC_VECTOR (1084 downto 0);
        feature_data_stream_empty_n : IN STD_LOGIC;
        feature_data_stream_read : OUT STD_LOGIC;
        feature_data_stream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        feature_data_stream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        write_addr_stream_dout : IN STD_LOGIC_VECTOR (59 downto 0);
        write_addr_stream_empty_n : IN STD_LOGIC;
        write_addr_stream_read : OUT STD_LOGIC;
        write_addr_stream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        write_addr_stream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem_read_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_read_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_read_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_read_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_read_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_read_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_read_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_read_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_read_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_read_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_read_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_read_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_read_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_read_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_read_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_read_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        pruned_voxel_count_0_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pruned_voxel_count_0_out_full_n : IN STD_LOGIC;
        pruned_voxel_count_0_out_write : OUT STD_LOGIC;
        pruned_voxel_count_0_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_Block_entry_proc_24 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        pruned_voxel_count_0_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pruned_voxel_count_0_loc_empty_n : IN STD_LOGIC;
        pruned_voxel_count_0_loc_read : OUT STD_LOGIC;
        pruned_voxel_count_0_loc_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_loc_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        wide_trip_count_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        wide_trip_count_out_full_n : IN STD_LOGIC;
        wide_trip_count_out_write : OUT STD_LOGIC;
        wide_trip_count_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        wide_trip_count_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        p_out_din : OUT STD_LOGIC_VECTOR (33 downto 0);
        p_out_full_n : IN STD_LOGIC;
        p_out_write : OUT STD_LOGIC;
        p_out_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        p_out_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_c1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pruned_voxel_count_0_reload_loc_c1_full_n : IN STD_LOGIC;
        pruned_voxel_count_0_reload_loc_c1_write : OUT STD_LOGIC;
        pruned_voxel_count_0_reload_loc_c1_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_c1_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_Loop_VITIS_LOOP_209_5_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pruned_voxel_count_0_reload_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pruned_voxel_count_0_reload_loc_empty_n : IN STD_LOGIC;
        pruned_voxel_count_0_reload_loc_read : OUT STD_LOGIC;
        pruned_voxel_count_0_reload_loc_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        current_morton_list_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        current_morton_list_full_n : IN STD_LOGIC;
        current_morton_list_write : OUT STD_LOGIC;
        current_morton_list_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        current_morton_list_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_c_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pruned_voxel_count_0_reload_loc_c_full_n : IN STD_LOGIC;
        pruned_voxel_count_0_reload_loc_c_write : OUT STD_LOGIC;
        pruned_voxel_count_0_reload_loc_c_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_c_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_Block_entry_proc_25 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        pruned_feature_dram_read : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_read_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_read_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_read_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_read_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_read_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_read_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_read_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_read_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_read_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_read_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_read_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_read_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_read_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_read_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_read_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_read_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_read_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_read_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_read_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_read_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_read_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_loc_dout : IN STD_LOGIC_VECTOR (33 downto 0);
        p_loc_empty_n : IN STD_LOGIC;
        p_loc_read : OUT STD_LOGIC;
        p_loc_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        p_loc_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        wide_trip_count_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        wide_trip_count_loc_empty_n : IN STD_LOGIC;
        wide_trip_count_loc_read : OUT STD_LOGIC;
        wide_trip_count_loc_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        wide_trip_count_loc_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pruned_voxel_count_0_reload_loc_empty_n : IN STD_LOGIC;
        pruned_voxel_count_0_reload_loc_read : OUT STD_LOGIC;
        pruned_voxel_count_0_reload_loc_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        pruned_voxel_count_0_reload_loc_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        current_morton_list_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        current_morton_list_empty_n : IN STD_LOGIC;
        current_morton_list_read : OUT STD_LOGIC;
        current_morton_list_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        current_morton_list_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        layer_pipeline_streams_8_din : OUT STD_LOGIC_VECTOR (1084 downto 0);
        layer_pipeline_streams_8_full_n : IN STD_LOGIC;
        layer_pipeline_streams_8_write : OUT STD_LOGIC;
        layer_pipeline_streams_8_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        layer_pipeline_streams_8_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem_weights1_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights1_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights1_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights1_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights1_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights1_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights1_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights1_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights1_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights1_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights1_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights1_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights1_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights1_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights1_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights1_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights1_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights1_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights1_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights1_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights1_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights1_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights1_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights1_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights1_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights1_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights1_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights1_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights1_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights1_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights1_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights1_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv1_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights2_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights2_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights2_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights2_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights2_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights2_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights2_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights2_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights2_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights2_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights2_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights2_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights2_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv2_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights3_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights3_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights3_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights3_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights3_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights3_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights3_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights3_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights3_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights3_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights3_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights3_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights3_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights3_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights3_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights3_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights3_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights3_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights3_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights3_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights3_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights3_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights3_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights3_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights3_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights3_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights3_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights3_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights3_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights3_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights3_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights3_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv3_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights4_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights4_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights4_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights4_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights4_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights4_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights4_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights4_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights4_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights4_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights4_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights4_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights4_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights4_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights4_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights4_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights4_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights4_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights4_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights4_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights4_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights4_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights4_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights4_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights4_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights4_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights4_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights4_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights4_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights4_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights4_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights4_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv4_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights5_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights5_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights5_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights5_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights5_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights5_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights5_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights5_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights5_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights5_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights5_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights5_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights5_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights5_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights5_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights5_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights5_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights5_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights5_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights5_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights5_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights5_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights5_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights5_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights5_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights5_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights5_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights5_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights5_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights5_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights5_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights5_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv5_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights6_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights6_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights6_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights6_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights6_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights6_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights6_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights6_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights6_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights6_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights6_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights6_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights6_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights6_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights6_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights6_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights6_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights6_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights6_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights6_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights6_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights6_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights6_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights6_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights6_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights6_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights6_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights6_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights6_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights6_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights6_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights6_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv6_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights7_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights7_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights7_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights7_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights7_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights7_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights7_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights7_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights7_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights7_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights7_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights7_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights7_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights7_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights7_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights7_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights7_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights7_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights7_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights7_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights7_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights7_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights7_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights7_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights7_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights7_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights7_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights7_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights7_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights7_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights7_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights7_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fc1_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights8_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_weights8_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_weights8_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights8_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights8_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights8_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights8_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights8_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights8_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_weights8_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_weights8_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights8_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_weights8_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_weights8_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_weights8_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_weights8_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights8_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights8_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights8_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights8_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_weights8_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_weights8_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_weights8_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_weights8_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_weights8_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_weights8_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_weights8_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights8_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_weights8_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_weights8_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_weights8_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_weights8_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fc2_weights : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias1_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias1_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias1_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias1_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias1_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias1_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias1_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias1_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias1_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias1_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias1_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias1_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias1_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias1_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias1_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias1_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias1_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias1_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias1_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias1_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias1_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias1_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias1_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias1_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias1_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias1_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_bias1_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias1_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias1_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias1_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias1_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias1_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv1_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias2_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias2_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias2_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias2_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias2_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias2_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias2_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias2_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias2_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias2_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias2_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem_bias2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias2_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias2_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv2_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias3_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias3_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias3_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias3_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias3_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias3_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias3_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias3_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias3_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias3_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias3_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias3_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias3_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias3_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias3_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias3_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias3_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias3_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias3_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias3_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias3_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias3_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias3_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias3_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias3_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias3_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem_bias3_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias3_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias3_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias3_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias3_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias3_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv3_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias4_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias4_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias4_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias4_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias4_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias4_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias4_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias4_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias4_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias4_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias4_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias4_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias4_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias4_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias4_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias4_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias4_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias4_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias4_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias4_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias4_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias4_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias4_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias4_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias4_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias4_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_RFIFONUM : IN STD_LOGIC_VECTOR (11 downto 0);
        m_axi_gmem_bias4_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias4_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias4_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias4_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias4_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias4_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv4_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias5_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias5_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias5_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias5_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias5_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias5_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias5_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias5_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias5_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias5_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias5_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias5_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias5_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias5_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias5_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias5_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias5_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias5_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias5_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias5_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias5_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias5_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias5_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias5_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias5_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias5_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_bias5_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias5_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias5_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias5_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias5_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias5_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv5_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias6_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias6_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias6_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias6_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias6_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias6_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias6_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias6_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias6_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias6_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias6_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias6_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias6_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias6_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias6_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias6_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias6_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias6_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias6_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias6_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias6_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias6_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias6_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias6_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias6_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias6_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_gmem_bias6_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias6_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias6_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias6_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias6_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias6_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        conv6_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias7_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias7_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias7_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias7_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias7_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias7_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias7_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias7_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias7_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias7_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias7_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias7_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias7_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias7_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias7_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias7_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias7_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias7_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias7_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias7_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias7_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias7_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias7_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias7_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias7_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias7_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_RFIFONUM : IN STD_LOGIC_VECTOR (11 downto 0);
        m_axi_gmem_bias7_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias7_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias7_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias7_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias7_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias7_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fc1_bias : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias8_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_bias8_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_bias8_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias8_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias8_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias8_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias8_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias8_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias8_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_bias8_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_bias8_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias8_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_bias8_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_bias8_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_bias8_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_bias8_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias8_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias8_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias8_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias8_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_bias8_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_bias8_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_bias8_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_bias8_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_bias8_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_bias8_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem_bias8_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias8_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_bias8_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_bias8_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_bias8_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_bias8_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fc2_bias : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_ocnn6_final_layer_output_reconstruction_streaming IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_pipeline_streams_8_dout : IN STD_LOGIC_VECTOR (1084 downto 0);
        layer_pipeline_streams_8_empty_n : IN STD_LOGIC;
        layer_pipeline_streams_8_read : OUT STD_LOGIC;
        layer_pipeline_streams_8_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        layer_pipeline_streams_8_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem_output_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_output_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_output_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_output_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_output_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_output_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_output_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_output_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_output_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_output_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_output_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_output_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_output_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_output_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_output_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_output_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_output_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_output_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_output_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_output_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_output_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_output_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_output_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_output_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_output_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_output_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_output_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_output_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_output_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_output_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_output_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_output_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        full_cubic_output_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        full_cubic_output_empty_n : IN STD_LOGIC;
        full_cubic_output_read : OUT STD_LOGIC;
        full_cubic_output_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        full_cubic_output_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_fifo_w64_d1024_A_x6 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_fifo_w1085_d1024_A_x0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1084 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1084 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_fifo_w60_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (59 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (59 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_fifo_w32_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_fifo_w34_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (33 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (33 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_fifo_w9_d1024_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC;
        if_num_data_valid : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_fifo_cap : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_start_for_Loop_VITIS_LOOP_131_1_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_start_for_ocnn6_final_layer_output_reconstruction_streaming_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_start_for_Block_entry_proc_24_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_start_for_Loop_VITIS_LOOP_209_5_proc_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        final_output_full_cubic : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv1_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv2_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv3_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv4_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv5_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv6_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        fc1_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        fc2_weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv1_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv2_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv3_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv4_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv5_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        conv6_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        fc1_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        fc2_bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        pruned_feature_dram_read : OUT STD_LOGIC_VECTOR (63 downto 0);
        pruned_feature_dram_write : OUT STD_LOGIC_VECTOR (63 downto 0);
        bitmap_info : IN STD_LOGIC_VECTOR (159 downto 0);
        bitmap_info_ap_vld : IN STD_LOGIC;
        total_processed_voxels : IN STD_LOGIC_VECTOR (31 downto 0);
        total_processed_voxels_ap_vld : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (10 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias4_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias5_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias6_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias7_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_bias8_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_output_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_read_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights4_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights5_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights6_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights7_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component ocnn6_net_8_layer_pipeline_gmem_weights8_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (12 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component ocnn6_net_8_layer_pipeline_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        final_output_full_cubic => final_output_full_cubic,
        conv1_weights => conv1_weights,
        conv2_weights => conv2_weights,
        conv3_weights => conv3_weights,
        conv4_weights => conv4_weights,
        conv5_weights => conv5_weights,
        conv6_weights => conv6_weights,
        fc1_weights => fc1_weights,
        fc2_weights => fc2_weights,
        conv1_bias => conv1_bias,
        conv2_bias => conv2_bias,
        conv3_bias => conv3_bias,
        conv4_bias => conv4_bias,
        conv5_bias => conv5_bias,
        conv6_bias => conv6_bias,
        fc1_bias => fc1_bias,
        fc2_bias => fc2_bias,
        pruned_feature_dram_read => pruned_feature_dram_read,
        pruned_feature_dram_write => pruned_feature_dram_write,
        bitmap_info => pipeline_bitmap_stage_U0_bitmap_info,
        bitmap_info_ap_vld => pipeline_bitmap_stage_U0_bitmap_info_ap_vld,
        total_processed_voxels => Block_entry_proc_U0_total_processed_voxels,
        total_processed_voxels_ap_vld => Block_entry_proc_U0_total_processed_voxels_ap_vld,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_bias1_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS1_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias1_AWVALID,
        AWREADY => m_axi_gmem_bias1_AWREADY,
        AWADDR => m_axi_gmem_bias1_AWADDR,
        AWID => m_axi_gmem_bias1_AWID,
        AWLEN => m_axi_gmem_bias1_AWLEN,
        AWSIZE => m_axi_gmem_bias1_AWSIZE,
        AWBURST => m_axi_gmem_bias1_AWBURST,
        AWLOCK => m_axi_gmem_bias1_AWLOCK,
        AWCACHE => m_axi_gmem_bias1_AWCACHE,
        AWPROT => m_axi_gmem_bias1_AWPROT,
        AWQOS => m_axi_gmem_bias1_AWQOS,
        AWREGION => m_axi_gmem_bias1_AWREGION,
        AWUSER => m_axi_gmem_bias1_AWUSER,
        WVALID => m_axi_gmem_bias1_WVALID,
        WREADY => m_axi_gmem_bias1_WREADY,
        WDATA => m_axi_gmem_bias1_WDATA,
        WSTRB => m_axi_gmem_bias1_WSTRB,
        WLAST => m_axi_gmem_bias1_WLAST,
        WID => m_axi_gmem_bias1_WID,
        WUSER => m_axi_gmem_bias1_WUSER,
        ARVALID => m_axi_gmem_bias1_ARVALID,
        ARREADY => m_axi_gmem_bias1_ARREADY,
        ARADDR => m_axi_gmem_bias1_ARADDR,
        ARID => m_axi_gmem_bias1_ARID,
        ARLEN => m_axi_gmem_bias1_ARLEN,
        ARSIZE => m_axi_gmem_bias1_ARSIZE,
        ARBURST => m_axi_gmem_bias1_ARBURST,
        ARLOCK => m_axi_gmem_bias1_ARLOCK,
        ARCACHE => m_axi_gmem_bias1_ARCACHE,
        ARPROT => m_axi_gmem_bias1_ARPROT,
        ARQOS => m_axi_gmem_bias1_ARQOS,
        ARREGION => m_axi_gmem_bias1_ARREGION,
        ARUSER => m_axi_gmem_bias1_ARUSER,
        RVALID => m_axi_gmem_bias1_RVALID,
        RREADY => m_axi_gmem_bias1_RREADY,
        RDATA => m_axi_gmem_bias1_RDATA,
        RLAST => m_axi_gmem_bias1_RLAST,
        RID => m_axi_gmem_bias1_RID,
        RUSER => m_axi_gmem_bias1_RUSER,
        RRESP => m_axi_gmem_bias1_RRESP,
        BVALID => m_axi_gmem_bias1_BVALID,
        BREADY => m_axi_gmem_bias1_BREADY,
        BRESP => m_axi_gmem_bias1_BRESP,
        BID => m_axi_gmem_bias1_BID,
        BUSER => m_axi_gmem_bias1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARVALID,
        I_CH0_ARREADY => gmem_bias1_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARLEN,
        I_CH0_RVALID => gmem_bias1_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_RREADY,
        I_CH0_RDATA => gmem_bias1_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias1_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias1_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias1_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias1_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias2_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 32,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS2_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 10,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias2_AWVALID,
        AWREADY => m_axi_gmem_bias2_AWREADY,
        AWADDR => m_axi_gmem_bias2_AWADDR,
        AWID => m_axi_gmem_bias2_AWID,
        AWLEN => m_axi_gmem_bias2_AWLEN,
        AWSIZE => m_axi_gmem_bias2_AWSIZE,
        AWBURST => m_axi_gmem_bias2_AWBURST,
        AWLOCK => m_axi_gmem_bias2_AWLOCK,
        AWCACHE => m_axi_gmem_bias2_AWCACHE,
        AWPROT => m_axi_gmem_bias2_AWPROT,
        AWQOS => m_axi_gmem_bias2_AWQOS,
        AWREGION => m_axi_gmem_bias2_AWREGION,
        AWUSER => m_axi_gmem_bias2_AWUSER,
        WVALID => m_axi_gmem_bias2_WVALID,
        WREADY => m_axi_gmem_bias2_WREADY,
        WDATA => m_axi_gmem_bias2_WDATA,
        WSTRB => m_axi_gmem_bias2_WSTRB,
        WLAST => m_axi_gmem_bias2_WLAST,
        WID => m_axi_gmem_bias2_WID,
        WUSER => m_axi_gmem_bias2_WUSER,
        ARVALID => m_axi_gmem_bias2_ARVALID,
        ARREADY => m_axi_gmem_bias2_ARREADY,
        ARADDR => m_axi_gmem_bias2_ARADDR,
        ARID => m_axi_gmem_bias2_ARID,
        ARLEN => m_axi_gmem_bias2_ARLEN,
        ARSIZE => m_axi_gmem_bias2_ARSIZE,
        ARBURST => m_axi_gmem_bias2_ARBURST,
        ARLOCK => m_axi_gmem_bias2_ARLOCK,
        ARCACHE => m_axi_gmem_bias2_ARCACHE,
        ARPROT => m_axi_gmem_bias2_ARPROT,
        ARQOS => m_axi_gmem_bias2_ARQOS,
        ARREGION => m_axi_gmem_bias2_ARREGION,
        ARUSER => m_axi_gmem_bias2_ARUSER,
        RVALID => m_axi_gmem_bias2_RVALID,
        RREADY => m_axi_gmem_bias2_RREADY,
        RDATA => m_axi_gmem_bias2_RDATA,
        RLAST => m_axi_gmem_bias2_RLAST,
        RID => m_axi_gmem_bias2_RID,
        RUSER => m_axi_gmem_bias2_RUSER,
        RRESP => m_axi_gmem_bias2_RRESP,
        BVALID => m_axi_gmem_bias2_BVALID,
        BREADY => m_axi_gmem_bias2_BREADY,
        BRESP => m_axi_gmem_bias2_BRESP,
        BID => m_axi_gmem_bias2_BID,
        BUSER => m_axi_gmem_bias2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARVALID,
        I_CH0_ARREADY => gmem_bias2_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARLEN,
        I_CH0_RVALID => gmem_bias2_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_RREADY,
        I_CH0_RDATA => gmem_bias2_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias2_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias2_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias2_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias2_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias3_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 64,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS3_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 11,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias3_AWVALID,
        AWREADY => m_axi_gmem_bias3_AWREADY,
        AWADDR => m_axi_gmem_bias3_AWADDR,
        AWID => m_axi_gmem_bias3_AWID,
        AWLEN => m_axi_gmem_bias3_AWLEN,
        AWSIZE => m_axi_gmem_bias3_AWSIZE,
        AWBURST => m_axi_gmem_bias3_AWBURST,
        AWLOCK => m_axi_gmem_bias3_AWLOCK,
        AWCACHE => m_axi_gmem_bias3_AWCACHE,
        AWPROT => m_axi_gmem_bias3_AWPROT,
        AWQOS => m_axi_gmem_bias3_AWQOS,
        AWREGION => m_axi_gmem_bias3_AWREGION,
        AWUSER => m_axi_gmem_bias3_AWUSER,
        WVALID => m_axi_gmem_bias3_WVALID,
        WREADY => m_axi_gmem_bias3_WREADY,
        WDATA => m_axi_gmem_bias3_WDATA,
        WSTRB => m_axi_gmem_bias3_WSTRB,
        WLAST => m_axi_gmem_bias3_WLAST,
        WID => m_axi_gmem_bias3_WID,
        WUSER => m_axi_gmem_bias3_WUSER,
        ARVALID => m_axi_gmem_bias3_ARVALID,
        ARREADY => m_axi_gmem_bias3_ARREADY,
        ARADDR => m_axi_gmem_bias3_ARADDR,
        ARID => m_axi_gmem_bias3_ARID,
        ARLEN => m_axi_gmem_bias3_ARLEN,
        ARSIZE => m_axi_gmem_bias3_ARSIZE,
        ARBURST => m_axi_gmem_bias3_ARBURST,
        ARLOCK => m_axi_gmem_bias3_ARLOCK,
        ARCACHE => m_axi_gmem_bias3_ARCACHE,
        ARPROT => m_axi_gmem_bias3_ARPROT,
        ARQOS => m_axi_gmem_bias3_ARQOS,
        ARREGION => m_axi_gmem_bias3_ARREGION,
        ARUSER => m_axi_gmem_bias3_ARUSER,
        RVALID => m_axi_gmem_bias3_RVALID,
        RREADY => m_axi_gmem_bias3_RREADY,
        RDATA => m_axi_gmem_bias3_RDATA,
        RLAST => m_axi_gmem_bias3_RLAST,
        RID => m_axi_gmem_bias3_RID,
        RUSER => m_axi_gmem_bias3_RUSER,
        RRESP => m_axi_gmem_bias3_RRESP,
        BVALID => m_axi_gmem_bias3_BVALID,
        BREADY => m_axi_gmem_bias3_BREADY,
        BRESP => m_axi_gmem_bias3_BRESP,
        BID => m_axi_gmem_bias3_BID,
        BUSER => m_axi_gmem_bias3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARVALID,
        I_CH0_ARREADY => gmem_bias3_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARLEN,
        I_CH0_RVALID => gmem_bias3_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_RREADY,
        I_CH0_RDATA => gmem_bias3_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias3_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias3_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias3_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias3_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias4_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias4_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 128,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS4_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS4_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS4_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS4_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS4_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS4_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS4_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS4_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS4_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS4_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS4_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 12,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias4_AWVALID,
        AWREADY => m_axi_gmem_bias4_AWREADY,
        AWADDR => m_axi_gmem_bias4_AWADDR,
        AWID => m_axi_gmem_bias4_AWID,
        AWLEN => m_axi_gmem_bias4_AWLEN,
        AWSIZE => m_axi_gmem_bias4_AWSIZE,
        AWBURST => m_axi_gmem_bias4_AWBURST,
        AWLOCK => m_axi_gmem_bias4_AWLOCK,
        AWCACHE => m_axi_gmem_bias4_AWCACHE,
        AWPROT => m_axi_gmem_bias4_AWPROT,
        AWQOS => m_axi_gmem_bias4_AWQOS,
        AWREGION => m_axi_gmem_bias4_AWREGION,
        AWUSER => m_axi_gmem_bias4_AWUSER,
        WVALID => m_axi_gmem_bias4_WVALID,
        WREADY => m_axi_gmem_bias4_WREADY,
        WDATA => m_axi_gmem_bias4_WDATA,
        WSTRB => m_axi_gmem_bias4_WSTRB,
        WLAST => m_axi_gmem_bias4_WLAST,
        WID => m_axi_gmem_bias4_WID,
        WUSER => m_axi_gmem_bias4_WUSER,
        ARVALID => m_axi_gmem_bias4_ARVALID,
        ARREADY => m_axi_gmem_bias4_ARREADY,
        ARADDR => m_axi_gmem_bias4_ARADDR,
        ARID => m_axi_gmem_bias4_ARID,
        ARLEN => m_axi_gmem_bias4_ARLEN,
        ARSIZE => m_axi_gmem_bias4_ARSIZE,
        ARBURST => m_axi_gmem_bias4_ARBURST,
        ARLOCK => m_axi_gmem_bias4_ARLOCK,
        ARCACHE => m_axi_gmem_bias4_ARCACHE,
        ARPROT => m_axi_gmem_bias4_ARPROT,
        ARQOS => m_axi_gmem_bias4_ARQOS,
        ARREGION => m_axi_gmem_bias4_ARREGION,
        ARUSER => m_axi_gmem_bias4_ARUSER,
        RVALID => m_axi_gmem_bias4_RVALID,
        RREADY => m_axi_gmem_bias4_RREADY,
        RDATA => m_axi_gmem_bias4_RDATA,
        RLAST => m_axi_gmem_bias4_RLAST,
        RID => m_axi_gmem_bias4_RID,
        RUSER => m_axi_gmem_bias4_RUSER,
        RRESP => m_axi_gmem_bias4_RRESP,
        BVALID => m_axi_gmem_bias4_BVALID,
        BREADY => m_axi_gmem_bias4_BREADY,
        BRESP => m_axi_gmem_bias4_BRESP,
        BID => m_axi_gmem_bias4_BID,
        BUSER => m_axi_gmem_bias4_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARVALID,
        I_CH0_ARREADY => gmem_bias4_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARLEN,
        I_CH0_RVALID => gmem_bias4_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_RREADY,
        I_CH0_RDATA => gmem_bias4_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias4_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias4_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias4_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias4_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias5_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias5_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS5_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS5_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS5_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS5_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS5_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS5_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS5_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS5_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS5_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS5_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS5_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias5_AWVALID,
        AWREADY => m_axi_gmem_bias5_AWREADY,
        AWADDR => m_axi_gmem_bias5_AWADDR,
        AWID => m_axi_gmem_bias5_AWID,
        AWLEN => m_axi_gmem_bias5_AWLEN,
        AWSIZE => m_axi_gmem_bias5_AWSIZE,
        AWBURST => m_axi_gmem_bias5_AWBURST,
        AWLOCK => m_axi_gmem_bias5_AWLOCK,
        AWCACHE => m_axi_gmem_bias5_AWCACHE,
        AWPROT => m_axi_gmem_bias5_AWPROT,
        AWQOS => m_axi_gmem_bias5_AWQOS,
        AWREGION => m_axi_gmem_bias5_AWREGION,
        AWUSER => m_axi_gmem_bias5_AWUSER,
        WVALID => m_axi_gmem_bias5_WVALID,
        WREADY => m_axi_gmem_bias5_WREADY,
        WDATA => m_axi_gmem_bias5_WDATA,
        WSTRB => m_axi_gmem_bias5_WSTRB,
        WLAST => m_axi_gmem_bias5_WLAST,
        WID => m_axi_gmem_bias5_WID,
        WUSER => m_axi_gmem_bias5_WUSER,
        ARVALID => m_axi_gmem_bias5_ARVALID,
        ARREADY => m_axi_gmem_bias5_ARREADY,
        ARADDR => m_axi_gmem_bias5_ARADDR,
        ARID => m_axi_gmem_bias5_ARID,
        ARLEN => m_axi_gmem_bias5_ARLEN,
        ARSIZE => m_axi_gmem_bias5_ARSIZE,
        ARBURST => m_axi_gmem_bias5_ARBURST,
        ARLOCK => m_axi_gmem_bias5_ARLOCK,
        ARCACHE => m_axi_gmem_bias5_ARCACHE,
        ARPROT => m_axi_gmem_bias5_ARPROT,
        ARQOS => m_axi_gmem_bias5_ARQOS,
        ARREGION => m_axi_gmem_bias5_ARREGION,
        ARUSER => m_axi_gmem_bias5_ARUSER,
        RVALID => m_axi_gmem_bias5_RVALID,
        RREADY => m_axi_gmem_bias5_RREADY,
        RDATA => m_axi_gmem_bias5_RDATA,
        RLAST => m_axi_gmem_bias5_RLAST,
        RID => m_axi_gmem_bias5_RID,
        RUSER => m_axi_gmem_bias5_RUSER,
        RRESP => m_axi_gmem_bias5_RRESP,
        BVALID => m_axi_gmem_bias5_BVALID,
        BREADY => m_axi_gmem_bias5_BREADY,
        BRESP => m_axi_gmem_bias5_BRESP,
        BID => m_axi_gmem_bias5_BID,
        BUSER => m_axi_gmem_bias5_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARVALID,
        I_CH0_ARREADY => gmem_bias5_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARLEN,
        I_CH0_RVALID => gmem_bias5_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_RREADY,
        I_CH0_RDATA => gmem_bias5_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias5_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias5_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias5_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias5_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias6_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias6_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS6_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS6_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS6_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS6_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS6_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS6_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS6_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS6_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS6_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS6_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS6_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias6_AWVALID,
        AWREADY => m_axi_gmem_bias6_AWREADY,
        AWADDR => m_axi_gmem_bias6_AWADDR,
        AWID => m_axi_gmem_bias6_AWID,
        AWLEN => m_axi_gmem_bias6_AWLEN,
        AWSIZE => m_axi_gmem_bias6_AWSIZE,
        AWBURST => m_axi_gmem_bias6_AWBURST,
        AWLOCK => m_axi_gmem_bias6_AWLOCK,
        AWCACHE => m_axi_gmem_bias6_AWCACHE,
        AWPROT => m_axi_gmem_bias6_AWPROT,
        AWQOS => m_axi_gmem_bias6_AWQOS,
        AWREGION => m_axi_gmem_bias6_AWREGION,
        AWUSER => m_axi_gmem_bias6_AWUSER,
        WVALID => m_axi_gmem_bias6_WVALID,
        WREADY => m_axi_gmem_bias6_WREADY,
        WDATA => m_axi_gmem_bias6_WDATA,
        WSTRB => m_axi_gmem_bias6_WSTRB,
        WLAST => m_axi_gmem_bias6_WLAST,
        WID => m_axi_gmem_bias6_WID,
        WUSER => m_axi_gmem_bias6_WUSER,
        ARVALID => m_axi_gmem_bias6_ARVALID,
        ARREADY => m_axi_gmem_bias6_ARREADY,
        ARADDR => m_axi_gmem_bias6_ARADDR,
        ARID => m_axi_gmem_bias6_ARID,
        ARLEN => m_axi_gmem_bias6_ARLEN,
        ARSIZE => m_axi_gmem_bias6_ARSIZE,
        ARBURST => m_axi_gmem_bias6_ARBURST,
        ARLOCK => m_axi_gmem_bias6_ARLOCK,
        ARCACHE => m_axi_gmem_bias6_ARCACHE,
        ARPROT => m_axi_gmem_bias6_ARPROT,
        ARQOS => m_axi_gmem_bias6_ARQOS,
        ARREGION => m_axi_gmem_bias6_ARREGION,
        ARUSER => m_axi_gmem_bias6_ARUSER,
        RVALID => m_axi_gmem_bias6_RVALID,
        RREADY => m_axi_gmem_bias6_RREADY,
        RDATA => m_axi_gmem_bias6_RDATA,
        RLAST => m_axi_gmem_bias6_RLAST,
        RID => m_axi_gmem_bias6_RID,
        RUSER => m_axi_gmem_bias6_RUSER,
        RRESP => m_axi_gmem_bias6_RRESP,
        BVALID => m_axi_gmem_bias6_BVALID,
        BREADY => m_axi_gmem_bias6_BREADY,
        BRESP => m_axi_gmem_bias6_BRESP,
        BID => m_axi_gmem_bias6_BID,
        BUSER => m_axi_gmem_bias6_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARVALID,
        I_CH0_ARREADY => gmem_bias6_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARLEN,
        I_CH0_RVALID => gmem_bias6_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_RREADY,
        I_CH0_RDATA => gmem_bias6_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias6_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias6_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias6_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias6_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias7_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias7_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 128,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS7_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS7_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS7_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS7_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS7_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS7_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS7_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS7_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS7_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS7_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS7_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 12,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias7_AWVALID,
        AWREADY => m_axi_gmem_bias7_AWREADY,
        AWADDR => m_axi_gmem_bias7_AWADDR,
        AWID => m_axi_gmem_bias7_AWID,
        AWLEN => m_axi_gmem_bias7_AWLEN,
        AWSIZE => m_axi_gmem_bias7_AWSIZE,
        AWBURST => m_axi_gmem_bias7_AWBURST,
        AWLOCK => m_axi_gmem_bias7_AWLOCK,
        AWCACHE => m_axi_gmem_bias7_AWCACHE,
        AWPROT => m_axi_gmem_bias7_AWPROT,
        AWQOS => m_axi_gmem_bias7_AWQOS,
        AWREGION => m_axi_gmem_bias7_AWREGION,
        AWUSER => m_axi_gmem_bias7_AWUSER,
        WVALID => m_axi_gmem_bias7_WVALID,
        WREADY => m_axi_gmem_bias7_WREADY,
        WDATA => m_axi_gmem_bias7_WDATA,
        WSTRB => m_axi_gmem_bias7_WSTRB,
        WLAST => m_axi_gmem_bias7_WLAST,
        WID => m_axi_gmem_bias7_WID,
        WUSER => m_axi_gmem_bias7_WUSER,
        ARVALID => m_axi_gmem_bias7_ARVALID,
        ARREADY => m_axi_gmem_bias7_ARREADY,
        ARADDR => m_axi_gmem_bias7_ARADDR,
        ARID => m_axi_gmem_bias7_ARID,
        ARLEN => m_axi_gmem_bias7_ARLEN,
        ARSIZE => m_axi_gmem_bias7_ARSIZE,
        ARBURST => m_axi_gmem_bias7_ARBURST,
        ARLOCK => m_axi_gmem_bias7_ARLOCK,
        ARCACHE => m_axi_gmem_bias7_ARCACHE,
        ARPROT => m_axi_gmem_bias7_ARPROT,
        ARQOS => m_axi_gmem_bias7_ARQOS,
        ARREGION => m_axi_gmem_bias7_ARREGION,
        ARUSER => m_axi_gmem_bias7_ARUSER,
        RVALID => m_axi_gmem_bias7_RVALID,
        RREADY => m_axi_gmem_bias7_RREADY,
        RDATA => m_axi_gmem_bias7_RDATA,
        RLAST => m_axi_gmem_bias7_RLAST,
        RID => m_axi_gmem_bias7_RID,
        RUSER => m_axi_gmem_bias7_RUSER,
        RRESP => m_axi_gmem_bias7_RRESP,
        BVALID => m_axi_gmem_bias7_BVALID,
        BREADY => m_axi_gmem_bias7_BREADY,
        BRESP => m_axi_gmem_bias7_BRESP,
        BID => m_axi_gmem_bias7_BID,
        BUSER => m_axi_gmem_bias7_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARVALID,
        I_CH0_ARREADY => gmem_bias7_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARLEN,
        I_CH0_RVALID => gmem_bias7_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_RREADY,
        I_CH0_RDATA => gmem_bias7_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias7_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias7_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias7_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias7_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_bias8_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_bias8_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 32,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_BIAS8_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_BIAS8_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_BIAS8_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_BIAS8_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_BIAS8_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_BIAS8_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_BIAS8_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BIAS8_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_BIAS8_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_BIAS8_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_BIAS8_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 10,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_bias8_AWVALID,
        AWREADY => m_axi_gmem_bias8_AWREADY,
        AWADDR => m_axi_gmem_bias8_AWADDR,
        AWID => m_axi_gmem_bias8_AWID,
        AWLEN => m_axi_gmem_bias8_AWLEN,
        AWSIZE => m_axi_gmem_bias8_AWSIZE,
        AWBURST => m_axi_gmem_bias8_AWBURST,
        AWLOCK => m_axi_gmem_bias8_AWLOCK,
        AWCACHE => m_axi_gmem_bias8_AWCACHE,
        AWPROT => m_axi_gmem_bias8_AWPROT,
        AWQOS => m_axi_gmem_bias8_AWQOS,
        AWREGION => m_axi_gmem_bias8_AWREGION,
        AWUSER => m_axi_gmem_bias8_AWUSER,
        WVALID => m_axi_gmem_bias8_WVALID,
        WREADY => m_axi_gmem_bias8_WREADY,
        WDATA => m_axi_gmem_bias8_WDATA,
        WSTRB => m_axi_gmem_bias8_WSTRB,
        WLAST => m_axi_gmem_bias8_WLAST,
        WID => m_axi_gmem_bias8_WID,
        WUSER => m_axi_gmem_bias8_WUSER,
        ARVALID => m_axi_gmem_bias8_ARVALID,
        ARREADY => m_axi_gmem_bias8_ARREADY,
        ARADDR => m_axi_gmem_bias8_ARADDR,
        ARID => m_axi_gmem_bias8_ARID,
        ARLEN => m_axi_gmem_bias8_ARLEN,
        ARSIZE => m_axi_gmem_bias8_ARSIZE,
        ARBURST => m_axi_gmem_bias8_ARBURST,
        ARLOCK => m_axi_gmem_bias8_ARLOCK,
        ARCACHE => m_axi_gmem_bias8_ARCACHE,
        ARPROT => m_axi_gmem_bias8_ARPROT,
        ARQOS => m_axi_gmem_bias8_ARQOS,
        ARREGION => m_axi_gmem_bias8_ARREGION,
        ARUSER => m_axi_gmem_bias8_ARUSER,
        RVALID => m_axi_gmem_bias8_RVALID,
        RREADY => m_axi_gmem_bias8_RREADY,
        RDATA => m_axi_gmem_bias8_RDATA,
        RLAST => m_axi_gmem_bias8_RLAST,
        RID => m_axi_gmem_bias8_RID,
        RUSER => m_axi_gmem_bias8_RUSER,
        RRESP => m_axi_gmem_bias8_RRESP,
        BVALID => m_axi_gmem_bias8_BVALID,
        BREADY => m_axi_gmem_bias8_BREADY,
        BRESP => m_axi_gmem_bias8_BRESP,
        BID => m_axi_gmem_bias8_BID,
        BUSER => m_axi_gmem_bias8_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARVALID,
        I_CH0_ARREADY => gmem_bias8_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARLEN,
        I_CH0_RVALID => gmem_bias8_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_RREADY,
        I_CH0_RDATA => gmem_bias8_0_RDATA,
        I_CH0_RFIFONUM => gmem_bias8_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_bias8_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_bias8_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_bias8_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_output_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_output_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 4,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_OUTPUT_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_OUTPUT_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_OUTPUT_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_OUTPUT_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_OUTPUT_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_OUTPUT_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_OUTPUT_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_OUTPUT_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_OUTPUT_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_OUTPUT_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 9,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 0,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_output_AWVALID,
        AWREADY => m_axi_gmem_output_AWREADY,
        AWADDR => m_axi_gmem_output_AWADDR,
        AWID => m_axi_gmem_output_AWID,
        AWLEN => m_axi_gmem_output_AWLEN,
        AWSIZE => m_axi_gmem_output_AWSIZE,
        AWBURST => m_axi_gmem_output_AWBURST,
        AWLOCK => m_axi_gmem_output_AWLOCK,
        AWCACHE => m_axi_gmem_output_AWCACHE,
        AWPROT => m_axi_gmem_output_AWPROT,
        AWQOS => m_axi_gmem_output_AWQOS,
        AWREGION => m_axi_gmem_output_AWREGION,
        AWUSER => m_axi_gmem_output_AWUSER,
        WVALID => m_axi_gmem_output_WVALID,
        WREADY => m_axi_gmem_output_WREADY,
        WDATA => m_axi_gmem_output_WDATA,
        WSTRB => m_axi_gmem_output_WSTRB,
        WLAST => m_axi_gmem_output_WLAST,
        WID => m_axi_gmem_output_WID,
        WUSER => m_axi_gmem_output_WUSER,
        ARVALID => m_axi_gmem_output_ARVALID,
        ARREADY => m_axi_gmem_output_ARREADY,
        ARADDR => m_axi_gmem_output_ARADDR,
        ARID => m_axi_gmem_output_ARID,
        ARLEN => m_axi_gmem_output_ARLEN,
        ARSIZE => m_axi_gmem_output_ARSIZE,
        ARBURST => m_axi_gmem_output_ARBURST,
        ARLOCK => m_axi_gmem_output_ARLOCK,
        ARCACHE => m_axi_gmem_output_ARCACHE,
        ARPROT => m_axi_gmem_output_ARPROT,
        ARQOS => m_axi_gmem_output_ARQOS,
        ARREGION => m_axi_gmem_output_ARREGION,
        ARUSER => m_axi_gmem_output_ARUSER,
        RVALID => m_axi_gmem_output_RVALID,
        RREADY => m_axi_gmem_output_RREADY,
        RDATA => m_axi_gmem_output_RDATA,
        RLAST => m_axi_gmem_output_RLAST,
        RID => m_axi_gmem_output_RID,
        RUSER => m_axi_gmem_output_RUSER,
        RRESP => m_axi_gmem_output_RRESP,
        BVALID => m_axi_gmem_output_BVALID,
        BREADY => m_axi_gmem_output_BREADY,
        BRESP => m_axi_gmem_output_BRESP,
        BID => m_axi_gmem_output_BID,
        BUSER => m_axi_gmem_output_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => ap_const_logic_0,
        I_CH0_ARREADY => gmem_output_0_ARREADY,
        I_CH0_ARADDR => ap_const_lv64_0,
        I_CH0_ARLEN => ap_const_lv32_0,
        I_CH0_RVALID => gmem_output_0_RVALID,
        I_CH0_RREADY => ap_const_logic_0,
        I_CH0_RDATA => gmem_output_0_RDATA,
        I_CH0_RFIFONUM => gmem_output_0_RFIFONUM,
        I_CH0_AWVALID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWVALID,
        I_CH0_AWREADY => gmem_output_0_AWREADY,
        I_CH0_AWADDR => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWADDR,
        I_CH0_AWLEN => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWLEN,
        I_CH0_WVALID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WVALID,
        I_CH0_WREADY => gmem_output_0_WREADY,
        I_CH0_WDATA => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WDATA,
        I_CH0_WSTRB => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WSTRB,
        I_CH0_BVALID => gmem_output_0_BVALID,
        I_CH0_BREADY => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_BREADY);

    gmem_read_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_read_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_READ_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_READ_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_READ_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_READ_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_READ_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_READ_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_READ_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_READ_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_READ_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_READ_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_READ_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_read_AWVALID,
        AWREADY => m_axi_gmem_read_AWREADY,
        AWADDR => m_axi_gmem_read_AWADDR,
        AWID => m_axi_gmem_read_AWID,
        AWLEN => m_axi_gmem_read_AWLEN,
        AWSIZE => m_axi_gmem_read_AWSIZE,
        AWBURST => m_axi_gmem_read_AWBURST,
        AWLOCK => m_axi_gmem_read_AWLOCK,
        AWCACHE => m_axi_gmem_read_AWCACHE,
        AWPROT => m_axi_gmem_read_AWPROT,
        AWQOS => m_axi_gmem_read_AWQOS,
        AWREGION => m_axi_gmem_read_AWREGION,
        AWUSER => m_axi_gmem_read_AWUSER,
        WVALID => m_axi_gmem_read_WVALID,
        WREADY => m_axi_gmem_read_WREADY,
        WDATA => m_axi_gmem_read_WDATA,
        WSTRB => m_axi_gmem_read_WSTRB,
        WLAST => m_axi_gmem_read_WLAST,
        WID => m_axi_gmem_read_WID,
        WUSER => m_axi_gmem_read_WUSER,
        ARVALID => m_axi_gmem_read_ARVALID,
        ARREADY => m_axi_gmem_read_ARREADY,
        ARADDR => m_axi_gmem_read_ARADDR,
        ARID => m_axi_gmem_read_ARID,
        ARLEN => m_axi_gmem_read_ARLEN,
        ARSIZE => m_axi_gmem_read_ARSIZE,
        ARBURST => m_axi_gmem_read_ARBURST,
        ARLOCK => m_axi_gmem_read_ARLOCK,
        ARCACHE => m_axi_gmem_read_ARCACHE,
        ARPROT => m_axi_gmem_read_ARPROT,
        ARQOS => m_axi_gmem_read_ARQOS,
        ARREGION => m_axi_gmem_read_ARREGION,
        ARUSER => m_axi_gmem_read_ARUSER,
        RVALID => m_axi_gmem_read_RVALID,
        RREADY => m_axi_gmem_read_RREADY,
        RDATA => m_axi_gmem_read_RDATA,
        RLAST => m_axi_gmem_read_RLAST,
        RID => m_axi_gmem_read_RID,
        RUSER => m_axi_gmem_read_RUSER,
        RRESP => m_axi_gmem_read_RRESP,
        BVALID => m_axi_gmem_read_BVALID,
        BREADY => m_axi_gmem_read_BREADY,
        BRESP => m_axi_gmem_read_BRESP,
        BID => m_axi_gmem_read_BID,
        BUSER => m_axi_gmem_read_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARVALID,
        I_CH0_ARREADY => gmem_read_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARLEN,
        I_CH0_RVALID => gmem_read_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_read_0_RREADY,
        I_CH0_RDATA => gmem_read_0_RDATA,
        I_CH0_RFIFONUM => gmem_read_0_RFIFONUM,
        I_CH0_AWVALID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWVALID,
        I_CH0_AWREADY => gmem_read_0_AWREADY,
        I_CH0_AWADDR => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWADDR,
        I_CH0_AWLEN => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWLEN,
        I_CH0_WVALID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WVALID,
        I_CH0_WREADY => gmem_read_0_WREADY,
        I_CH0_WDATA => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WDATA,
        I_CH0_WSTRB => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WSTRB,
        I_CH0_BVALID => gmem_read_0_BVALID,
        I_CH0_BREADY => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_BREADY);

    gmem_weights1_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS1_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights1_AWVALID,
        AWREADY => m_axi_gmem_weights1_AWREADY,
        AWADDR => m_axi_gmem_weights1_AWADDR,
        AWID => m_axi_gmem_weights1_AWID,
        AWLEN => m_axi_gmem_weights1_AWLEN,
        AWSIZE => m_axi_gmem_weights1_AWSIZE,
        AWBURST => m_axi_gmem_weights1_AWBURST,
        AWLOCK => m_axi_gmem_weights1_AWLOCK,
        AWCACHE => m_axi_gmem_weights1_AWCACHE,
        AWPROT => m_axi_gmem_weights1_AWPROT,
        AWQOS => m_axi_gmem_weights1_AWQOS,
        AWREGION => m_axi_gmem_weights1_AWREGION,
        AWUSER => m_axi_gmem_weights1_AWUSER,
        WVALID => m_axi_gmem_weights1_WVALID,
        WREADY => m_axi_gmem_weights1_WREADY,
        WDATA => m_axi_gmem_weights1_WDATA,
        WSTRB => m_axi_gmem_weights1_WSTRB,
        WLAST => m_axi_gmem_weights1_WLAST,
        WID => m_axi_gmem_weights1_WID,
        WUSER => m_axi_gmem_weights1_WUSER,
        ARVALID => m_axi_gmem_weights1_ARVALID,
        ARREADY => m_axi_gmem_weights1_ARREADY,
        ARADDR => m_axi_gmem_weights1_ARADDR,
        ARID => m_axi_gmem_weights1_ARID,
        ARLEN => m_axi_gmem_weights1_ARLEN,
        ARSIZE => m_axi_gmem_weights1_ARSIZE,
        ARBURST => m_axi_gmem_weights1_ARBURST,
        ARLOCK => m_axi_gmem_weights1_ARLOCK,
        ARCACHE => m_axi_gmem_weights1_ARCACHE,
        ARPROT => m_axi_gmem_weights1_ARPROT,
        ARQOS => m_axi_gmem_weights1_ARQOS,
        ARREGION => m_axi_gmem_weights1_ARREGION,
        ARUSER => m_axi_gmem_weights1_ARUSER,
        RVALID => m_axi_gmem_weights1_RVALID,
        RREADY => m_axi_gmem_weights1_RREADY,
        RDATA => m_axi_gmem_weights1_RDATA,
        RLAST => m_axi_gmem_weights1_RLAST,
        RID => m_axi_gmem_weights1_RID,
        RUSER => m_axi_gmem_weights1_RUSER,
        RRESP => m_axi_gmem_weights1_RRESP,
        BVALID => m_axi_gmem_weights1_BVALID,
        BREADY => m_axi_gmem_weights1_BREADY,
        BRESP => m_axi_gmem_weights1_BRESP,
        BID => m_axi_gmem_weights1_BID,
        BUSER => m_axi_gmem_weights1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARVALID,
        I_CH0_ARREADY => gmem_weights1_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARLEN,
        I_CH0_RVALID => gmem_weights1_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_RREADY,
        I_CH0_RDATA => gmem_weights1_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights1_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights1_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights1_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights1_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights2_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS2_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights2_AWVALID,
        AWREADY => m_axi_gmem_weights2_AWREADY,
        AWADDR => m_axi_gmem_weights2_AWADDR,
        AWID => m_axi_gmem_weights2_AWID,
        AWLEN => m_axi_gmem_weights2_AWLEN,
        AWSIZE => m_axi_gmem_weights2_AWSIZE,
        AWBURST => m_axi_gmem_weights2_AWBURST,
        AWLOCK => m_axi_gmem_weights2_AWLOCK,
        AWCACHE => m_axi_gmem_weights2_AWCACHE,
        AWPROT => m_axi_gmem_weights2_AWPROT,
        AWQOS => m_axi_gmem_weights2_AWQOS,
        AWREGION => m_axi_gmem_weights2_AWREGION,
        AWUSER => m_axi_gmem_weights2_AWUSER,
        WVALID => m_axi_gmem_weights2_WVALID,
        WREADY => m_axi_gmem_weights2_WREADY,
        WDATA => m_axi_gmem_weights2_WDATA,
        WSTRB => m_axi_gmem_weights2_WSTRB,
        WLAST => m_axi_gmem_weights2_WLAST,
        WID => m_axi_gmem_weights2_WID,
        WUSER => m_axi_gmem_weights2_WUSER,
        ARVALID => m_axi_gmem_weights2_ARVALID,
        ARREADY => m_axi_gmem_weights2_ARREADY,
        ARADDR => m_axi_gmem_weights2_ARADDR,
        ARID => m_axi_gmem_weights2_ARID,
        ARLEN => m_axi_gmem_weights2_ARLEN,
        ARSIZE => m_axi_gmem_weights2_ARSIZE,
        ARBURST => m_axi_gmem_weights2_ARBURST,
        ARLOCK => m_axi_gmem_weights2_ARLOCK,
        ARCACHE => m_axi_gmem_weights2_ARCACHE,
        ARPROT => m_axi_gmem_weights2_ARPROT,
        ARQOS => m_axi_gmem_weights2_ARQOS,
        ARREGION => m_axi_gmem_weights2_ARREGION,
        ARUSER => m_axi_gmem_weights2_ARUSER,
        RVALID => m_axi_gmem_weights2_RVALID,
        RREADY => m_axi_gmem_weights2_RREADY,
        RDATA => m_axi_gmem_weights2_RDATA,
        RLAST => m_axi_gmem_weights2_RLAST,
        RID => m_axi_gmem_weights2_RID,
        RUSER => m_axi_gmem_weights2_RUSER,
        RRESP => m_axi_gmem_weights2_RRESP,
        BVALID => m_axi_gmem_weights2_BVALID,
        BREADY => m_axi_gmem_weights2_BREADY,
        BRESP => m_axi_gmem_weights2_BRESP,
        BID => m_axi_gmem_weights2_BID,
        BUSER => m_axi_gmem_weights2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARVALID,
        I_CH0_ARREADY => gmem_weights2_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARLEN,
        I_CH0_RVALID => gmem_weights2_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_RREADY,
        I_CH0_RDATA => gmem_weights2_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights2_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights2_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights2_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights2_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights3_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS3_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights3_AWVALID,
        AWREADY => m_axi_gmem_weights3_AWREADY,
        AWADDR => m_axi_gmem_weights3_AWADDR,
        AWID => m_axi_gmem_weights3_AWID,
        AWLEN => m_axi_gmem_weights3_AWLEN,
        AWSIZE => m_axi_gmem_weights3_AWSIZE,
        AWBURST => m_axi_gmem_weights3_AWBURST,
        AWLOCK => m_axi_gmem_weights3_AWLOCK,
        AWCACHE => m_axi_gmem_weights3_AWCACHE,
        AWPROT => m_axi_gmem_weights3_AWPROT,
        AWQOS => m_axi_gmem_weights3_AWQOS,
        AWREGION => m_axi_gmem_weights3_AWREGION,
        AWUSER => m_axi_gmem_weights3_AWUSER,
        WVALID => m_axi_gmem_weights3_WVALID,
        WREADY => m_axi_gmem_weights3_WREADY,
        WDATA => m_axi_gmem_weights3_WDATA,
        WSTRB => m_axi_gmem_weights3_WSTRB,
        WLAST => m_axi_gmem_weights3_WLAST,
        WID => m_axi_gmem_weights3_WID,
        WUSER => m_axi_gmem_weights3_WUSER,
        ARVALID => m_axi_gmem_weights3_ARVALID,
        ARREADY => m_axi_gmem_weights3_ARREADY,
        ARADDR => m_axi_gmem_weights3_ARADDR,
        ARID => m_axi_gmem_weights3_ARID,
        ARLEN => m_axi_gmem_weights3_ARLEN,
        ARSIZE => m_axi_gmem_weights3_ARSIZE,
        ARBURST => m_axi_gmem_weights3_ARBURST,
        ARLOCK => m_axi_gmem_weights3_ARLOCK,
        ARCACHE => m_axi_gmem_weights3_ARCACHE,
        ARPROT => m_axi_gmem_weights3_ARPROT,
        ARQOS => m_axi_gmem_weights3_ARQOS,
        ARREGION => m_axi_gmem_weights3_ARREGION,
        ARUSER => m_axi_gmem_weights3_ARUSER,
        RVALID => m_axi_gmem_weights3_RVALID,
        RREADY => m_axi_gmem_weights3_RREADY,
        RDATA => m_axi_gmem_weights3_RDATA,
        RLAST => m_axi_gmem_weights3_RLAST,
        RID => m_axi_gmem_weights3_RID,
        RUSER => m_axi_gmem_weights3_RUSER,
        RRESP => m_axi_gmem_weights3_RRESP,
        BVALID => m_axi_gmem_weights3_BVALID,
        BREADY => m_axi_gmem_weights3_BREADY,
        BRESP => m_axi_gmem_weights3_BRESP,
        BID => m_axi_gmem_weights3_BID,
        BUSER => m_axi_gmem_weights3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARVALID,
        I_CH0_ARREADY => gmem_weights3_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARLEN,
        I_CH0_RVALID => gmem_weights3_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_RREADY,
        I_CH0_RDATA => gmem_weights3_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights3_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights3_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights3_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights3_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights4_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights4_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS4_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS4_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS4_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS4_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS4_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS4_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS4_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS4_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS4_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS4_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS4_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights4_AWVALID,
        AWREADY => m_axi_gmem_weights4_AWREADY,
        AWADDR => m_axi_gmem_weights4_AWADDR,
        AWID => m_axi_gmem_weights4_AWID,
        AWLEN => m_axi_gmem_weights4_AWLEN,
        AWSIZE => m_axi_gmem_weights4_AWSIZE,
        AWBURST => m_axi_gmem_weights4_AWBURST,
        AWLOCK => m_axi_gmem_weights4_AWLOCK,
        AWCACHE => m_axi_gmem_weights4_AWCACHE,
        AWPROT => m_axi_gmem_weights4_AWPROT,
        AWQOS => m_axi_gmem_weights4_AWQOS,
        AWREGION => m_axi_gmem_weights4_AWREGION,
        AWUSER => m_axi_gmem_weights4_AWUSER,
        WVALID => m_axi_gmem_weights4_WVALID,
        WREADY => m_axi_gmem_weights4_WREADY,
        WDATA => m_axi_gmem_weights4_WDATA,
        WSTRB => m_axi_gmem_weights4_WSTRB,
        WLAST => m_axi_gmem_weights4_WLAST,
        WID => m_axi_gmem_weights4_WID,
        WUSER => m_axi_gmem_weights4_WUSER,
        ARVALID => m_axi_gmem_weights4_ARVALID,
        ARREADY => m_axi_gmem_weights4_ARREADY,
        ARADDR => m_axi_gmem_weights4_ARADDR,
        ARID => m_axi_gmem_weights4_ARID,
        ARLEN => m_axi_gmem_weights4_ARLEN,
        ARSIZE => m_axi_gmem_weights4_ARSIZE,
        ARBURST => m_axi_gmem_weights4_ARBURST,
        ARLOCK => m_axi_gmem_weights4_ARLOCK,
        ARCACHE => m_axi_gmem_weights4_ARCACHE,
        ARPROT => m_axi_gmem_weights4_ARPROT,
        ARQOS => m_axi_gmem_weights4_ARQOS,
        ARREGION => m_axi_gmem_weights4_ARREGION,
        ARUSER => m_axi_gmem_weights4_ARUSER,
        RVALID => m_axi_gmem_weights4_RVALID,
        RREADY => m_axi_gmem_weights4_RREADY,
        RDATA => m_axi_gmem_weights4_RDATA,
        RLAST => m_axi_gmem_weights4_RLAST,
        RID => m_axi_gmem_weights4_RID,
        RUSER => m_axi_gmem_weights4_RUSER,
        RRESP => m_axi_gmem_weights4_RRESP,
        BVALID => m_axi_gmem_weights4_BVALID,
        BREADY => m_axi_gmem_weights4_BREADY,
        BRESP => m_axi_gmem_weights4_BRESP,
        BID => m_axi_gmem_weights4_BID,
        BUSER => m_axi_gmem_weights4_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARVALID,
        I_CH0_ARREADY => gmem_weights4_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARLEN,
        I_CH0_RVALID => gmem_weights4_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_RREADY,
        I_CH0_RDATA => gmem_weights4_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights4_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights4_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights4_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights4_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights5_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights5_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS5_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS5_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS5_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS5_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS5_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS5_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS5_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS5_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS5_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS5_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS5_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights5_AWVALID,
        AWREADY => m_axi_gmem_weights5_AWREADY,
        AWADDR => m_axi_gmem_weights5_AWADDR,
        AWID => m_axi_gmem_weights5_AWID,
        AWLEN => m_axi_gmem_weights5_AWLEN,
        AWSIZE => m_axi_gmem_weights5_AWSIZE,
        AWBURST => m_axi_gmem_weights5_AWBURST,
        AWLOCK => m_axi_gmem_weights5_AWLOCK,
        AWCACHE => m_axi_gmem_weights5_AWCACHE,
        AWPROT => m_axi_gmem_weights5_AWPROT,
        AWQOS => m_axi_gmem_weights5_AWQOS,
        AWREGION => m_axi_gmem_weights5_AWREGION,
        AWUSER => m_axi_gmem_weights5_AWUSER,
        WVALID => m_axi_gmem_weights5_WVALID,
        WREADY => m_axi_gmem_weights5_WREADY,
        WDATA => m_axi_gmem_weights5_WDATA,
        WSTRB => m_axi_gmem_weights5_WSTRB,
        WLAST => m_axi_gmem_weights5_WLAST,
        WID => m_axi_gmem_weights5_WID,
        WUSER => m_axi_gmem_weights5_WUSER,
        ARVALID => m_axi_gmem_weights5_ARVALID,
        ARREADY => m_axi_gmem_weights5_ARREADY,
        ARADDR => m_axi_gmem_weights5_ARADDR,
        ARID => m_axi_gmem_weights5_ARID,
        ARLEN => m_axi_gmem_weights5_ARLEN,
        ARSIZE => m_axi_gmem_weights5_ARSIZE,
        ARBURST => m_axi_gmem_weights5_ARBURST,
        ARLOCK => m_axi_gmem_weights5_ARLOCK,
        ARCACHE => m_axi_gmem_weights5_ARCACHE,
        ARPROT => m_axi_gmem_weights5_ARPROT,
        ARQOS => m_axi_gmem_weights5_ARQOS,
        ARREGION => m_axi_gmem_weights5_ARREGION,
        ARUSER => m_axi_gmem_weights5_ARUSER,
        RVALID => m_axi_gmem_weights5_RVALID,
        RREADY => m_axi_gmem_weights5_RREADY,
        RDATA => m_axi_gmem_weights5_RDATA,
        RLAST => m_axi_gmem_weights5_RLAST,
        RID => m_axi_gmem_weights5_RID,
        RUSER => m_axi_gmem_weights5_RUSER,
        RRESP => m_axi_gmem_weights5_RRESP,
        BVALID => m_axi_gmem_weights5_BVALID,
        BREADY => m_axi_gmem_weights5_BREADY,
        BRESP => m_axi_gmem_weights5_BRESP,
        BID => m_axi_gmem_weights5_BID,
        BUSER => m_axi_gmem_weights5_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARVALID,
        I_CH0_ARREADY => gmem_weights5_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARLEN,
        I_CH0_RVALID => gmem_weights5_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_RREADY,
        I_CH0_RDATA => gmem_weights5_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights5_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights5_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights5_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights5_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights6_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights6_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS6_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS6_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS6_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS6_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS6_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS6_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS6_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS6_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS6_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS6_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS6_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights6_AWVALID,
        AWREADY => m_axi_gmem_weights6_AWREADY,
        AWADDR => m_axi_gmem_weights6_AWADDR,
        AWID => m_axi_gmem_weights6_AWID,
        AWLEN => m_axi_gmem_weights6_AWLEN,
        AWSIZE => m_axi_gmem_weights6_AWSIZE,
        AWBURST => m_axi_gmem_weights6_AWBURST,
        AWLOCK => m_axi_gmem_weights6_AWLOCK,
        AWCACHE => m_axi_gmem_weights6_AWCACHE,
        AWPROT => m_axi_gmem_weights6_AWPROT,
        AWQOS => m_axi_gmem_weights6_AWQOS,
        AWREGION => m_axi_gmem_weights6_AWREGION,
        AWUSER => m_axi_gmem_weights6_AWUSER,
        WVALID => m_axi_gmem_weights6_WVALID,
        WREADY => m_axi_gmem_weights6_WREADY,
        WDATA => m_axi_gmem_weights6_WDATA,
        WSTRB => m_axi_gmem_weights6_WSTRB,
        WLAST => m_axi_gmem_weights6_WLAST,
        WID => m_axi_gmem_weights6_WID,
        WUSER => m_axi_gmem_weights6_WUSER,
        ARVALID => m_axi_gmem_weights6_ARVALID,
        ARREADY => m_axi_gmem_weights6_ARREADY,
        ARADDR => m_axi_gmem_weights6_ARADDR,
        ARID => m_axi_gmem_weights6_ARID,
        ARLEN => m_axi_gmem_weights6_ARLEN,
        ARSIZE => m_axi_gmem_weights6_ARSIZE,
        ARBURST => m_axi_gmem_weights6_ARBURST,
        ARLOCK => m_axi_gmem_weights6_ARLOCK,
        ARCACHE => m_axi_gmem_weights6_ARCACHE,
        ARPROT => m_axi_gmem_weights6_ARPROT,
        ARQOS => m_axi_gmem_weights6_ARQOS,
        ARREGION => m_axi_gmem_weights6_ARREGION,
        ARUSER => m_axi_gmem_weights6_ARUSER,
        RVALID => m_axi_gmem_weights6_RVALID,
        RREADY => m_axi_gmem_weights6_RREADY,
        RDATA => m_axi_gmem_weights6_RDATA,
        RLAST => m_axi_gmem_weights6_RLAST,
        RID => m_axi_gmem_weights6_RID,
        RUSER => m_axi_gmem_weights6_RUSER,
        RRESP => m_axi_gmem_weights6_RRESP,
        BVALID => m_axi_gmem_weights6_BVALID,
        BREADY => m_axi_gmem_weights6_BREADY,
        BRESP => m_axi_gmem_weights6_BRESP,
        BID => m_axi_gmem_weights6_BID,
        BUSER => m_axi_gmem_weights6_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARVALID,
        I_CH0_ARREADY => gmem_weights6_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARLEN,
        I_CH0_RVALID => gmem_weights6_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_RREADY,
        I_CH0_RDATA => gmem_weights6_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights6_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights6_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights6_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights6_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights7_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights7_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS7_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS7_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS7_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS7_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS7_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS7_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS7_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS7_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS7_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS7_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS7_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights7_AWVALID,
        AWREADY => m_axi_gmem_weights7_AWREADY,
        AWADDR => m_axi_gmem_weights7_AWADDR,
        AWID => m_axi_gmem_weights7_AWID,
        AWLEN => m_axi_gmem_weights7_AWLEN,
        AWSIZE => m_axi_gmem_weights7_AWSIZE,
        AWBURST => m_axi_gmem_weights7_AWBURST,
        AWLOCK => m_axi_gmem_weights7_AWLOCK,
        AWCACHE => m_axi_gmem_weights7_AWCACHE,
        AWPROT => m_axi_gmem_weights7_AWPROT,
        AWQOS => m_axi_gmem_weights7_AWQOS,
        AWREGION => m_axi_gmem_weights7_AWREGION,
        AWUSER => m_axi_gmem_weights7_AWUSER,
        WVALID => m_axi_gmem_weights7_WVALID,
        WREADY => m_axi_gmem_weights7_WREADY,
        WDATA => m_axi_gmem_weights7_WDATA,
        WSTRB => m_axi_gmem_weights7_WSTRB,
        WLAST => m_axi_gmem_weights7_WLAST,
        WID => m_axi_gmem_weights7_WID,
        WUSER => m_axi_gmem_weights7_WUSER,
        ARVALID => m_axi_gmem_weights7_ARVALID,
        ARREADY => m_axi_gmem_weights7_ARREADY,
        ARADDR => m_axi_gmem_weights7_ARADDR,
        ARID => m_axi_gmem_weights7_ARID,
        ARLEN => m_axi_gmem_weights7_ARLEN,
        ARSIZE => m_axi_gmem_weights7_ARSIZE,
        ARBURST => m_axi_gmem_weights7_ARBURST,
        ARLOCK => m_axi_gmem_weights7_ARLOCK,
        ARCACHE => m_axi_gmem_weights7_ARCACHE,
        ARPROT => m_axi_gmem_weights7_ARPROT,
        ARQOS => m_axi_gmem_weights7_ARQOS,
        ARREGION => m_axi_gmem_weights7_ARREGION,
        ARUSER => m_axi_gmem_weights7_ARUSER,
        RVALID => m_axi_gmem_weights7_RVALID,
        RREADY => m_axi_gmem_weights7_RREADY,
        RDATA => m_axi_gmem_weights7_RDATA,
        RLAST => m_axi_gmem_weights7_RLAST,
        RID => m_axi_gmem_weights7_RID,
        RUSER => m_axi_gmem_weights7_RUSER,
        RRESP => m_axi_gmem_weights7_RRESP,
        BVALID => m_axi_gmem_weights7_BVALID,
        BREADY => m_axi_gmem_weights7_BREADY,
        BRESP => m_axi_gmem_weights7_BRESP,
        BID => m_axi_gmem_weights7_BID,
        BUSER => m_axi_gmem_weights7_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARVALID,
        I_CH0_ARREADY => gmem_weights7_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARLEN,
        I_CH0_RVALID => gmem_weights7_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_RREADY,
        I_CH0_RDATA => gmem_weights7_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights7_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights7_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights7_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights7_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem_weights8_m_axi_U : component ocnn6_net_8_layer_pipeline_gmem_weights8_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_WEIGHTS8_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_WEIGHTS8_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_WEIGHTS8_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS8_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS8_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS8_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS8_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_WEIGHTS8_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_WEIGHTS8_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_WEIGHTS8_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_WEIGHTS8_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 13,
        CH0_USER_DW => 32,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem_weights8_AWVALID,
        AWREADY => m_axi_gmem_weights8_AWREADY,
        AWADDR => m_axi_gmem_weights8_AWADDR,
        AWID => m_axi_gmem_weights8_AWID,
        AWLEN => m_axi_gmem_weights8_AWLEN,
        AWSIZE => m_axi_gmem_weights8_AWSIZE,
        AWBURST => m_axi_gmem_weights8_AWBURST,
        AWLOCK => m_axi_gmem_weights8_AWLOCK,
        AWCACHE => m_axi_gmem_weights8_AWCACHE,
        AWPROT => m_axi_gmem_weights8_AWPROT,
        AWQOS => m_axi_gmem_weights8_AWQOS,
        AWREGION => m_axi_gmem_weights8_AWREGION,
        AWUSER => m_axi_gmem_weights8_AWUSER,
        WVALID => m_axi_gmem_weights8_WVALID,
        WREADY => m_axi_gmem_weights8_WREADY,
        WDATA => m_axi_gmem_weights8_WDATA,
        WSTRB => m_axi_gmem_weights8_WSTRB,
        WLAST => m_axi_gmem_weights8_WLAST,
        WID => m_axi_gmem_weights8_WID,
        WUSER => m_axi_gmem_weights8_WUSER,
        ARVALID => m_axi_gmem_weights8_ARVALID,
        ARREADY => m_axi_gmem_weights8_ARREADY,
        ARADDR => m_axi_gmem_weights8_ARADDR,
        ARID => m_axi_gmem_weights8_ARID,
        ARLEN => m_axi_gmem_weights8_ARLEN,
        ARSIZE => m_axi_gmem_weights8_ARSIZE,
        ARBURST => m_axi_gmem_weights8_ARBURST,
        ARLOCK => m_axi_gmem_weights8_ARLOCK,
        ARCACHE => m_axi_gmem_weights8_ARCACHE,
        ARPROT => m_axi_gmem_weights8_ARPROT,
        ARQOS => m_axi_gmem_weights8_ARQOS,
        ARREGION => m_axi_gmem_weights8_ARREGION,
        ARUSER => m_axi_gmem_weights8_ARUSER,
        RVALID => m_axi_gmem_weights8_RVALID,
        RREADY => m_axi_gmem_weights8_RREADY,
        RDATA => m_axi_gmem_weights8_RDATA,
        RLAST => m_axi_gmem_weights8_RLAST,
        RID => m_axi_gmem_weights8_RID,
        RUSER => m_axi_gmem_weights8_RUSER,
        RRESP => m_axi_gmem_weights8_RRESP,
        BVALID => m_axi_gmem_weights8_BVALID,
        BREADY => m_axi_gmem_weights8_BREADY,
        BRESP => m_axi_gmem_weights8_BRESP,
        BID => m_axi_gmem_weights8_BID,
        BUSER => m_axi_gmem_weights8_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARVALID,
        I_CH0_ARREADY => gmem_weights8_0_ARREADY,
        I_CH0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARADDR,
        I_CH0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARLEN,
        I_CH0_RVALID => gmem_weights8_0_RVALID,
        I_CH0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_RREADY,
        I_CH0_RDATA => gmem_weights8_0_RDATA,
        I_CH0_RFIFONUM => gmem_weights8_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem_weights8_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem_weights8_0_WREADY,
        I_CH0_WDATA => ap_const_lv32_0,
        I_CH0_WSTRB => ap_const_lv4_0,
        I_CH0_BVALID => gmem_weights8_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    entry_proc_U0 : component ocnn6_net_8_layer_pipeline_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => entry_proc_U0_ap_start,
        start_full_n => entry_proc_U0_start_full_n,
        ap_done => entry_proc_U0_ap_done,
        ap_continue => entry_proc_U0_ap_continue,
        ap_idle => entry_proc_U0_ap_idle,
        ap_ready => entry_proc_U0_ap_ready,
        start_out => entry_proc_U0_start_out,
        start_write => entry_proc_U0_start_write,
        final_output_full_cubic => final_output_full_cubic,
        final_output_full_cubic_c_din => entry_proc_U0_final_output_full_cubic_c_din,
        final_output_full_cubic_c_full_n => final_output_full_cubic_c_full_n,
        final_output_full_cubic_c_write => entry_proc_U0_final_output_full_cubic_c_write,
        final_output_full_cubic_c_num_data_valid => final_output_full_cubic_c_num_data_valid,
        final_output_full_cubic_c_fifo_cap => final_output_full_cubic_c_fifo_cap,
        pruned_feature_dram_read => pruned_feature_dram_read,
        pruned_feature_dram_read_c_din => entry_proc_U0_pruned_feature_dram_read_c_din,
        pruned_feature_dram_read_c_full_n => pruned_feature_dram_read_c_full_n,
        pruned_feature_dram_read_c_write => entry_proc_U0_pruned_feature_dram_read_c_write,
        pruned_feature_dram_read_c_num_data_valid => pruned_feature_dram_read_c_num_data_valid,
        pruned_feature_dram_read_c_fifo_cap => pruned_feature_dram_read_c_fifo_cap);

    Block_entry_proc_U0 : component ocnn6_net_8_layer_pipeline_Block_entry_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_entry_proc_U0_ap_start,
        ap_done => Block_entry_proc_U0_ap_done,
        ap_continue => Block_entry_proc_U0_ap_continue,
        ap_idle => Block_entry_proc_U0_ap_idle,
        ap_ready => Block_entry_proc_U0_ap_ready,
        initial_processed_voxels_din => Block_entry_proc_U0_initial_processed_voxels_din,
        initial_processed_voxels_full_n => ap_const_logic_1,
        initial_processed_voxels_write => Block_entry_proc_U0_initial_processed_voxels_write,
        total_processed_voxels => Block_entry_proc_U0_total_processed_voxels,
        total_processed_voxels_ap_vld => Block_entry_proc_U0_total_processed_voxels_ap_vld);

    pipeline_bitmap_stage_U0 : component ocnn6_net_8_layer_pipeline_pipeline_bitmap_stage
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => pipeline_bitmap_stage_U0_ap_start,
        ap_done => pipeline_bitmap_stage_U0_ap_done,
        ap_continue => pipeline_bitmap_stage_U0_ap_continue,
        ap_idle => pipeline_bitmap_stage_U0_ap_idle,
        ap_ready => pipeline_bitmap_stage_U0_ap_ready,
        input_voxel_stream_dout => input_voxel_stream_dout,
        input_voxel_stream_empty_n => input_voxel_stream_empty_n,
        input_voxel_stream_read => pipeline_bitmap_stage_U0_input_voxel_stream_read,
        feature_data_stream_din => pipeline_bitmap_stage_U0_feature_data_stream_din,
        feature_data_stream_full_n => feature_data_stream_full_n,
        feature_data_stream_write => pipeline_bitmap_stage_U0_feature_data_stream_write,
        feature_data_stream_num_data_valid => feature_data_stream_num_data_valid,
        feature_data_stream_fifo_cap => feature_data_stream_fifo_cap,
        write_addr_stream_din => pipeline_bitmap_stage_U0_write_addr_stream_din,
        write_addr_stream_full_n => write_addr_stream_full_n,
        write_addr_stream_write => pipeline_bitmap_stage_U0_write_addr_stream_write,
        write_addr_stream_num_data_valid => write_addr_stream_num_data_valid,
        write_addr_stream_fifo_cap => write_addr_stream_fifo_cap,
        L3_bitmap_i => L3_bitmap_i,
        L3_bitmap_o => pipeline_bitmap_stage_U0_L3_bitmap_o,
        L3_bitmap_o_ap_vld => pipeline_bitmap_stage_U0_L3_bitmap_o_ap_vld,
        L2_bitmap_i => L2_bitmap_i,
        L2_bitmap_o => pipeline_bitmap_stage_U0_L2_bitmap_o,
        L2_bitmap_o_ap_vld => pipeline_bitmap_stage_U0_L2_bitmap_o_ap_vld,
        L1_bitmap_i => L1_bitmap_i,
        L1_bitmap_o => pipeline_bitmap_stage_U0_L1_bitmap_o,
        L1_bitmap_o_ap_vld => pipeline_bitmap_stage_U0_L1_bitmap_o_ap_vld,
        L0_bitmap_i => L0_bitmap_i,
        L0_bitmap_o => pipeline_bitmap_stage_U0_L0_bitmap_o,
        L0_bitmap_o_ap_vld => pipeline_bitmap_stage_U0_L0_bitmap_o_ap_vld,
        bitmap_info => pipeline_bitmap_stage_U0_bitmap_info,
        bitmap_info_ap_vld => pipeline_bitmap_stage_U0_bitmap_info_ap_vld);

    Loop_VITIS_LOOP_131_1_proc_U0 : component ocnn6_net_8_layer_pipeline_Loop_VITIS_LOOP_131_1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_131_1_proc_U0_ap_start,
        start_full_n => start_for_Block_entry_proc_24_U0_full_n,
        ap_done => Loop_VITIS_LOOP_131_1_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_131_1_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_131_1_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_131_1_proc_U0_ap_ready,
        start_out => Loop_VITIS_LOOP_131_1_proc_U0_start_out,
        start_write => Loop_VITIS_LOOP_131_1_proc_U0_start_write,
        pruned_feature_dram_read_dout => pruned_feature_dram_read_c_dout,
        pruned_feature_dram_read_empty_n => pruned_feature_dram_read_c_empty_n,
        pruned_feature_dram_read_read => Loop_VITIS_LOOP_131_1_proc_U0_pruned_feature_dram_read_read,
        pruned_feature_dram_read_num_data_valid => pruned_feature_dram_read_c_num_data_valid,
        pruned_feature_dram_read_fifo_cap => pruned_feature_dram_read_c_fifo_cap,
        feature_data_stream_dout => feature_data_stream_dout,
        feature_data_stream_empty_n => feature_data_stream_empty_n,
        feature_data_stream_read => Loop_VITIS_LOOP_131_1_proc_U0_feature_data_stream_read,
        feature_data_stream_num_data_valid => feature_data_stream_num_data_valid,
        feature_data_stream_fifo_cap => feature_data_stream_fifo_cap,
        write_addr_stream_dout => write_addr_stream_dout,
        write_addr_stream_empty_n => write_addr_stream_empty_n,
        write_addr_stream_read => Loop_VITIS_LOOP_131_1_proc_U0_write_addr_stream_read,
        write_addr_stream_num_data_valid => write_addr_stream_num_data_valid,
        write_addr_stream_fifo_cap => write_addr_stream_fifo_cap,
        m_axi_gmem_read_0_AWVALID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWVALID,
        m_axi_gmem_read_0_AWREADY => gmem_read_0_AWREADY,
        m_axi_gmem_read_0_AWADDR => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWADDR,
        m_axi_gmem_read_0_AWID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWID,
        m_axi_gmem_read_0_AWLEN => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWLEN,
        m_axi_gmem_read_0_AWSIZE => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWSIZE,
        m_axi_gmem_read_0_AWBURST => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWBURST,
        m_axi_gmem_read_0_AWLOCK => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWLOCK,
        m_axi_gmem_read_0_AWCACHE => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWCACHE,
        m_axi_gmem_read_0_AWPROT => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWPROT,
        m_axi_gmem_read_0_AWQOS => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWQOS,
        m_axi_gmem_read_0_AWREGION => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWREGION,
        m_axi_gmem_read_0_AWUSER => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_AWUSER,
        m_axi_gmem_read_0_WVALID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WVALID,
        m_axi_gmem_read_0_WREADY => gmem_read_0_WREADY,
        m_axi_gmem_read_0_WDATA => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WDATA,
        m_axi_gmem_read_0_WSTRB => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WSTRB,
        m_axi_gmem_read_0_WLAST => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WLAST,
        m_axi_gmem_read_0_WID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WID,
        m_axi_gmem_read_0_WUSER => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_WUSER,
        m_axi_gmem_read_0_ARVALID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARVALID,
        m_axi_gmem_read_0_ARREADY => ap_const_logic_0,
        m_axi_gmem_read_0_ARADDR => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARADDR,
        m_axi_gmem_read_0_ARID => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARID,
        m_axi_gmem_read_0_ARLEN => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARLEN,
        m_axi_gmem_read_0_ARSIZE => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARSIZE,
        m_axi_gmem_read_0_ARBURST => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARBURST,
        m_axi_gmem_read_0_ARLOCK => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARLOCK,
        m_axi_gmem_read_0_ARCACHE => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARCACHE,
        m_axi_gmem_read_0_ARPROT => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARPROT,
        m_axi_gmem_read_0_ARQOS => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARQOS,
        m_axi_gmem_read_0_ARREGION => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARREGION,
        m_axi_gmem_read_0_ARUSER => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_ARUSER,
        m_axi_gmem_read_0_RVALID => ap_const_logic_0,
        m_axi_gmem_read_0_RREADY => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_RREADY,
        m_axi_gmem_read_0_RDATA => ap_const_lv32_0,
        m_axi_gmem_read_0_RLAST => ap_const_logic_0,
        m_axi_gmem_read_0_RID => ap_const_lv1_0,
        m_axi_gmem_read_0_RFIFONUM => ap_const_lv13_0,
        m_axi_gmem_read_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_read_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_read_0_BVALID => gmem_read_0_BVALID,
        m_axi_gmem_read_0_BREADY => Loop_VITIS_LOOP_131_1_proc_U0_m_axi_gmem_read_0_BREADY,
        m_axi_gmem_read_0_BRESP => gmem_read_0_BRESP,
        m_axi_gmem_read_0_BID => gmem_read_0_BID,
        m_axi_gmem_read_0_BUSER => gmem_read_0_BUSER,
        pruned_voxel_count_0_out_din => Loop_VITIS_LOOP_131_1_proc_U0_pruned_voxel_count_0_out_din,
        pruned_voxel_count_0_out_full_n => pruned_voxel_count_0_loc_full_n,
        pruned_voxel_count_0_out_write => Loop_VITIS_LOOP_131_1_proc_U0_pruned_voxel_count_0_out_write,
        pruned_voxel_count_0_out_num_data_valid => pruned_voxel_count_0_loc_num_data_valid,
        pruned_voxel_count_0_out_fifo_cap => pruned_voxel_count_0_loc_fifo_cap);

    Block_entry_proc_24_U0 : component ocnn6_net_8_layer_pipeline_Block_entry_proc_24
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_entry_proc_24_U0_ap_start,
        start_full_n => start_for_Loop_VITIS_LOOP_209_5_proc_U0_full_n,
        ap_done => Block_entry_proc_24_U0_ap_done,
        ap_continue => Block_entry_proc_24_U0_ap_continue,
        ap_idle => Block_entry_proc_24_U0_ap_idle,
        ap_ready => Block_entry_proc_24_U0_ap_ready,
        start_out => Block_entry_proc_24_U0_start_out,
        start_write => Block_entry_proc_24_U0_start_write,
        pruned_voxel_count_0_loc_dout => pruned_voxel_count_0_loc_dout,
        pruned_voxel_count_0_loc_empty_n => pruned_voxel_count_0_loc_empty_n,
        pruned_voxel_count_0_loc_read => Block_entry_proc_24_U0_pruned_voxel_count_0_loc_read,
        pruned_voxel_count_0_loc_num_data_valid => pruned_voxel_count_0_loc_num_data_valid,
        pruned_voxel_count_0_loc_fifo_cap => pruned_voxel_count_0_loc_fifo_cap,
        wide_trip_count_out_din => Block_entry_proc_24_U0_wide_trip_count_out_din,
        wide_trip_count_out_full_n => wide_trip_count_loc_full_n,
        wide_trip_count_out_write => Block_entry_proc_24_U0_wide_trip_count_out_write,
        wide_trip_count_out_num_data_valid => wide_trip_count_loc_num_data_valid,
        wide_trip_count_out_fifo_cap => wide_trip_count_loc_fifo_cap,
        p_out_din => Block_entry_proc_24_U0_p_out_din,
        p_out_full_n => p_loc_full_n,
        p_out_write => Block_entry_proc_24_U0_p_out_write,
        p_out_num_data_valid => p_loc_num_data_valid,
        p_out_fifo_cap => p_loc_fifo_cap,
        pruned_voxel_count_0_reload_loc_c1_din => Block_entry_proc_24_U0_pruned_voxel_count_0_reload_loc_c1_din,
        pruned_voxel_count_0_reload_loc_c1_full_n => pruned_voxel_count_0_reload_loc_c1_full_n,
        pruned_voxel_count_0_reload_loc_c1_write => Block_entry_proc_24_U0_pruned_voxel_count_0_reload_loc_c1_write,
        pruned_voxel_count_0_reload_loc_c1_num_data_valid => pruned_voxel_count_0_reload_loc_c1_num_data_valid,
        pruned_voxel_count_0_reload_loc_c1_fifo_cap => pruned_voxel_count_0_reload_loc_c1_fifo_cap);

    Loop_VITIS_LOOP_209_5_proc_U0 : component ocnn6_net_8_layer_pipeline_Loop_VITIS_LOOP_209_5_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Loop_VITIS_LOOP_209_5_proc_U0_ap_start,
        ap_done => Loop_VITIS_LOOP_209_5_proc_U0_ap_done,
        ap_continue => Loop_VITIS_LOOP_209_5_proc_U0_ap_continue,
        ap_idle => Loop_VITIS_LOOP_209_5_proc_U0_ap_idle,
        ap_ready => Loop_VITIS_LOOP_209_5_proc_U0_ap_ready,
        pruned_voxel_count_0_reload_loc_dout => pruned_voxel_count_0_reload_loc_c1_dout,
        pruned_voxel_count_0_reload_loc_empty_n => pruned_voxel_count_0_reload_loc_c1_empty_n,
        pruned_voxel_count_0_reload_loc_read => Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_read,
        pruned_voxel_count_0_reload_loc_num_data_valid => pruned_voxel_count_0_reload_loc_c1_num_data_valid,
        pruned_voxel_count_0_reload_loc_fifo_cap => pruned_voxel_count_0_reload_loc_c1_fifo_cap,
        current_morton_list_din => Loop_VITIS_LOOP_209_5_proc_U0_current_morton_list_din,
        current_morton_list_full_n => current_morton_list_full_n,
        current_morton_list_write => Loop_VITIS_LOOP_209_5_proc_U0_current_morton_list_write,
        current_morton_list_num_data_valid => current_morton_list_num_data_valid,
        current_morton_list_fifo_cap => current_morton_list_fifo_cap,
        pruned_voxel_count_0_reload_loc_c_din => Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_c_din,
        pruned_voxel_count_0_reload_loc_c_full_n => pruned_voxel_count_0_reload_loc_c_full_n,
        pruned_voxel_count_0_reload_loc_c_write => Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_c_write,
        pruned_voxel_count_0_reload_loc_c_num_data_valid => pruned_voxel_count_0_reload_loc_c_num_data_valid,
        pruned_voxel_count_0_reload_loc_c_fifo_cap => pruned_voxel_count_0_reload_loc_c_fifo_cap);

    Block_entry_proc_25_U0 : component ocnn6_net_8_layer_pipeline_Block_entry_proc_25
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_entry_proc_25_U0_ap_start,
        ap_done => Block_entry_proc_25_U0_ap_done,
        ap_continue => Block_entry_proc_25_U0_ap_continue,
        ap_idle => Block_entry_proc_25_U0_ap_idle,
        ap_ready => Block_entry_proc_25_U0_ap_ready,
        pruned_feature_dram_read => pruned_feature_dram_read,
        m_axi_gmem_read_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWVALID,
        m_axi_gmem_read_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_read_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWADDR,
        m_axi_gmem_read_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWID,
        m_axi_gmem_read_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWLEN,
        m_axi_gmem_read_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWSIZE,
        m_axi_gmem_read_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWBURST,
        m_axi_gmem_read_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWLOCK,
        m_axi_gmem_read_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWCACHE,
        m_axi_gmem_read_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWPROT,
        m_axi_gmem_read_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWQOS,
        m_axi_gmem_read_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWREGION,
        m_axi_gmem_read_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_read_0_AWUSER,
        m_axi_gmem_read_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_read_0_WVALID,
        m_axi_gmem_read_0_WREADY => ap_const_logic_0,
        m_axi_gmem_read_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_read_0_WDATA,
        m_axi_gmem_read_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_read_0_WSTRB,
        m_axi_gmem_read_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_read_0_WLAST,
        m_axi_gmem_read_0_WID => Block_entry_proc_25_U0_m_axi_gmem_read_0_WID,
        m_axi_gmem_read_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_read_0_WUSER,
        m_axi_gmem_read_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARVALID,
        m_axi_gmem_read_0_ARREADY => gmem_read_0_ARREADY,
        m_axi_gmem_read_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARADDR,
        m_axi_gmem_read_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARID,
        m_axi_gmem_read_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARLEN,
        m_axi_gmem_read_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARSIZE,
        m_axi_gmem_read_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARBURST,
        m_axi_gmem_read_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARLOCK,
        m_axi_gmem_read_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARCACHE,
        m_axi_gmem_read_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARPROT,
        m_axi_gmem_read_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARQOS,
        m_axi_gmem_read_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARREGION,
        m_axi_gmem_read_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_read_0_ARUSER,
        m_axi_gmem_read_0_RVALID => gmem_read_0_RVALID,
        m_axi_gmem_read_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_read_0_RREADY,
        m_axi_gmem_read_0_RDATA => gmem_read_0_RDATA,
        m_axi_gmem_read_0_RLAST => gmem_read_0_RLAST,
        m_axi_gmem_read_0_RID => gmem_read_0_RID,
        m_axi_gmem_read_0_RFIFONUM => gmem_read_0_RFIFONUM,
        m_axi_gmem_read_0_RUSER => gmem_read_0_RUSER,
        m_axi_gmem_read_0_RRESP => gmem_read_0_RRESP,
        m_axi_gmem_read_0_BVALID => ap_const_logic_0,
        m_axi_gmem_read_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_read_0_BREADY,
        m_axi_gmem_read_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_read_0_BID => ap_const_lv1_0,
        m_axi_gmem_read_0_BUSER => ap_const_lv1_0,
        p_loc_dout => p_loc_dout,
        p_loc_empty_n => p_loc_empty_n,
        p_loc_read => Block_entry_proc_25_U0_p_loc_read,
        p_loc_num_data_valid => p_loc_num_data_valid,
        p_loc_fifo_cap => p_loc_fifo_cap,
        wide_trip_count_loc_dout => wide_trip_count_loc_dout,
        wide_trip_count_loc_empty_n => wide_trip_count_loc_empty_n,
        wide_trip_count_loc_read => Block_entry_proc_25_U0_wide_trip_count_loc_read,
        wide_trip_count_loc_num_data_valid => wide_trip_count_loc_num_data_valid,
        wide_trip_count_loc_fifo_cap => wide_trip_count_loc_fifo_cap,
        pruned_voxel_count_0_reload_loc_dout => pruned_voxel_count_0_reload_loc_c_dout,
        pruned_voxel_count_0_reload_loc_empty_n => pruned_voxel_count_0_reload_loc_c_empty_n,
        pruned_voxel_count_0_reload_loc_read => Block_entry_proc_25_U0_pruned_voxel_count_0_reload_loc_read,
        pruned_voxel_count_0_reload_loc_num_data_valid => pruned_voxel_count_0_reload_loc_c_num_data_valid,
        pruned_voxel_count_0_reload_loc_fifo_cap => pruned_voxel_count_0_reload_loc_c_fifo_cap,
        current_morton_list_dout => current_morton_list_dout,
        current_morton_list_empty_n => current_morton_list_empty_n,
        current_morton_list_read => Block_entry_proc_25_U0_current_morton_list_read,
        current_morton_list_num_data_valid => current_morton_list_num_data_valid,
        current_morton_list_fifo_cap => current_morton_list_fifo_cap,
        layer_pipeline_streams_8_din => Block_entry_proc_25_U0_layer_pipeline_streams_8_din,
        layer_pipeline_streams_8_full_n => layer_pipeline_streams_8_full_n,
        layer_pipeline_streams_8_write => Block_entry_proc_25_U0_layer_pipeline_streams_8_write,
        layer_pipeline_streams_8_num_data_valid => layer_pipeline_streams_8_num_data_valid,
        layer_pipeline_streams_8_fifo_cap => layer_pipeline_streams_8_fifo_cap,
        m_axi_gmem_weights1_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWVALID,
        m_axi_gmem_weights1_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights1_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWADDR,
        m_axi_gmem_weights1_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWID,
        m_axi_gmem_weights1_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWLEN,
        m_axi_gmem_weights1_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWSIZE,
        m_axi_gmem_weights1_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWBURST,
        m_axi_gmem_weights1_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWLOCK,
        m_axi_gmem_weights1_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWCACHE,
        m_axi_gmem_weights1_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWPROT,
        m_axi_gmem_weights1_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWQOS,
        m_axi_gmem_weights1_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWREGION,
        m_axi_gmem_weights1_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_AWUSER,
        m_axi_gmem_weights1_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WVALID,
        m_axi_gmem_weights1_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights1_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WDATA,
        m_axi_gmem_weights1_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WSTRB,
        m_axi_gmem_weights1_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WLAST,
        m_axi_gmem_weights1_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WID,
        m_axi_gmem_weights1_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_WUSER,
        m_axi_gmem_weights1_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARVALID,
        m_axi_gmem_weights1_0_ARREADY => gmem_weights1_0_ARREADY,
        m_axi_gmem_weights1_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARADDR,
        m_axi_gmem_weights1_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARID,
        m_axi_gmem_weights1_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARLEN,
        m_axi_gmem_weights1_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARSIZE,
        m_axi_gmem_weights1_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARBURST,
        m_axi_gmem_weights1_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARLOCK,
        m_axi_gmem_weights1_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARCACHE,
        m_axi_gmem_weights1_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARPROT,
        m_axi_gmem_weights1_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARQOS,
        m_axi_gmem_weights1_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARREGION,
        m_axi_gmem_weights1_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_ARUSER,
        m_axi_gmem_weights1_0_RVALID => gmem_weights1_0_RVALID,
        m_axi_gmem_weights1_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_RREADY,
        m_axi_gmem_weights1_0_RDATA => gmem_weights1_0_RDATA,
        m_axi_gmem_weights1_0_RLAST => gmem_weights1_0_RLAST,
        m_axi_gmem_weights1_0_RID => gmem_weights1_0_RID,
        m_axi_gmem_weights1_0_RFIFONUM => gmem_weights1_0_RFIFONUM,
        m_axi_gmem_weights1_0_RUSER => gmem_weights1_0_RUSER,
        m_axi_gmem_weights1_0_RRESP => gmem_weights1_0_RRESP,
        m_axi_gmem_weights1_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights1_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights1_0_BREADY,
        m_axi_gmem_weights1_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights1_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights1_0_BUSER => ap_const_lv1_0,
        conv1_weights => conv1_weights,
        m_axi_gmem_weights2_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWVALID,
        m_axi_gmem_weights2_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights2_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWADDR,
        m_axi_gmem_weights2_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWID,
        m_axi_gmem_weights2_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWLEN,
        m_axi_gmem_weights2_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWSIZE,
        m_axi_gmem_weights2_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWBURST,
        m_axi_gmem_weights2_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWLOCK,
        m_axi_gmem_weights2_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWCACHE,
        m_axi_gmem_weights2_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWPROT,
        m_axi_gmem_weights2_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWQOS,
        m_axi_gmem_weights2_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWREGION,
        m_axi_gmem_weights2_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_AWUSER,
        m_axi_gmem_weights2_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WVALID,
        m_axi_gmem_weights2_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights2_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WDATA,
        m_axi_gmem_weights2_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WSTRB,
        m_axi_gmem_weights2_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WLAST,
        m_axi_gmem_weights2_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WID,
        m_axi_gmem_weights2_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_WUSER,
        m_axi_gmem_weights2_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARVALID,
        m_axi_gmem_weights2_0_ARREADY => gmem_weights2_0_ARREADY,
        m_axi_gmem_weights2_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARADDR,
        m_axi_gmem_weights2_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARID,
        m_axi_gmem_weights2_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARLEN,
        m_axi_gmem_weights2_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARSIZE,
        m_axi_gmem_weights2_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARBURST,
        m_axi_gmem_weights2_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARLOCK,
        m_axi_gmem_weights2_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARCACHE,
        m_axi_gmem_weights2_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARPROT,
        m_axi_gmem_weights2_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARQOS,
        m_axi_gmem_weights2_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARREGION,
        m_axi_gmem_weights2_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_ARUSER,
        m_axi_gmem_weights2_0_RVALID => gmem_weights2_0_RVALID,
        m_axi_gmem_weights2_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_RREADY,
        m_axi_gmem_weights2_0_RDATA => gmem_weights2_0_RDATA,
        m_axi_gmem_weights2_0_RLAST => gmem_weights2_0_RLAST,
        m_axi_gmem_weights2_0_RID => gmem_weights2_0_RID,
        m_axi_gmem_weights2_0_RFIFONUM => gmem_weights2_0_RFIFONUM,
        m_axi_gmem_weights2_0_RUSER => gmem_weights2_0_RUSER,
        m_axi_gmem_weights2_0_RRESP => gmem_weights2_0_RRESP,
        m_axi_gmem_weights2_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights2_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights2_0_BREADY,
        m_axi_gmem_weights2_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights2_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights2_0_BUSER => ap_const_lv1_0,
        conv2_weights => conv2_weights,
        m_axi_gmem_weights3_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWVALID,
        m_axi_gmem_weights3_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights3_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWADDR,
        m_axi_gmem_weights3_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWID,
        m_axi_gmem_weights3_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWLEN,
        m_axi_gmem_weights3_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWSIZE,
        m_axi_gmem_weights3_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWBURST,
        m_axi_gmem_weights3_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWLOCK,
        m_axi_gmem_weights3_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWCACHE,
        m_axi_gmem_weights3_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWPROT,
        m_axi_gmem_weights3_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWQOS,
        m_axi_gmem_weights3_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWREGION,
        m_axi_gmem_weights3_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_AWUSER,
        m_axi_gmem_weights3_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WVALID,
        m_axi_gmem_weights3_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights3_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WDATA,
        m_axi_gmem_weights3_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WSTRB,
        m_axi_gmem_weights3_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WLAST,
        m_axi_gmem_weights3_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WID,
        m_axi_gmem_weights3_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_WUSER,
        m_axi_gmem_weights3_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARVALID,
        m_axi_gmem_weights3_0_ARREADY => gmem_weights3_0_ARREADY,
        m_axi_gmem_weights3_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARADDR,
        m_axi_gmem_weights3_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARID,
        m_axi_gmem_weights3_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARLEN,
        m_axi_gmem_weights3_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARSIZE,
        m_axi_gmem_weights3_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARBURST,
        m_axi_gmem_weights3_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARLOCK,
        m_axi_gmem_weights3_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARCACHE,
        m_axi_gmem_weights3_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARPROT,
        m_axi_gmem_weights3_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARQOS,
        m_axi_gmem_weights3_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARREGION,
        m_axi_gmem_weights3_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_ARUSER,
        m_axi_gmem_weights3_0_RVALID => gmem_weights3_0_RVALID,
        m_axi_gmem_weights3_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_RREADY,
        m_axi_gmem_weights3_0_RDATA => gmem_weights3_0_RDATA,
        m_axi_gmem_weights3_0_RLAST => gmem_weights3_0_RLAST,
        m_axi_gmem_weights3_0_RID => gmem_weights3_0_RID,
        m_axi_gmem_weights3_0_RFIFONUM => gmem_weights3_0_RFIFONUM,
        m_axi_gmem_weights3_0_RUSER => gmem_weights3_0_RUSER,
        m_axi_gmem_weights3_0_RRESP => gmem_weights3_0_RRESP,
        m_axi_gmem_weights3_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights3_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights3_0_BREADY,
        m_axi_gmem_weights3_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights3_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights3_0_BUSER => ap_const_lv1_0,
        conv3_weights => conv3_weights,
        m_axi_gmem_weights4_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWVALID,
        m_axi_gmem_weights4_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights4_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWADDR,
        m_axi_gmem_weights4_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWID,
        m_axi_gmem_weights4_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWLEN,
        m_axi_gmem_weights4_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWSIZE,
        m_axi_gmem_weights4_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWBURST,
        m_axi_gmem_weights4_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWLOCK,
        m_axi_gmem_weights4_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWCACHE,
        m_axi_gmem_weights4_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWPROT,
        m_axi_gmem_weights4_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWQOS,
        m_axi_gmem_weights4_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWREGION,
        m_axi_gmem_weights4_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_AWUSER,
        m_axi_gmem_weights4_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WVALID,
        m_axi_gmem_weights4_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights4_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WDATA,
        m_axi_gmem_weights4_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WSTRB,
        m_axi_gmem_weights4_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WLAST,
        m_axi_gmem_weights4_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WID,
        m_axi_gmem_weights4_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_WUSER,
        m_axi_gmem_weights4_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARVALID,
        m_axi_gmem_weights4_0_ARREADY => gmem_weights4_0_ARREADY,
        m_axi_gmem_weights4_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARADDR,
        m_axi_gmem_weights4_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARID,
        m_axi_gmem_weights4_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARLEN,
        m_axi_gmem_weights4_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARSIZE,
        m_axi_gmem_weights4_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARBURST,
        m_axi_gmem_weights4_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARLOCK,
        m_axi_gmem_weights4_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARCACHE,
        m_axi_gmem_weights4_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARPROT,
        m_axi_gmem_weights4_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARQOS,
        m_axi_gmem_weights4_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARREGION,
        m_axi_gmem_weights4_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_ARUSER,
        m_axi_gmem_weights4_0_RVALID => gmem_weights4_0_RVALID,
        m_axi_gmem_weights4_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_RREADY,
        m_axi_gmem_weights4_0_RDATA => gmem_weights4_0_RDATA,
        m_axi_gmem_weights4_0_RLAST => gmem_weights4_0_RLAST,
        m_axi_gmem_weights4_0_RID => gmem_weights4_0_RID,
        m_axi_gmem_weights4_0_RFIFONUM => gmem_weights4_0_RFIFONUM,
        m_axi_gmem_weights4_0_RUSER => gmem_weights4_0_RUSER,
        m_axi_gmem_weights4_0_RRESP => gmem_weights4_0_RRESP,
        m_axi_gmem_weights4_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights4_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights4_0_BREADY,
        m_axi_gmem_weights4_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights4_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights4_0_BUSER => ap_const_lv1_0,
        conv4_weights => conv4_weights,
        m_axi_gmem_weights5_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWVALID,
        m_axi_gmem_weights5_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights5_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWADDR,
        m_axi_gmem_weights5_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWID,
        m_axi_gmem_weights5_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWLEN,
        m_axi_gmem_weights5_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWSIZE,
        m_axi_gmem_weights5_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWBURST,
        m_axi_gmem_weights5_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWLOCK,
        m_axi_gmem_weights5_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWCACHE,
        m_axi_gmem_weights5_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWPROT,
        m_axi_gmem_weights5_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWQOS,
        m_axi_gmem_weights5_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWREGION,
        m_axi_gmem_weights5_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_AWUSER,
        m_axi_gmem_weights5_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WVALID,
        m_axi_gmem_weights5_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights5_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WDATA,
        m_axi_gmem_weights5_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WSTRB,
        m_axi_gmem_weights5_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WLAST,
        m_axi_gmem_weights5_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WID,
        m_axi_gmem_weights5_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_WUSER,
        m_axi_gmem_weights5_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARVALID,
        m_axi_gmem_weights5_0_ARREADY => gmem_weights5_0_ARREADY,
        m_axi_gmem_weights5_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARADDR,
        m_axi_gmem_weights5_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARID,
        m_axi_gmem_weights5_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARLEN,
        m_axi_gmem_weights5_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARSIZE,
        m_axi_gmem_weights5_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARBURST,
        m_axi_gmem_weights5_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARLOCK,
        m_axi_gmem_weights5_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARCACHE,
        m_axi_gmem_weights5_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARPROT,
        m_axi_gmem_weights5_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARQOS,
        m_axi_gmem_weights5_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARREGION,
        m_axi_gmem_weights5_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_ARUSER,
        m_axi_gmem_weights5_0_RVALID => gmem_weights5_0_RVALID,
        m_axi_gmem_weights5_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_RREADY,
        m_axi_gmem_weights5_0_RDATA => gmem_weights5_0_RDATA,
        m_axi_gmem_weights5_0_RLAST => gmem_weights5_0_RLAST,
        m_axi_gmem_weights5_0_RID => gmem_weights5_0_RID,
        m_axi_gmem_weights5_0_RFIFONUM => gmem_weights5_0_RFIFONUM,
        m_axi_gmem_weights5_0_RUSER => gmem_weights5_0_RUSER,
        m_axi_gmem_weights5_0_RRESP => gmem_weights5_0_RRESP,
        m_axi_gmem_weights5_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights5_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights5_0_BREADY,
        m_axi_gmem_weights5_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights5_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights5_0_BUSER => ap_const_lv1_0,
        conv5_weights => conv5_weights,
        m_axi_gmem_weights6_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWVALID,
        m_axi_gmem_weights6_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights6_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWADDR,
        m_axi_gmem_weights6_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWID,
        m_axi_gmem_weights6_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWLEN,
        m_axi_gmem_weights6_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWSIZE,
        m_axi_gmem_weights6_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWBURST,
        m_axi_gmem_weights6_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWLOCK,
        m_axi_gmem_weights6_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWCACHE,
        m_axi_gmem_weights6_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWPROT,
        m_axi_gmem_weights6_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWQOS,
        m_axi_gmem_weights6_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWREGION,
        m_axi_gmem_weights6_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_AWUSER,
        m_axi_gmem_weights6_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WVALID,
        m_axi_gmem_weights6_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights6_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WDATA,
        m_axi_gmem_weights6_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WSTRB,
        m_axi_gmem_weights6_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WLAST,
        m_axi_gmem_weights6_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WID,
        m_axi_gmem_weights6_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_WUSER,
        m_axi_gmem_weights6_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARVALID,
        m_axi_gmem_weights6_0_ARREADY => gmem_weights6_0_ARREADY,
        m_axi_gmem_weights6_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARADDR,
        m_axi_gmem_weights6_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARID,
        m_axi_gmem_weights6_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARLEN,
        m_axi_gmem_weights6_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARSIZE,
        m_axi_gmem_weights6_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARBURST,
        m_axi_gmem_weights6_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARLOCK,
        m_axi_gmem_weights6_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARCACHE,
        m_axi_gmem_weights6_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARPROT,
        m_axi_gmem_weights6_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARQOS,
        m_axi_gmem_weights6_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARREGION,
        m_axi_gmem_weights6_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_ARUSER,
        m_axi_gmem_weights6_0_RVALID => gmem_weights6_0_RVALID,
        m_axi_gmem_weights6_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_RREADY,
        m_axi_gmem_weights6_0_RDATA => gmem_weights6_0_RDATA,
        m_axi_gmem_weights6_0_RLAST => gmem_weights6_0_RLAST,
        m_axi_gmem_weights6_0_RID => gmem_weights6_0_RID,
        m_axi_gmem_weights6_0_RFIFONUM => gmem_weights6_0_RFIFONUM,
        m_axi_gmem_weights6_0_RUSER => gmem_weights6_0_RUSER,
        m_axi_gmem_weights6_0_RRESP => gmem_weights6_0_RRESP,
        m_axi_gmem_weights6_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights6_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights6_0_BREADY,
        m_axi_gmem_weights6_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights6_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights6_0_BUSER => ap_const_lv1_0,
        conv6_weights => conv6_weights,
        m_axi_gmem_weights7_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWVALID,
        m_axi_gmem_weights7_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights7_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWADDR,
        m_axi_gmem_weights7_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWID,
        m_axi_gmem_weights7_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWLEN,
        m_axi_gmem_weights7_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWSIZE,
        m_axi_gmem_weights7_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWBURST,
        m_axi_gmem_weights7_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWLOCK,
        m_axi_gmem_weights7_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWCACHE,
        m_axi_gmem_weights7_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWPROT,
        m_axi_gmem_weights7_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWQOS,
        m_axi_gmem_weights7_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWREGION,
        m_axi_gmem_weights7_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_AWUSER,
        m_axi_gmem_weights7_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WVALID,
        m_axi_gmem_weights7_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights7_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WDATA,
        m_axi_gmem_weights7_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WSTRB,
        m_axi_gmem_weights7_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WLAST,
        m_axi_gmem_weights7_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WID,
        m_axi_gmem_weights7_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_WUSER,
        m_axi_gmem_weights7_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARVALID,
        m_axi_gmem_weights7_0_ARREADY => gmem_weights7_0_ARREADY,
        m_axi_gmem_weights7_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARADDR,
        m_axi_gmem_weights7_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARID,
        m_axi_gmem_weights7_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARLEN,
        m_axi_gmem_weights7_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARSIZE,
        m_axi_gmem_weights7_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARBURST,
        m_axi_gmem_weights7_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARLOCK,
        m_axi_gmem_weights7_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARCACHE,
        m_axi_gmem_weights7_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARPROT,
        m_axi_gmem_weights7_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARQOS,
        m_axi_gmem_weights7_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARREGION,
        m_axi_gmem_weights7_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_ARUSER,
        m_axi_gmem_weights7_0_RVALID => gmem_weights7_0_RVALID,
        m_axi_gmem_weights7_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_RREADY,
        m_axi_gmem_weights7_0_RDATA => gmem_weights7_0_RDATA,
        m_axi_gmem_weights7_0_RLAST => gmem_weights7_0_RLAST,
        m_axi_gmem_weights7_0_RID => gmem_weights7_0_RID,
        m_axi_gmem_weights7_0_RFIFONUM => gmem_weights7_0_RFIFONUM,
        m_axi_gmem_weights7_0_RUSER => gmem_weights7_0_RUSER,
        m_axi_gmem_weights7_0_RRESP => gmem_weights7_0_RRESP,
        m_axi_gmem_weights7_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights7_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights7_0_BREADY,
        m_axi_gmem_weights7_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights7_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights7_0_BUSER => ap_const_lv1_0,
        fc1_weights => fc1_weights,
        m_axi_gmem_weights8_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWVALID,
        m_axi_gmem_weights8_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_weights8_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWADDR,
        m_axi_gmem_weights8_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWID,
        m_axi_gmem_weights8_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWLEN,
        m_axi_gmem_weights8_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWSIZE,
        m_axi_gmem_weights8_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWBURST,
        m_axi_gmem_weights8_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWLOCK,
        m_axi_gmem_weights8_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWCACHE,
        m_axi_gmem_weights8_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWPROT,
        m_axi_gmem_weights8_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWQOS,
        m_axi_gmem_weights8_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWREGION,
        m_axi_gmem_weights8_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_AWUSER,
        m_axi_gmem_weights8_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WVALID,
        m_axi_gmem_weights8_0_WREADY => ap_const_logic_0,
        m_axi_gmem_weights8_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WDATA,
        m_axi_gmem_weights8_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WSTRB,
        m_axi_gmem_weights8_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WLAST,
        m_axi_gmem_weights8_0_WID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WID,
        m_axi_gmem_weights8_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_WUSER,
        m_axi_gmem_weights8_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARVALID,
        m_axi_gmem_weights8_0_ARREADY => gmem_weights8_0_ARREADY,
        m_axi_gmem_weights8_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARADDR,
        m_axi_gmem_weights8_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARID,
        m_axi_gmem_weights8_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARLEN,
        m_axi_gmem_weights8_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARSIZE,
        m_axi_gmem_weights8_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARBURST,
        m_axi_gmem_weights8_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARLOCK,
        m_axi_gmem_weights8_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARCACHE,
        m_axi_gmem_weights8_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARPROT,
        m_axi_gmem_weights8_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARQOS,
        m_axi_gmem_weights8_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARREGION,
        m_axi_gmem_weights8_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_ARUSER,
        m_axi_gmem_weights8_0_RVALID => gmem_weights8_0_RVALID,
        m_axi_gmem_weights8_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_RREADY,
        m_axi_gmem_weights8_0_RDATA => gmem_weights8_0_RDATA,
        m_axi_gmem_weights8_0_RLAST => gmem_weights8_0_RLAST,
        m_axi_gmem_weights8_0_RID => gmem_weights8_0_RID,
        m_axi_gmem_weights8_0_RFIFONUM => gmem_weights8_0_RFIFONUM,
        m_axi_gmem_weights8_0_RUSER => gmem_weights8_0_RUSER,
        m_axi_gmem_weights8_0_RRESP => gmem_weights8_0_RRESP,
        m_axi_gmem_weights8_0_BVALID => ap_const_logic_0,
        m_axi_gmem_weights8_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_weights8_0_BREADY,
        m_axi_gmem_weights8_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_weights8_0_BID => ap_const_lv1_0,
        m_axi_gmem_weights8_0_BUSER => ap_const_lv1_0,
        fc2_weights => fc2_weights,
        m_axi_gmem_bias1_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWVALID,
        m_axi_gmem_bias1_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias1_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWADDR,
        m_axi_gmem_bias1_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWID,
        m_axi_gmem_bias1_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWLEN,
        m_axi_gmem_bias1_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWSIZE,
        m_axi_gmem_bias1_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWBURST,
        m_axi_gmem_bias1_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWLOCK,
        m_axi_gmem_bias1_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWCACHE,
        m_axi_gmem_bias1_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWPROT,
        m_axi_gmem_bias1_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWQOS,
        m_axi_gmem_bias1_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWREGION,
        m_axi_gmem_bias1_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_AWUSER,
        m_axi_gmem_bias1_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WVALID,
        m_axi_gmem_bias1_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias1_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WDATA,
        m_axi_gmem_bias1_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WSTRB,
        m_axi_gmem_bias1_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WLAST,
        m_axi_gmem_bias1_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WID,
        m_axi_gmem_bias1_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_WUSER,
        m_axi_gmem_bias1_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARVALID,
        m_axi_gmem_bias1_0_ARREADY => gmem_bias1_0_ARREADY,
        m_axi_gmem_bias1_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARADDR,
        m_axi_gmem_bias1_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARID,
        m_axi_gmem_bias1_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARLEN,
        m_axi_gmem_bias1_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARSIZE,
        m_axi_gmem_bias1_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARBURST,
        m_axi_gmem_bias1_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARLOCK,
        m_axi_gmem_bias1_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARCACHE,
        m_axi_gmem_bias1_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARPROT,
        m_axi_gmem_bias1_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARQOS,
        m_axi_gmem_bias1_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARREGION,
        m_axi_gmem_bias1_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_ARUSER,
        m_axi_gmem_bias1_0_RVALID => gmem_bias1_0_RVALID,
        m_axi_gmem_bias1_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_RREADY,
        m_axi_gmem_bias1_0_RDATA => gmem_bias1_0_RDATA,
        m_axi_gmem_bias1_0_RLAST => gmem_bias1_0_RLAST,
        m_axi_gmem_bias1_0_RID => gmem_bias1_0_RID,
        m_axi_gmem_bias1_0_RFIFONUM => gmem_bias1_0_RFIFONUM,
        m_axi_gmem_bias1_0_RUSER => gmem_bias1_0_RUSER,
        m_axi_gmem_bias1_0_RRESP => gmem_bias1_0_RRESP,
        m_axi_gmem_bias1_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias1_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias1_0_BREADY,
        m_axi_gmem_bias1_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias1_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias1_0_BUSER => ap_const_lv1_0,
        conv1_bias => conv1_bias,
        m_axi_gmem_bias2_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWVALID,
        m_axi_gmem_bias2_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias2_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWADDR,
        m_axi_gmem_bias2_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWID,
        m_axi_gmem_bias2_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWLEN,
        m_axi_gmem_bias2_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWSIZE,
        m_axi_gmem_bias2_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWBURST,
        m_axi_gmem_bias2_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWLOCK,
        m_axi_gmem_bias2_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWCACHE,
        m_axi_gmem_bias2_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWPROT,
        m_axi_gmem_bias2_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWQOS,
        m_axi_gmem_bias2_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWREGION,
        m_axi_gmem_bias2_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_AWUSER,
        m_axi_gmem_bias2_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WVALID,
        m_axi_gmem_bias2_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias2_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WDATA,
        m_axi_gmem_bias2_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WSTRB,
        m_axi_gmem_bias2_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WLAST,
        m_axi_gmem_bias2_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WID,
        m_axi_gmem_bias2_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_WUSER,
        m_axi_gmem_bias2_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARVALID,
        m_axi_gmem_bias2_0_ARREADY => gmem_bias2_0_ARREADY,
        m_axi_gmem_bias2_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARADDR,
        m_axi_gmem_bias2_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARID,
        m_axi_gmem_bias2_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARLEN,
        m_axi_gmem_bias2_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARSIZE,
        m_axi_gmem_bias2_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARBURST,
        m_axi_gmem_bias2_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARLOCK,
        m_axi_gmem_bias2_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARCACHE,
        m_axi_gmem_bias2_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARPROT,
        m_axi_gmem_bias2_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARQOS,
        m_axi_gmem_bias2_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARREGION,
        m_axi_gmem_bias2_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_ARUSER,
        m_axi_gmem_bias2_0_RVALID => gmem_bias2_0_RVALID,
        m_axi_gmem_bias2_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_RREADY,
        m_axi_gmem_bias2_0_RDATA => gmem_bias2_0_RDATA,
        m_axi_gmem_bias2_0_RLAST => gmem_bias2_0_RLAST,
        m_axi_gmem_bias2_0_RID => gmem_bias2_0_RID,
        m_axi_gmem_bias2_0_RFIFONUM => gmem_bias2_0_RFIFONUM,
        m_axi_gmem_bias2_0_RUSER => gmem_bias2_0_RUSER,
        m_axi_gmem_bias2_0_RRESP => gmem_bias2_0_RRESP,
        m_axi_gmem_bias2_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias2_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias2_0_BREADY,
        m_axi_gmem_bias2_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias2_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias2_0_BUSER => ap_const_lv1_0,
        conv2_bias => conv2_bias,
        m_axi_gmem_bias3_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWVALID,
        m_axi_gmem_bias3_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias3_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWADDR,
        m_axi_gmem_bias3_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWID,
        m_axi_gmem_bias3_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWLEN,
        m_axi_gmem_bias3_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWSIZE,
        m_axi_gmem_bias3_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWBURST,
        m_axi_gmem_bias3_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWLOCK,
        m_axi_gmem_bias3_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWCACHE,
        m_axi_gmem_bias3_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWPROT,
        m_axi_gmem_bias3_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWQOS,
        m_axi_gmem_bias3_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWREGION,
        m_axi_gmem_bias3_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_AWUSER,
        m_axi_gmem_bias3_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WVALID,
        m_axi_gmem_bias3_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias3_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WDATA,
        m_axi_gmem_bias3_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WSTRB,
        m_axi_gmem_bias3_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WLAST,
        m_axi_gmem_bias3_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WID,
        m_axi_gmem_bias3_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_WUSER,
        m_axi_gmem_bias3_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARVALID,
        m_axi_gmem_bias3_0_ARREADY => gmem_bias3_0_ARREADY,
        m_axi_gmem_bias3_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARADDR,
        m_axi_gmem_bias3_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARID,
        m_axi_gmem_bias3_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARLEN,
        m_axi_gmem_bias3_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARSIZE,
        m_axi_gmem_bias3_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARBURST,
        m_axi_gmem_bias3_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARLOCK,
        m_axi_gmem_bias3_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARCACHE,
        m_axi_gmem_bias3_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARPROT,
        m_axi_gmem_bias3_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARQOS,
        m_axi_gmem_bias3_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARREGION,
        m_axi_gmem_bias3_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_ARUSER,
        m_axi_gmem_bias3_0_RVALID => gmem_bias3_0_RVALID,
        m_axi_gmem_bias3_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_RREADY,
        m_axi_gmem_bias3_0_RDATA => gmem_bias3_0_RDATA,
        m_axi_gmem_bias3_0_RLAST => gmem_bias3_0_RLAST,
        m_axi_gmem_bias3_0_RID => gmem_bias3_0_RID,
        m_axi_gmem_bias3_0_RFIFONUM => gmem_bias3_0_RFIFONUM,
        m_axi_gmem_bias3_0_RUSER => gmem_bias3_0_RUSER,
        m_axi_gmem_bias3_0_RRESP => gmem_bias3_0_RRESP,
        m_axi_gmem_bias3_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias3_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias3_0_BREADY,
        m_axi_gmem_bias3_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias3_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias3_0_BUSER => ap_const_lv1_0,
        conv3_bias => conv3_bias,
        m_axi_gmem_bias4_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWVALID,
        m_axi_gmem_bias4_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias4_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWADDR,
        m_axi_gmem_bias4_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWID,
        m_axi_gmem_bias4_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWLEN,
        m_axi_gmem_bias4_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWSIZE,
        m_axi_gmem_bias4_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWBURST,
        m_axi_gmem_bias4_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWLOCK,
        m_axi_gmem_bias4_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWCACHE,
        m_axi_gmem_bias4_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWPROT,
        m_axi_gmem_bias4_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWQOS,
        m_axi_gmem_bias4_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWREGION,
        m_axi_gmem_bias4_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_AWUSER,
        m_axi_gmem_bias4_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WVALID,
        m_axi_gmem_bias4_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias4_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WDATA,
        m_axi_gmem_bias4_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WSTRB,
        m_axi_gmem_bias4_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WLAST,
        m_axi_gmem_bias4_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WID,
        m_axi_gmem_bias4_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_WUSER,
        m_axi_gmem_bias4_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARVALID,
        m_axi_gmem_bias4_0_ARREADY => gmem_bias4_0_ARREADY,
        m_axi_gmem_bias4_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARADDR,
        m_axi_gmem_bias4_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARID,
        m_axi_gmem_bias4_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARLEN,
        m_axi_gmem_bias4_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARSIZE,
        m_axi_gmem_bias4_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARBURST,
        m_axi_gmem_bias4_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARLOCK,
        m_axi_gmem_bias4_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARCACHE,
        m_axi_gmem_bias4_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARPROT,
        m_axi_gmem_bias4_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARQOS,
        m_axi_gmem_bias4_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARREGION,
        m_axi_gmem_bias4_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_ARUSER,
        m_axi_gmem_bias4_0_RVALID => gmem_bias4_0_RVALID,
        m_axi_gmem_bias4_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_RREADY,
        m_axi_gmem_bias4_0_RDATA => gmem_bias4_0_RDATA,
        m_axi_gmem_bias4_0_RLAST => gmem_bias4_0_RLAST,
        m_axi_gmem_bias4_0_RID => gmem_bias4_0_RID,
        m_axi_gmem_bias4_0_RFIFONUM => gmem_bias4_0_RFIFONUM,
        m_axi_gmem_bias4_0_RUSER => gmem_bias4_0_RUSER,
        m_axi_gmem_bias4_0_RRESP => gmem_bias4_0_RRESP,
        m_axi_gmem_bias4_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias4_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias4_0_BREADY,
        m_axi_gmem_bias4_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias4_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias4_0_BUSER => ap_const_lv1_0,
        conv4_bias => conv4_bias,
        m_axi_gmem_bias5_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWVALID,
        m_axi_gmem_bias5_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias5_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWADDR,
        m_axi_gmem_bias5_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWID,
        m_axi_gmem_bias5_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWLEN,
        m_axi_gmem_bias5_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWSIZE,
        m_axi_gmem_bias5_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWBURST,
        m_axi_gmem_bias5_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWLOCK,
        m_axi_gmem_bias5_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWCACHE,
        m_axi_gmem_bias5_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWPROT,
        m_axi_gmem_bias5_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWQOS,
        m_axi_gmem_bias5_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWREGION,
        m_axi_gmem_bias5_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_AWUSER,
        m_axi_gmem_bias5_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WVALID,
        m_axi_gmem_bias5_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias5_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WDATA,
        m_axi_gmem_bias5_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WSTRB,
        m_axi_gmem_bias5_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WLAST,
        m_axi_gmem_bias5_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WID,
        m_axi_gmem_bias5_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_WUSER,
        m_axi_gmem_bias5_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARVALID,
        m_axi_gmem_bias5_0_ARREADY => gmem_bias5_0_ARREADY,
        m_axi_gmem_bias5_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARADDR,
        m_axi_gmem_bias5_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARID,
        m_axi_gmem_bias5_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARLEN,
        m_axi_gmem_bias5_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARSIZE,
        m_axi_gmem_bias5_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARBURST,
        m_axi_gmem_bias5_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARLOCK,
        m_axi_gmem_bias5_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARCACHE,
        m_axi_gmem_bias5_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARPROT,
        m_axi_gmem_bias5_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARQOS,
        m_axi_gmem_bias5_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARREGION,
        m_axi_gmem_bias5_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_ARUSER,
        m_axi_gmem_bias5_0_RVALID => gmem_bias5_0_RVALID,
        m_axi_gmem_bias5_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_RREADY,
        m_axi_gmem_bias5_0_RDATA => gmem_bias5_0_RDATA,
        m_axi_gmem_bias5_0_RLAST => gmem_bias5_0_RLAST,
        m_axi_gmem_bias5_0_RID => gmem_bias5_0_RID,
        m_axi_gmem_bias5_0_RFIFONUM => gmem_bias5_0_RFIFONUM,
        m_axi_gmem_bias5_0_RUSER => gmem_bias5_0_RUSER,
        m_axi_gmem_bias5_0_RRESP => gmem_bias5_0_RRESP,
        m_axi_gmem_bias5_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias5_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias5_0_BREADY,
        m_axi_gmem_bias5_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias5_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias5_0_BUSER => ap_const_lv1_0,
        conv5_bias => conv5_bias,
        m_axi_gmem_bias6_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWVALID,
        m_axi_gmem_bias6_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias6_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWADDR,
        m_axi_gmem_bias6_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWID,
        m_axi_gmem_bias6_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWLEN,
        m_axi_gmem_bias6_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWSIZE,
        m_axi_gmem_bias6_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWBURST,
        m_axi_gmem_bias6_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWLOCK,
        m_axi_gmem_bias6_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWCACHE,
        m_axi_gmem_bias6_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWPROT,
        m_axi_gmem_bias6_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWQOS,
        m_axi_gmem_bias6_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWREGION,
        m_axi_gmem_bias6_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_AWUSER,
        m_axi_gmem_bias6_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WVALID,
        m_axi_gmem_bias6_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias6_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WDATA,
        m_axi_gmem_bias6_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WSTRB,
        m_axi_gmem_bias6_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WLAST,
        m_axi_gmem_bias6_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WID,
        m_axi_gmem_bias6_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_WUSER,
        m_axi_gmem_bias6_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARVALID,
        m_axi_gmem_bias6_0_ARREADY => gmem_bias6_0_ARREADY,
        m_axi_gmem_bias6_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARADDR,
        m_axi_gmem_bias6_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARID,
        m_axi_gmem_bias6_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARLEN,
        m_axi_gmem_bias6_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARSIZE,
        m_axi_gmem_bias6_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARBURST,
        m_axi_gmem_bias6_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARLOCK,
        m_axi_gmem_bias6_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARCACHE,
        m_axi_gmem_bias6_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARPROT,
        m_axi_gmem_bias6_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARQOS,
        m_axi_gmem_bias6_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARREGION,
        m_axi_gmem_bias6_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_ARUSER,
        m_axi_gmem_bias6_0_RVALID => gmem_bias6_0_RVALID,
        m_axi_gmem_bias6_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_RREADY,
        m_axi_gmem_bias6_0_RDATA => gmem_bias6_0_RDATA,
        m_axi_gmem_bias6_0_RLAST => gmem_bias6_0_RLAST,
        m_axi_gmem_bias6_0_RID => gmem_bias6_0_RID,
        m_axi_gmem_bias6_0_RFIFONUM => gmem_bias6_0_RFIFONUM,
        m_axi_gmem_bias6_0_RUSER => gmem_bias6_0_RUSER,
        m_axi_gmem_bias6_0_RRESP => gmem_bias6_0_RRESP,
        m_axi_gmem_bias6_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias6_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias6_0_BREADY,
        m_axi_gmem_bias6_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias6_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias6_0_BUSER => ap_const_lv1_0,
        conv6_bias => conv6_bias,
        m_axi_gmem_bias7_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWVALID,
        m_axi_gmem_bias7_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias7_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWADDR,
        m_axi_gmem_bias7_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWID,
        m_axi_gmem_bias7_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWLEN,
        m_axi_gmem_bias7_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWSIZE,
        m_axi_gmem_bias7_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWBURST,
        m_axi_gmem_bias7_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWLOCK,
        m_axi_gmem_bias7_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWCACHE,
        m_axi_gmem_bias7_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWPROT,
        m_axi_gmem_bias7_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWQOS,
        m_axi_gmem_bias7_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWREGION,
        m_axi_gmem_bias7_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_AWUSER,
        m_axi_gmem_bias7_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WVALID,
        m_axi_gmem_bias7_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias7_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WDATA,
        m_axi_gmem_bias7_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WSTRB,
        m_axi_gmem_bias7_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WLAST,
        m_axi_gmem_bias7_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WID,
        m_axi_gmem_bias7_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_WUSER,
        m_axi_gmem_bias7_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARVALID,
        m_axi_gmem_bias7_0_ARREADY => gmem_bias7_0_ARREADY,
        m_axi_gmem_bias7_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARADDR,
        m_axi_gmem_bias7_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARID,
        m_axi_gmem_bias7_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARLEN,
        m_axi_gmem_bias7_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARSIZE,
        m_axi_gmem_bias7_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARBURST,
        m_axi_gmem_bias7_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARLOCK,
        m_axi_gmem_bias7_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARCACHE,
        m_axi_gmem_bias7_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARPROT,
        m_axi_gmem_bias7_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARQOS,
        m_axi_gmem_bias7_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARREGION,
        m_axi_gmem_bias7_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_ARUSER,
        m_axi_gmem_bias7_0_RVALID => gmem_bias7_0_RVALID,
        m_axi_gmem_bias7_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_RREADY,
        m_axi_gmem_bias7_0_RDATA => gmem_bias7_0_RDATA,
        m_axi_gmem_bias7_0_RLAST => gmem_bias7_0_RLAST,
        m_axi_gmem_bias7_0_RID => gmem_bias7_0_RID,
        m_axi_gmem_bias7_0_RFIFONUM => gmem_bias7_0_RFIFONUM,
        m_axi_gmem_bias7_0_RUSER => gmem_bias7_0_RUSER,
        m_axi_gmem_bias7_0_RRESP => gmem_bias7_0_RRESP,
        m_axi_gmem_bias7_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias7_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias7_0_BREADY,
        m_axi_gmem_bias7_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias7_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias7_0_BUSER => ap_const_lv1_0,
        fc1_bias => fc1_bias,
        m_axi_gmem_bias8_0_AWVALID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWVALID,
        m_axi_gmem_bias8_0_AWREADY => ap_const_logic_0,
        m_axi_gmem_bias8_0_AWADDR => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWADDR,
        m_axi_gmem_bias8_0_AWID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWID,
        m_axi_gmem_bias8_0_AWLEN => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWLEN,
        m_axi_gmem_bias8_0_AWSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWSIZE,
        m_axi_gmem_bias8_0_AWBURST => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWBURST,
        m_axi_gmem_bias8_0_AWLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWLOCK,
        m_axi_gmem_bias8_0_AWCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWCACHE,
        m_axi_gmem_bias8_0_AWPROT => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWPROT,
        m_axi_gmem_bias8_0_AWQOS => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWQOS,
        m_axi_gmem_bias8_0_AWREGION => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWREGION,
        m_axi_gmem_bias8_0_AWUSER => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_AWUSER,
        m_axi_gmem_bias8_0_WVALID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WVALID,
        m_axi_gmem_bias8_0_WREADY => ap_const_logic_0,
        m_axi_gmem_bias8_0_WDATA => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WDATA,
        m_axi_gmem_bias8_0_WSTRB => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WSTRB,
        m_axi_gmem_bias8_0_WLAST => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WLAST,
        m_axi_gmem_bias8_0_WID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WID,
        m_axi_gmem_bias8_0_WUSER => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_WUSER,
        m_axi_gmem_bias8_0_ARVALID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARVALID,
        m_axi_gmem_bias8_0_ARREADY => gmem_bias8_0_ARREADY,
        m_axi_gmem_bias8_0_ARADDR => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARADDR,
        m_axi_gmem_bias8_0_ARID => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARID,
        m_axi_gmem_bias8_0_ARLEN => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARLEN,
        m_axi_gmem_bias8_0_ARSIZE => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARSIZE,
        m_axi_gmem_bias8_0_ARBURST => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARBURST,
        m_axi_gmem_bias8_0_ARLOCK => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARLOCK,
        m_axi_gmem_bias8_0_ARCACHE => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARCACHE,
        m_axi_gmem_bias8_0_ARPROT => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARPROT,
        m_axi_gmem_bias8_0_ARQOS => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARQOS,
        m_axi_gmem_bias8_0_ARREGION => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARREGION,
        m_axi_gmem_bias8_0_ARUSER => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_ARUSER,
        m_axi_gmem_bias8_0_RVALID => gmem_bias8_0_RVALID,
        m_axi_gmem_bias8_0_RREADY => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_RREADY,
        m_axi_gmem_bias8_0_RDATA => gmem_bias8_0_RDATA,
        m_axi_gmem_bias8_0_RLAST => gmem_bias8_0_RLAST,
        m_axi_gmem_bias8_0_RID => gmem_bias8_0_RID,
        m_axi_gmem_bias8_0_RFIFONUM => gmem_bias8_0_RFIFONUM,
        m_axi_gmem_bias8_0_RUSER => gmem_bias8_0_RUSER,
        m_axi_gmem_bias8_0_RRESP => gmem_bias8_0_RRESP,
        m_axi_gmem_bias8_0_BVALID => ap_const_logic_0,
        m_axi_gmem_bias8_0_BREADY => Block_entry_proc_25_U0_m_axi_gmem_bias8_0_BREADY,
        m_axi_gmem_bias8_0_BRESP => ap_const_lv2_0,
        m_axi_gmem_bias8_0_BID => ap_const_lv1_0,
        m_axi_gmem_bias8_0_BUSER => ap_const_lv1_0,
        fc2_bias => fc2_bias);

    ocnn6_final_layer_output_reconstruction_streaming_U0 : component ocnn6_net_8_layer_pipeline_ocnn6_final_layer_output_reconstruction_streaming
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ocnn6_final_layer_output_reconstruction_streaming_U0_ap_start,
        ap_done => ocnn6_final_layer_output_reconstruction_streaming_U0_ap_done,
        ap_continue => ocnn6_final_layer_output_reconstruction_streaming_U0_ap_continue,
        ap_idle => ocnn6_final_layer_output_reconstruction_streaming_U0_ap_idle,
        ap_ready => ocnn6_final_layer_output_reconstruction_streaming_U0_ap_ready,
        layer_pipeline_streams_8_dout => layer_pipeline_streams_8_dout,
        layer_pipeline_streams_8_empty_n => layer_pipeline_streams_8_empty_n,
        layer_pipeline_streams_8_read => ocnn6_final_layer_output_reconstruction_streaming_U0_layer_pipeline_streams_8_read,
        layer_pipeline_streams_8_num_data_valid => layer_pipeline_streams_8_num_data_valid,
        layer_pipeline_streams_8_fifo_cap => layer_pipeline_streams_8_fifo_cap,
        m_axi_gmem_output_0_AWVALID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWVALID,
        m_axi_gmem_output_0_AWREADY => gmem_output_0_AWREADY,
        m_axi_gmem_output_0_AWADDR => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWADDR,
        m_axi_gmem_output_0_AWID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWID,
        m_axi_gmem_output_0_AWLEN => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWLEN,
        m_axi_gmem_output_0_AWSIZE => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWSIZE,
        m_axi_gmem_output_0_AWBURST => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWBURST,
        m_axi_gmem_output_0_AWLOCK => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWLOCK,
        m_axi_gmem_output_0_AWCACHE => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWCACHE,
        m_axi_gmem_output_0_AWPROT => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWPROT,
        m_axi_gmem_output_0_AWQOS => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWQOS,
        m_axi_gmem_output_0_AWREGION => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWREGION,
        m_axi_gmem_output_0_AWUSER => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_AWUSER,
        m_axi_gmem_output_0_WVALID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WVALID,
        m_axi_gmem_output_0_WREADY => gmem_output_0_WREADY,
        m_axi_gmem_output_0_WDATA => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WDATA,
        m_axi_gmem_output_0_WSTRB => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WSTRB,
        m_axi_gmem_output_0_WLAST => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WLAST,
        m_axi_gmem_output_0_WID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WID,
        m_axi_gmem_output_0_WUSER => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_WUSER,
        m_axi_gmem_output_0_ARVALID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARVALID,
        m_axi_gmem_output_0_ARREADY => ap_const_logic_0,
        m_axi_gmem_output_0_ARADDR => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARADDR,
        m_axi_gmem_output_0_ARID => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARID,
        m_axi_gmem_output_0_ARLEN => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARLEN,
        m_axi_gmem_output_0_ARSIZE => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARSIZE,
        m_axi_gmem_output_0_ARBURST => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARBURST,
        m_axi_gmem_output_0_ARLOCK => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARLOCK,
        m_axi_gmem_output_0_ARCACHE => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARCACHE,
        m_axi_gmem_output_0_ARPROT => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARPROT,
        m_axi_gmem_output_0_ARQOS => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARQOS,
        m_axi_gmem_output_0_ARREGION => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARREGION,
        m_axi_gmem_output_0_ARUSER => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_ARUSER,
        m_axi_gmem_output_0_RVALID => ap_const_logic_0,
        m_axi_gmem_output_0_RREADY => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_RREADY,
        m_axi_gmem_output_0_RDATA => ap_const_lv32_0,
        m_axi_gmem_output_0_RLAST => ap_const_logic_0,
        m_axi_gmem_output_0_RID => ap_const_lv1_0,
        m_axi_gmem_output_0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_output_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_output_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_output_0_BVALID => gmem_output_0_BVALID,
        m_axi_gmem_output_0_BREADY => ocnn6_final_layer_output_reconstruction_streaming_U0_m_axi_gmem_output_0_BREADY,
        m_axi_gmem_output_0_BRESP => gmem_output_0_BRESP,
        m_axi_gmem_output_0_BID => gmem_output_0_BID,
        m_axi_gmem_output_0_BUSER => gmem_output_0_BUSER,
        full_cubic_output_dout => final_output_full_cubic_c_dout,
        full_cubic_output_empty_n => final_output_full_cubic_c_empty_n,
        full_cubic_output_read => ocnn6_final_layer_output_reconstruction_streaming_U0_full_cubic_output_read,
        full_cubic_output_num_data_valid => final_output_full_cubic_c_num_data_valid,
        full_cubic_output_fifo_cap => final_output_full_cubic_c_fifo_cap);

    final_output_full_cubic_c_U : component ocnn6_net_8_layer_pipeline_fifo_w64_d1024_A_x6
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_final_output_full_cubic_c_din,
        if_full_n => final_output_full_cubic_c_full_n,
        if_write => entry_proc_U0_final_output_full_cubic_c_write,
        if_dout => final_output_full_cubic_c_dout,
        if_empty_n => final_output_full_cubic_c_empty_n,
        if_read => ocnn6_final_layer_output_reconstruction_streaming_U0_full_cubic_output_read,
        if_num_data_valid => final_output_full_cubic_c_num_data_valid,
        if_fifo_cap => final_output_full_cubic_c_fifo_cap);

    pruned_feature_dram_read_c_U : component ocnn6_net_8_layer_pipeline_fifo_w64_d1024_A_x6
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => entry_proc_U0_pruned_feature_dram_read_c_din,
        if_full_n => pruned_feature_dram_read_c_full_n,
        if_write => entry_proc_U0_pruned_feature_dram_read_c_write,
        if_dout => pruned_feature_dram_read_c_dout,
        if_empty_n => pruned_feature_dram_read_c_empty_n,
        if_read => Loop_VITIS_LOOP_131_1_proc_U0_pruned_feature_dram_read_read,
        if_num_data_valid => pruned_feature_dram_read_c_num_data_valid,
        if_fifo_cap => pruned_feature_dram_read_c_fifo_cap);

    feature_data_stream_U : component ocnn6_net_8_layer_pipeline_fifo_w1085_d1024_A_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pipeline_bitmap_stage_U0_feature_data_stream_din,
        if_full_n => feature_data_stream_full_n,
        if_write => pipeline_bitmap_stage_U0_feature_data_stream_write,
        if_dout => feature_data_stream_dout,
        if_empty_n => feature_data_stream_empty_n,
        if_read => Loop_VITIS_LOOP_131_1_proc_U0_feature_data_stream_read,
        if_num_data_valid => feature_data_stream_num_data_valid,
        if_fifo_cap => feature_data_stream_fifo_cap);

    write_addr_stream_U : component ocnn6_net_8_layer_pipeline_fifo_w60_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => pipeline_bitmap_stage_U0_write_addr_stream_din,
        if_full_n => write_addr_stream_full_n,
        if_write => pipeline_bitmap_stage_U0_write_addr_stream_write,
        if_dout => write_addr_stream_dout,
        if_empty_n => write_addr_stream_empty_n,
        if_read => Loop_VITIS_LOOP_131_1_proc_U0_write_addr_stream_read,
        if_num_data_valid => write_addr_stream_num_data_valid,
        if_fifo_cap => write_addr_stream_fifo_cap);

    pruned_voxel_count_0_loc_U : component ocnn6_net_8_layer_pipeline_fifo_w32_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_VITIS_LOOP_131_1_proc_U0_pruned_voxel_count_0_out_din,
        if_full_n => pruned_voxel_count_0_loc_full_n,
        if_write => Loop_VITIS_LOOP_131_1_proc_U0_pruned_voxel_count_0_out_write,
        if_dout => pruned_voxel_count_0_loc_dout,
        if_empty_n => pruned_voxel_count_0_loc_empty_n,
        if_read => Block_entry_proc_24_U0_pruned_voxel_count_0_loc_read,
        if_num_data_valid => pruned_voxel_count_0_loc_num_data_valid,
        if_fifo_cap => pruned_voxel_count_0_loc_fifo_cap);

    wide_trip_count_loc_U : component ocnn6_net_8_layer_pipeline_fifo_w32_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry_proc_24_U0_wide_trip_count_out_din,
        if_full_n => wide_trip_count_loc_full_n,
        if_write => Block_entry_proc_24_U0_wide_trip_count_out_write,
        if_dout => wide_trip_count_loc_dout,
        if_empty_n => wide_trip_count_loc_empty_n,
        if_read => Block_entry_proc_25_U0_wide_trip_count_loc_read,
        if_num_data_valid => wide_trip_count_loc_num_data_valid,
        if_fifo_cap => wide_trip_count_loc_fifo_cap);

    p_loc_U : component ocnn6_net_8_layer_pipeline_fifo_w34_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry_proc_24_U0_p_out_din,
        if_full_n => p_loc_full_n,
        if_write => Block_entry_proc_24_U0_p_out_write,
        if_dout => p_loc_dout,
        if_empty_n => p_loc_empty_n,
        if_read => Block_entry_proc_25_U0_p_loc_read,
        if_num_data_valid => p_loc_num_data_valid,
        if_fifo_cap => p_loc_fifo_cap);

    pruned_voxel_count_0_reload_loc_c1_U : component ocnn6_net_8_layer_pipeline_fifo_w32_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry_proc_24_U0_pruned_voxel_count_0_reload_loc_c1_din,
        if_full_n => pruned_voxel_count_0_reload_loc_c1_full_n,
        if_write => Block_entry_proc_24_U0_pruned_voxel_count_0_reload_loc_c1_write,
        if_dout => pruned_voxel_count_0_reload_loc_c1_dout,
        if_empty_n => pruned_voxel_count_0_reload_loc_c1_empty_n,
        if_read => Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_read,
        if_num_data_valid => pruned_voxel_count_0_reload_loc_c1_num_data_valid,
        if_fifo_cap => pruned_voxel_count_0_reload_loc_c1_fifo_cap);

    current_morton_list_U : component ocnn6_net_8_layer_pipeline_fifo_w9_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_VITIS_LOOP_209_5_proc_U0_current_morton_list_din,
        if_full_n => current_morton_list_full_n,
        if_write => Loop_VITIS_LOOP_209_5_proc_U0_current_morton_list_write,
        if_dout => current_morton_list_dout,
        if_empty_n => current_morton_list_empty_n,
        if_read => Block_entry_proc_25_U0_current_morton_list_read,
        if_num_data_valid => current_morton_list_num_data_valid,
        if_fifo_cap => current_morton_list_fifo_cap);

    pruned_voxel_count_0_reload_loc_c_U : component ocnn6_net_8_layer_pipeline_fifo_w32_d1024_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_c_din,
        if_full_n => pruned_voxel_count_0_reload_loc_c_full_n,
        if_write => Loop_VITIS_LOOP_209_5_proc_U0_pruned_voxel_count_0_reload_loc_c_write,
        if_dout => pruned_voxel_count_0_reload_loc_c_dout,
        if_empty_n => pruned_voxel_count_0_reload_loc_c_empty_n,
        if_read => Block_entry_proc_25_U0_pruned_voxel_count_0_reload_loc_read,
        if_num_data_valid => pruned_voxel_count_0_reload_loc_c_num_data_valid,
        if_fifo_cap => pruned_voxel_count_0_reload_loc_c_fifo_cap);

    layer_pipeline_streams_8_U : component ocnn6_net_8_layer_pipeline_fifo_w1085_d1024_A_x0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_entry_proc_25_U0_layer_pipeline_streams_8_din,
        if_full_n => layer_pipeline_streams_8_full_n,
        if_write => Block_entry_proc_25_U0_layer_pipeline_streams_8_write,
        if_dout => layer_pipeline_streams_8_dout,
        if_empty_n => layer_pipeline_streams_8_empty_n,
        if_read => ocnn6_final_layer_output_reconstruction_streaming_U0_layer_pipeline_streams_8_read,
        if_num_data_valid => layer_pipeline_streams_8_num_data_valid,
        if_fifo_cap => layer_pipeline_streams_8_fifo_cap);

    start_for_Loop_VITIS_LOOP_131_1_proc_U0_U : component ocnn6_net_8_layer_pipeline_start_for_Loop_VITIS_LOOP_131_1_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_VITIS_LOOP_131_1_proc_U0_din,
        if_full_n => start_for_Loop_VITIS_LOOP_131_1_proc_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_Loop_VITIS_LOOP_131_1_proc_U0_dout,
        if_empty_n => start_for_Loop_VITIS_LOOP_131_1_proc_U0_empty_n,
        if_read => Loop_VITIS_LOOP_131_1_proc_U0_ap_ready);

    start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_U : component ocnn6_net_8_layer_pipeline_start_for_ocnn6_final_layer_output_reconstruction_streaming_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_din,
        if_full_n => start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_full_n,
        if_write => entry_proc_U0_start_write,
        if_dout => start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_dout,
        if_empty_n => start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_empty_n,
        if_read => ocnn6_final_layer_output_reconstruction_streaming_U0_ap_ready);

    start_for_Block_entry_proc_24_U0_U : component ocnn6_net_8_layer_pipeline_start_for_Block_entry_proc_24_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_entry_proc_24_U0_din,
        if_full_n => start_for_Block_entry_proc_24_U0_full_n,
        if_write => Loop_VITIS_LOOP_131_1_proc_U0_start_write,
        if_dout => start_for_Block_entry_proc_24_U0_dout,
        if_empty_n => start_for_Block_entry_proc_24_U0_empty_n,
        if_read => Block_entry_proc_24_U0_ap_ready);

    start_for_Loop_VITIS_LOOP_209_5_proc_U0_U : component ocnn6_net_8_layer_pipeline_start_for_Loop_VITIS_LOOP_209_5_proc_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_VITIS_LOOP_209_5_proc_U0_din,
        if_full_n => start_for_Loop_VITIS_LOOP_209_5_proc_U0_full_n,
        if_write => Block_entry_proc_24_U0_start_write,
        if_dout => start_for_Loop_VITIS_LOOP_209_5_proc_U0_dout,
        if_empty_n => start_for_Loop_VITIS_LOOP_209_5_proc_U0_empty_n,
        if_read => Loop_VITIS_LOOP_209_5_proc_U0_ap_ready);





    ap_sync_reg_Block_entry_proc_25_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_entry_proc_25_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_entry_proc_25_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_entry_proc_25_U0_ap_ready <= ap_sync_Block_entry_proc_25_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_entry_proc_U0_ap_ready <= ap_sync_Block_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_entry_proc_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready <= ap_sync_pipeline_bitmap_stage_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;

    Block_entry_proc_24_U0_ap_continue <= ap_const_logic_1;
    Block_entry_proc_24_U0_ap_start <= start_for_Block_entry_proc_24_U0_empty_n;
    Block_entry_proc_25_U0_ap_continue <= ap_const_logic_1;
    Block_entry_proc_25_U0_ap_start <= ((ap_sync_reg_Block_entry_proc_25_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_entry_proc_U0_ap_continue <= ap_sync_done;
    Block_entry_proc_U0_ap_start <= ((ap_sync_reg_Block_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    L0_bitmap_o <= pipeline_bitmap_stage_U0_L0_bitmap_o;
    L0_bitmap_o_ap_vld <= pipeline_bitmap_stage_U0_L0_bitmap_o_ap_vld;
    L1_bitmap_o <= pipeline_bitmap_stage_U0_L1_bitmap_o;
    L1_bitmap_o_ap_vld <= pipeline_bitmap_stage_U0_L1_bitmap_o_ap_vld;
    L2_bitmap_o <= pipeline_bitmap_stage_U0_L2_bitmap_o;
    L2_bitmap_o_ap_vld <= pipeline_bitmap_stage_U0_L2_bitmap_o_ap_vld;
    L3_bitmap_o <= pipeline_bitmap_stage_U0_L3_bitmap_o;
    L3_bitmap_o_ap_vld <= pipeline_bitmap_stage_U0_L3_bitmap_o_ap_vld;
    Loop_VITIS_LOOP_131_1_proc_U0_ap_continue <= ap_sync_done;
    Loop_VITIS_LOOP_131_1_proc_U0_ap_start <= start_for_Loop_VITIS_LOOP_131_1_proc_U0_empty_n;
    Loop_VITIS_LOOP_209_5_proc_U0_ap_continue <= ap_const_logic_1;
    Loop_VITIS_LOOP_209_5_proc_U0_ap_start <= start_for_Loop_VITIS_LOOP_209_5_proc_U0_empty_n;
    ap_done <= ap_sync_done;
    ap_idle <= (pipeline_bitmap_stage_U0_ap_idle and ocnn6_final_layer_output_reconstruction_streaming_U0_ap_idle and entry_proc_U0_ap_idle and Loop_VITIS_LOOP_209_5_proc_U0_ap_idle and Loop_VITIS_LOOP_131_1_proc_U0_ap_idle and Block_entry_proc_U0_ap_idle and Block_entry_proc_25_U0_ap_idle and Block_entry_proc_24_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_Block_entry_proc_25_U0_ap_ready <= (ap_sync_reg_Block_entry_proc_25_U0_ap_ready or Block_entry_proc_25_U0_ap_ready);
    ap_sync_Block_entry_proc_U0_ap_ready <= (ap_sync_reg_Block_entry_proc_U0_ap_ready or Block_entry_proc_U0_ap_ready);
    ap_sync_done <= (pipeline_bitmap_stage_U0_ap_done and ocnn6_final_layer_output_reconstruction_streaming_U0_ap_done and Loop_VITIS_LOOP_131_1_proc_U0_ap_done and Block_entry_proc_U0_ap_done);
    ap_sync_entry_proc_U0_ap_ready <= (entry_proc_U0_ap_ready or ap_sync_reg_entry_proc_U0_ap_ready);
    ap_sync_pipeline_bitmap_stage_U0_ap_ready <= (pipeline_bitmap_stage_U0_ap_ready or ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready);
    ap_sync_ready <= (ap_sync_pipeline_bitmap_stage_U0_ap_ready and ap_sync_entry_proc_U0_ap_ready and ap_sync_Block_entry_proc_U0_ap_ready and ap_sync_Block_entry_proc_25_U0_ap_ready);
    entry_proc_U0_ap_continue <= ap_const_logic_1;
    entry_proc_U0_ap_start <= ((ap_sync_reg_entry_proc_U0_ap_ready xor ap_const_logic_1) and ap_start);
    entry_proc_U0_start_full_n <= (start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_full_n and start_for_Loop_VITIS_LOOP_131_1_proc_U0_full_n);
    gmem_bias1_0_RID <= ap_const_lv1_0;
    gmem_bias1_0_RLAST <= ap_const_logic_0;
    gmem_bias1_0_RRESP <= ap_const_lv2_0;
    gmem_bias1_0_RUSER <= ap_const_lv1_0;
    gmem_bias2_0_RID <= ap_const_lv1_0;
    gmem_bias2_0_RLAST <= ap_const_logic_0;
    gmem_bias2_0_RRESP <= ap_const_lv2_0;
    gmem_bias2_0_RUSER <= ap_const_lv1_0;
    gmem_bias3_0_RID <= ap_const_lv1_0;
    gmem_bias3_0_RLAST <= ap_const_logic_0;
    gmem_bias3_0_RRESP <= ap_const_lv2_0;
    gmem_bias3_0_RUSER <= ap_const_lv1_0;
    gmem_bias4_0_RID <= ap_const_lv1_0;
    gmem_bias4_0_RLAST <= ap_const_logic_0;
    gmem_bias4_0_RRESP <= ap_const_lv2_0;
    gmem_bias4_0_RUSER <= ap_const_lv1_0;
    gmem_bias5_0_RID <= ap_const_lv1_0;
    gmem_bias5_0_RLAST <= ap_const_logic_0;
    gmem_bias5_0_RRESP <= ap_const_lv2_0;
    gmem_bias5_0_RUSER <= ap_const_lv1_0;
    gmem_bias6_0_RID <= ap_const_lv1_0;
    gmem_bias6_0_RLAST <= ap_const_logic_0;
    gmem_bias6_0_RRESP <= ap_const_lv2_0;
    gmem_bias6_0_RUSER <= ap_const_lv1_0;
    gmem_bias7_0_RID <= ap_const_lv1_0;
    gmem_bias7_0_RLAST <= ap_const_logic_0;
    gmem_bias7_0_RRESP <= ap_const_lv2_0;
    gmem_bias7_0_RUSER <= ap_const_lv1_0;
    gmem_bias8_0_RID <= ap_const_lv1_0;
    gmem_bias8_0_RLAST <= ap_const_logic_0;
    gmem_bias8_0_RRESP <= ap_const_lv2_0;
    gmem_bias8_0_RUSER <= ap_const_lv1_0;
    gmem_output_0_BID <= ap_const_lv1_0;
    gmem_output_0_BRESP <= ap_const_lv2_0;
    gmem_output_0_BUSER <= ap_const_lv1_0;
    gmem_read_0_BID <= ap_const_lv1_0;
    gmem_read_0_BRESP <= ap_const_lv2_0;
    gmem_read_0_BUSER <= ap_const_lv1_0;
    gmem_read_0_RID <= ap_const_lv1_0;
    gmem_read_0_RLAST <= ap_const_logic_0;
    gmem_read_0_RRESP <= ap_const_lv2_0;
    gmem_read_0_RUSER <= ap_const_lv1_0;
    gmem_weights1_0_RID <= ap_const_lv1_0;
    gmem_weights1_0_RLAST <= ap_const_logic_0;
    gmem_weights1_0_RRESP <= ap_const_lv2_0;
    gmem_weights1_0_RUSER <= ap_const_lv1_0;
    gmem_weights2_0_RID <= ap_const_lv1_0;
    gmem_weights2_0_RLAST <= ap_const_logic_0;
    gmem_weights2_0_RRESP <= ap_const_lv2_0;
    gmem_weights2_0_RUSER <= ap_const_lv1_0;
    gmem_weights3_0_RID <= ap_const_lv1_0;
    gmem_weights3_0_RLAST <= ap_const_logic_0;
    gmem_weights3_0_RRESP <= ap_const_lv2_0;
    gmem_weights3_0_RUSER <= ap_const_lv1_0;
    gmem_weights4_0_RID <= ap_const_lv1_0;
    gmem_weights4_0_RLAST <= ap_const_logic_0;
    gmem_weights4_0_RRESP <= ap_const_lv2_0;
    gmem_weights4_0_RUSER <= ap_const_lv1_0;
    gmem_weights5_0_RID <= ap_const_lv1_0;
    gmem_weights5_0_RLAST <= ap_const_logic_0;
    gmem_weights5_0_RRESP <= ap_const_lv2_0;
    gmem_weights5_0_RUSER <= ap_const_lv1_0;
    gmem_weights6_0_RID <= ap_const_lv1_0;
    gmem_weights6_0_RLAST <= ap_const_logic_0;
    gmem_weights6_0_RRESP <= ap_const_lv2_0;
    gmem_weights6_0_RUSER <= ap_const_lv1_0;
    gmem_weights7_0_RID <= ap_const_lv1_0;
    gmem_weights7_0_RLAST <= ap_const_logic_0;
    gmem_weights7_0_RRESP <= ap_const_lv2_0;
    gmem_weights7_0_RUSER <= ap_const_lv1_0;
    gmem_weights8_0_RID <= ap_const_lv1_0;
    gmem_weights8_0_RLAST <= ap_const_logic_0;
    gmem_weights8_0_RRESP <= ap_const_lv2_0;
    gmem_weights8_0_RUSER <= ap_const_lv1_0;
    input_voxel_stream_read <= pipeline_bitmap_stage_U0_input_voxel_stream_read;
    m_axi_gmem_write_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_write_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_write_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_write_ARID <= ap_const_lv1_0;
    m_axi_gmem_write_ARLEN <= ap_const_lv8_0;
    m_axi_gmem_write_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_write_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_write_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_write_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_write_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_write_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_write_ARVALID <= ap_const_logic_0;
    m_axi_gmem_write_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_write_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_write_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_write_AWID <= ap_const_lv1_0;
    m_axi_gmem_write_AWLEN <= ap_const_lv8_0;
    m_axi_gmem_write_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_write_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_write_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_write_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_write_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_write_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_write_AWVALID <= ap_const_logic_0;
    m_axi_gmem_write_BREADY <= ap_const_logic_0;
    m_axi_gmem_write_RREADY <= ap_const_logic_0;
    m_axi_gmem_write_WDATA <= ap_const_lv32_0;
    m_axi_gmem_write_WID <= ap_const_lv1_0;
    m_axi_gmem_write_WLAST <= ap_const_logic_0;
    m_axi_gmem_write_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_write_WUSER <= ap_const_lv1_0;
    m_axi_gmem_write_WVALID <= ap_const_logic_0;
    ocnn6_final_layer_output_reconstruction_streaming_U0_ap_continue <= ap_sync_done;
    ocnn6_final_layer_output_reconstruction_streaming_U0_ap_start <= start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_empty_n;
    pipeline_bitmap_stage_U0_ap_continue <= ap_sync_done;
    pipeline_bitmap_stage_U0_ap_start <= ((ap_sync_reg_pipeline_bitmap_stage_U0_ap_ready xor ap_const_logic_1) and ap_start);
    start_for_Block_entry_proc_24_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_VITIS_LOOP_131_1_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_VITIS_LOOP_209_5_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_ocnn6_final_layer_output_reconstruction_streaming_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
