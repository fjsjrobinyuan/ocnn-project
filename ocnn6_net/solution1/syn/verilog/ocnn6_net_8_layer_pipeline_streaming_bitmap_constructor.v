// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_voxel_stream_dout,
        input_voxel_stream_empty_n,
        input_voxel_stream_read,
        feature_data_stream_din,
        feature_data_stream_full_n,
        feature_data_stream_write,
        feature_data_stream_num_data_valid,
        feature_data_stream_fifo_cap,
        write_addr_stream_din,
        write_addr_stream_full_n,
        write_addr_stream_write,
        write_addr_stream_num_data_valid,
        write_addr_stream_fifo_cap,
        p_read,
        L2_bitmap,
        L2_bitmap_ap_vld,
        L2_bitmap_read,
        p_read1,
        p_read2,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_pp0_stage0 = 40'd2;
parameter    ap_ST_fsm_state5 = 40'd4;
parameter    ap_ST_fsm_pp1_stage0 = 40'd8;
parameter    ap_ST_fsm_state8 = 40'd16;
parameter    ap_ST_fsm_state9 = 40'd32;
parameter    ap_ST_fsm_state10 = 40'd64;
parameter    ap_ST_fsm_pp3_stage0 = 40'd128;
parameter    ap_ST_fsm_state13 = 40'd256;
parameter    ap_ST_fsm_pp4_stage0 = 40'd512;
parameter    ap_ST_fsm_pp4_stage1 = 40'd1024;
parameter    ap_ST_fsm_pp4_stage2 = 40'd2048;
parameter    ap_ST_fsm_pp4_stage3 = 40'd4096;
parameter    ap_ST_fsm_pp4_stage4 = 40'd8192;
parameter    ap_ST_fsm_pp4_stage5 = 40'd16384;
parameter    ap_ST_fsm_pp4_stage6 = 40'd32768;
parameter    ap_ST_fsm_pp4_stage7 = 40'd65536;
parameter    ap_ST_fsm_pp4_stage8 = 40'd131072;
parameter    ap_ST_fsm_pp4_stage9 = 40'd262144;
parameter    ap_ST_fsm_pp4_stage10 = 40'd524288;
parameter    ap_ST_fsm_pp4_stage11 = 40'd1048576;
parameter    ap_ST_fsm_pp4_stage12 = 40'd2097152;
parameter    ap_ST_fsm_pp4_stage13 = 40'd4194304;
parameter    ap_ST_fsm_pp4_stage14 = 40'd8388608;
parameter    ap_ST_fsm_pp4_stage15 = 40'd16777216;
parameter    ap_ST_fsm_state31 = 40'd33554432;
parameter    ap_ST_fsm_pp5_stage0 = 40'd67108864;
parameter    ap_ST_fsm_pp5_stage1 = 40'd134217728;
parameter    ap_ST_fsm_pp5_stage2 = 40'd268435456;
parameter    ap_ST_fsm_pp5_stage3 = 40'd536870912;
parameter    ap_ST_fsm_pp5_stage4 = 40'd1073741824;
parameter    ap_ST_fsm_pp5_stage5 = 40'd2147483648;
parameter    ap_ST_fsm_pp5_stage6 = 40'd4294967296;
parameter    ap_ST_fsm_pp5_stage7 = 40'd8589934592;
parameter    ap_ST_fsm_state42 = 40'd17179869184;
parameter    ap_ST_fsm_pp6_stage0 = 40'd34359738368;
parameter    ap_ST_fsm_state45 = 40'd68719476736;
parameter    ap_ST_fsm_pp7_stage0 = 40'd137438953472;
parameter    ap_ST_fsm_state48 = 40'd274877906944;
parameter    ap_ST_fsm_state49 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1084:0] input_voxel_stream_dout;
input   input_voxel_stream_empty_n;
output   input_voxel_stream_read;
output  [1084:0] feature_data_stream_din;
input   feature_data_stream_full_n;
output   feature_data_stream_write;
input  [10:0] feature_data_stream_num_data_valid;
input  [10:0] feature_data_stream_fifo_cap;
output  [59:0] write_addr_stream_din;
input   write_addr_stream_full_n;
output   write_addr_stream_write;
input  [10:0] write_addr_stream_num_data_valid;
input  [10:0] write_addr_stream_fifo_cap;
input  [511:0] p_read;
output  [511:0] L2_bitmap;
output   L2_bitmap_ap_vld;
input  [511:0] L2_bitmap_read;
input  [511:0] p_read1;
input  [511:0] p_read2;
output  [511:0] ap_return_0;
output  [511:0] ap_return_1;
output  [511:0] ap_return_2;
output  [159:0] ap_return_3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_voxel_stream_read;
reg feature_data_stream_write;
reg write_addr_stream_write;
reg L2_bitmap_ap_vld;
reg[511:0] ap_return_0;
reg[511:0] ap_return_1;
reg[511:0] ap_return_2;
reg[159:0] ap_return_3;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] initialized;
reg   [31:0] l2_write_pos;
reg   [9:0] voxel_count;
reg   [31:0] retained_block_count;
reg   [31:0] l0_write_pos;
reg   [31:0] l1_write_pos;
wire   [0:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
wire   [0:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
wire   [0:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
wire   [0:0] l2_temp_buffer_q0;
reg    input_voxel_stream_blk_n;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter0;
wire    retained_blocks_stream_full_n;
wire    ap_block_pp3_stage0;
wire   [0:0] tmp_2_fu_1792_p3;
wire   [0:0] tmp_nbreadreq_fu_414_p3;
reg    feature_data_stream_blk_n;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0_grp1;
reg   [0:0] voxel_occupancy_reg_4998;
reg    ap_block_pp3_stage0_subdone_grp1_done_reg;
reg    ap_block_pp3_stage0_subdone_grp1;
reg    ap_block_pp3_stage0_subdone;
reg    write_addr_stream_blk_n;
wire    ap_block_pp3_stage0_grp2;
reg    ap_block_pp3_stage0_subdone_grp2_done_reg;
reg    ap_block_pp3_stage0_subdone_grp2;
reg   [0:0] l3_has_data_1_reg_1010;
reg   [31:0] reg_1147;
wire    ap_CS_fsm_pp4_stage6;
reg    ap_enable_reg_pp4_iter0;
reg    ap_enable_reg_pp4_iter0_reg;
wire    ap_block_pp4_stage6_11001;
wire    ap_CS_fsm_pp4_stage9;
wire    ap_block_pp4_stage9_11001;
wire    ap_CS_fsm_pp4_stage12;
wire    ap_block_pp4_stage12_11001;
wire   [0:0] initialized_load_load_fu_1235_p1;
reg   [0:0] initialized_load_reg_4854;
wire   [0:0] icmp_ln112_fu_1319_p2;
reg   [0:0] icmp_ln112_reg_4899;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] cond388_i_fu_1333_p2;
reg   [0:0] cond388_i_reg_4906;
reg   [0:0] cond388_i_reg_4906_pp0_iter1_reg;
wire   [5:0] add_ln114_fu_1441_p2;
reg   [5:0] add_ln114_reg_4910;
wire   [2:0] x_2_mid2_fu_1578_p3;
reg   [2:0] x_2_mid2_reg_4953;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_pp1_stage0_11001;
wire   [1:0] empty_84_fu_1594_p1;
reg   [1:0] empty_84_reg_4958;
wire   [0:0] cond389_i_fu_1598_p2;
reg   [0:0] cond389_i_reg_4963;
reg   [0:0] tmp_2_reg_4991;
reg    ap_predicate_op223_read_state11;
reg    ap_block_state11_pp3_stage0_iter0;
reg    ap_block_state12_pp3_stage0_iter1_grp1;
reg    ap_block_state12_pp3_stage0_iter1_grp2;
reg    ap_block_state12_pp3_stage0_iter1_grp3;
reg    ap_block_pp3_stage0_subdone_grp3_done_reg;
reg    ap_block_pp3_stage0_subdone_grp3;
reg    ap_block_pp3_stage0_11001;
wire   [0:0] voxel_occupancy_fu_1800_p1;
reg   [59:0] voxel_morton_addr_reg_5004;
reg   [0:0] tmp_3_reg_5010;
wire   [5:0] add_ln150_fu_1862_p2;
reg   [5:0] add_ln150_reg_5014;
reg   [1083:0] tmp_25_reg_5019;
wire   [0:0] icmp_ln166_fu_1929_p2;
reg   [0:0] icmp_ln166_reg_5038;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_pp4_stage0_11001;
wire   [1:0] trunc_ln166_fu_1941_p1;
reg   [1:0] trunc_ln166_reg_5042;
reg   [511:0] L0_bitmap_0_load_reg_5075;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_pp4_stage1_11001;
reg   [0:0] voxel_bit_reg_5092;
reg   [0:0] voxel_bit_28_reg_5098;
reg   [0:0] voxel_bit_25_reg_5104;
wire    ap_CS_fsm_pp4_stage2;
wire    ap_block_pp4_stage2_11001;
reg   [0:0] voxel_bit_29_reg_5120;
wire    ap_CS_fsm_pp4_stage3;
wire    ap_block_pp4_stage3_11001;
reg   [0:0] voxel_bit_26_reg_5136;
reg   [0:0] voxel_bit_30_reg_5142;
wire    ap_CS_fsm_pp4_stage4;
wire    ap_block_pp4_stage4_11001;
reg   [0:0] voxel_bit_27_reg_5158;
reg   [0:0] voxel_bit_31_reg_5163;
wire   [0:0] l1_has_data_1_fu_2062_p2;
reg   [0:0] l1_has_data_1_reg_5168;
wire    ap_CS_fsm_pp4_stage5;
wire    ap_block_pp4_stage5_11001;
reg   [0:0] voxel_bit_32_reg_5182;
reg   [0:0] voxel_bit_36_reg_5188;
wire   [8:0] trunc_ln150_fu_2094_p1;
reg   [8:0] trunc_ln150_reg_5204;
wire   [9:0] bit_offset_fu_2118_p3;
reg   [9:0] bit_offset_reg_5215;
wire   [0:0] grp_fu_1073_p3;
reg   [0:0] tmp_28_reg_5220;
wire   [8:0] trunc_ln150_1_fu_2126_p1;
reg   [8:0] trunc_ln150_1_reg_5225;
reg   [0:0] voxel_bit_33_reg_5230;
reg   [0:0] voxel_bit_37_reg_5236;
wire    ap_CS_fsm_pp4_stage7;
wire    ap_block_pp4_stage7_11001;
wire   [511:0] tmp_31_fu_2233_p4;
reg   [511:0] tmp_31_reg_5252;
wire   [9:0] bit_offset_3_fu_2265_p3;
reg   [9:0] bit_offset_3_reg_5257;
wire   [9:0] bit_offset_4_fu_2296_p3;
reg   [9:0] bit_offset_4_reg_5262;
wire   [9:0] bit_offset_5_fu_2327_p3;
reg   [9:0] bit_offset_5_reg_5267;
wire   [9:0] bit_offset_6_fu_2358_p3;
reg   [9:0] bit_offset_6_reg_5272;
wire   [9:0] bit_offset_7_fu_2389_p3;
reg   [9:0] bit_offset_7_reg_5277;
reg   [0:0] voxel_bit_34_reg_5282;
reg   [0:0] voxel_bit_38_reg_5288;
wire    ap_CS_fsm_pp4_stage8;
wire    ap_block_pp4_stage8_11001;
wire   [511:0] tmp_37_fu_2448_p4;
reg   [511:0] tmp_37_reg_5304;
reg   [0:0] voxel_bit_35_reg_5309;
reg   [0:0] voxel_bit_39_reg_5314;
wire   [0:0] l1_has_data_2_fu_2488_p2;
reg   [0:0] l1_has_data_2_reg_5319;
wire   [511:0] tmp_41_fu_2521_p4;
wire   [8:0] trunc_ln150_8_fu_2530_p1;
reg   [8:0] trunc_ln150_8_reg_5338;
wire   [9:0] bit_offset_8_fu_2554_p3;
reg   [9:0] bit_offset_8_reg_5349;
reg   [0:0] tmp_55_reg_5354;
wire   [8:0] trunc_ln150_9_fu_2562_p1;
reg   [8:0] trunc_ln150_9_reg_5359;
reg   [0:0] voxel_bit_40_reg_5364;
reg   [0:0] voxel_bit_44_reg_5370;
wire    ap_CS_fsm_pp4_stage10;
wire    ap_block_pp4_stage10_11001;
wire   [511:0] tmp_58_fu_2670_p4;
reg   [511:0] tmp_58_reg_5386;
wire   [9:0] bit_offset_11_fu_2702_p3;
reg   [9:0] bit_offset_11_reg_5391;
wire   [9:0] bit_offset_12_fu_2733_p3;
reg   [9:0] bit_offset_12_reg_5396;
reg   [0:0] voxel_bit_41_reg_5401;
reg   [0:0] voxel_bit_45_reg_5407;
wire    ap_CS_fsm_pp4_stage11;
wire    ap_block_pp4_stage11_11001;
wire   [511:0] tmp_64_fu_2812_p4;
reg   [511:0] tmp_64_reg_5423;
wire   [9:0] bit_offset_14_fu_2844_p3;
reg   [9:0] bit_offset_14_reg_5428;
wire   [8:0] sub_ln150_28_fu_2852_p2;
reg   [8:0] sub_ln150_28_reg_5433;
reg   [0:0] voxel_bit_42_reg_5438;
reg   [0:0] voxel_bit_46_reg_5444;
wire   [511:0] tmp_68_fu_2922_p4;
reg   [0:0] voxel_bit_43_reg_5465;
reg   [0:0] voxel_bit_47_reg_5470;
wire   [0:0] l1_has_data_3_fu_2962_p2;
reg   [0:0] l1_has_data_3_reg_5475;
wire   [8:0] trunc_ln150_20_fu_2968_p1;
reg   [8:0] trunc_ln150_20_reg_5479;
wire   [9:0] bit_offset_20_fu_2992_p3;
reg   [9:0] bit_offset_20_reg_5490;
reg   [0:0] tmp_79_reg_5495;
wire   [8:0] trunc_ln150_21_fu_3000_p1;
reg   [8:0] trunc_ln150_21_reg_5500;
wire    ap_CS_fsm_pp4_stage13;
wire    ap_block_pp4_stage13_11001;
wire   [511:0] tmp_82_fu_3108_p4;
reg   [511:0] tmp_82_reg_5515;
wire   [9:0] bit_offset_23_fu_3140_p3;
reg   [9:0] bit_offset_23_reg_5520;
wire   [9:0] bit_offset_24_fu_3171_p3;
reg   [9:0] bit_offset_24_reg_5525;
reg   [0:0] voxel_bit_48_reg_5530;
reg   [0:0] voxel_bit_52_reg_5536;
wire    ap_CS_fsm_pp4_stage14;
wire    ap_block_pp4_stage14_11001;
wire   [511:0] tmp_88_fu_3250_p4;
reg   [511:0] tmp_88_reg_5552;
wire   [9:0] bit_offset_26_fu_3282_p3;
reg   [9:0] bit_offset_26_reg_5557;
wire   [8:0] sub_ln150_50_fu_3290_p2;
reg   [8:0] sub_ln150_50_reg_5562;
reg   [0:0] voxel_bit_49_reg_5567;
reg   [0:0] voxel_bit_53_reg_5573;
wire    ap_CS_fsm_pp4_stage15;
wire    ap_block_pp4_stage15_11001;
wire   [511:0] tmp_92_fu_3348_p4;
reg   [0:0] voxel_bit_50_reg_5594;
reg   [0:0] voxel_bit_54_reg_5600;
reg   [1:0] l2_y_2_reg_5623;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_pp5_stage0_11001;
wire   [0:0] icmp_ln213_fu_3876_p2;
reg   [0:0] icmp_ln213_reg_5629;
reg   [0:0] icmp_ln213_reg_5629_pp5_iter1_reg;
wire   [0:0] trunc_ln213_fu_3882_p1;
reg   [0:0] trunc_ln213_reg_5633;
wire    ap_CS_fsm_pp5_stage1;
wire    ap_block_pp5_stage1_11001;
reg   [0:0] l1_bit_reg_5655;
reg    ap_enable_reg_pp5_iter0;
reg    ap_enable_reg_pp5_iter0_reg;
reg   [511:0] L1_bitmap_0_load_reg_5661;
wire    ap_CS_fsm_pp5_stage2;
wire    ap_block_pp5_stage2_11001;
reg   [0:0] l1_bit_5_reg_5668;
wire    ap_CS_fsm_pp5_stage3;
wire    ap_block_pp5_stage3_11001;
reg   [0:0] l1_bit_6_reg_5684;
wire    ap_CS_fsm_pp5_stage4;
wire    ap_block_pp5_stage4_11001;
reg   [0:0] l1_bit_7_reg_5695;
wire   [0:0] l2_has_data_1_fu_3980_p2;
reg   [0:0] l2_has_data_1_reg_5700;
wire    ap_CS_fsm_pp5_stage5;
wire    ap_block_pp5_stage5_11001;
wire   [9:0] bit_offset_16_fu_4022_p3;
reg   [9:0] bit_offset_16_reg_5709;
wire   [9:0] bit_offset_17_fu_4054_p3;
reg   [9:0] bit_offset_17_reg_5714;
wire   [9:0] bit_offset_18_fu_4086_p3;
reg   [9:0] bit_offset_18_reg_5719;
wire   [9:0] bit_offset_19_fu_4118_p3;
reg   [9:0] bit_offset_19_reg_5724;
reg   [0:0] l1_bit_8_reg_5729;
wire    ap_CS_fsm_pp5_stage6;
wire    ap_block_pp5_stage6_11001;
wire   [511:0] tmp_74_fu_4170_p4;
reg   [511:0] tmp_74_reg_5740;
reg   [0:0] l1_bit_9_reg_5745;
wire    ap_CS_fsm_pp5_stage7;
wire    ap_block_pp5_stage7_11001;
wire   [511:0] tmp_76_fu_4194_p4;
reg   [0:0] l1_bit_10_reg_5761;
reg   [0:0] l1_bit_11_reg_5767;
reg    ap_enable_reg_pp5_iter1;
wire   [0:0] l2_has_data_2_fu_4223_p2;
reg   [0:0] l2_has_data_2_reg_5772;
wire   [511:0] tmp_95_fu_4266_p4;
reg   [511:0] tmp_95_reg_5776;
wire   [9:0] bit_offset_29_fu_4299_p3;
reg   [9:0] bit_offset_29_reg_5781;
wire   [9:0] bit_offset_30_fu_4331_p3;
reg   [9:0] bit_offset_30_reg_5786;
wire   [9:0] bit_offset_31_fu_4363_p3;
reg   [9:0] bit_offset_31_reg_5791;
wire   [0:0] icmp_ln258_fu_4451_p2;
reg   [0:0] icmp_ln258_reg_5845;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_pp6_stage0_11001;
wire   [0:0] icmp_ln260_fu_4479_p2;
reg   [0:0] icmp_ln260_reg_5849;
wire   [0:0] l3_has_data_fu_4585_p2;
reg    ap_enable_reg_pp6_iter1;
wire   [3:0] trunc_ln258_fu_4626_p1;
reg   [3:0] trunc_ln258_reg_5865;
wire    ap_CS_fsm_state45;
wire   [511:0] tmp_93_fu_4630_p4;
reg   [511:0] tmp_93_reg_5870;
wire   [0:0] bit_val_fu_4672_p1;
reg   [0:0] bit_val_reg_5893;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_pp7_stage0_11001;
reg   [0:0] tmp_118_reg_5898;
wire   [8:0] trunc_ln150_40_fu_4698_p1;
reg   [8:0] trunc_ln150_40_reg_5903;
wire   [8:0] sub_ln150_74_fu_4702_p2;
reg   [8:0] sub_ln150_74_reg_5908;
wire   [31:0] add_ln280_fu_4757_p2;
wire    ap_CS_fsm_state48;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln111_fu_1298_p2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_CS_fsm_state5;
wire    ap_block_pp1_stage0_subdone;
wire   [0:0] icmp_ln118_fu_1499_p2;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state10;
reg    ap_predicate_tran11to13_state11;
reg    ap_condition_pp3_exit_iter0_state11;
wire    ap_CS_fsm_state13;
wire    ap_block_pp4_stage1_subdone;
reg    ap_condition_pp4_exit_iter0_state15;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage15_subdone;
wire    ap_CS_fsm_state31;
wire    ap_block_pp5_stage2_subdone;
reg    ap_condition_pp5_exit_iter0_state34;
wire    ap_block_pp5_stage7_subdone;
reg    ap_enable_reg_pp6_iter0;
wire    ap_CS_fsm_state42;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state43;
reg    ap_enable_reg_pp7_iter0;
wire    ap_block_pp7_stage0_subdone;
wire   [0:0] icmp_ln275_fu_4651_p2;
reg    ap_condition_pp7_exit_iter0_state46;
reg    ap_enable_reg_pp7_iter1;
reg   [0:0] l2_write_pos_flag_0_reg_925;
reg   [31:0] l2_write_pos_loc_0_reg_938;
reg   [511:0] ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949;
reg   [511:0] ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959;
reg   [511:0] ap_phi_reg_pp4_iter0_L0_bitmap_3_reg_970;
reg   [511:0] ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970;
reg   [511:0] ap_phi_mux_L0_bitmap_4_phi_fu_983_p4;
wire   [511:0] tmp_117_fu_3842_p4;
wire   [511:0] ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980;
wire   [0:0] l1_has_data_4_fu_3400_p2;
reg   [511:0] ap_phi_reg_pp5_iter0_L1_bitmap_1_reg_990;
reg   [511:0] ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990;
reg   [511:0] ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4;
wire   [511:0] tmp_101_fu_4403_p4;
reg   [511:0] ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000;
wire   [511:0] ap_phi_reg_pp5_iter0_L1_bitmap_2_reg_1000;
wire   [0:0] ap_phi_mux_l2_write_pos_flag_1_phi_fu_1026_p4;
reg   [0:0] l2_write_pos_flag_1_reg_1022;
reg   [31:0] l2_write_pos_new_1_reg_1034;
reg   [31:0] l2_write_pos_loc_1_reg_1045;
wire   [63:0] zext_ln114_1_fu_1463_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln121_1_fu_1665_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln127_fu_1754_p1;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln125_fu_1688_p2;
wire   [63:0] zext_ln150_fu_1878_p1;
wire    ap_block_pp3_stage0_grp0;
wire   [63:0] zext_ln188_fu_1953_p1;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln188_1_fu_1974_p1;
wire    ap_block_pp4_stage1;
wire   [63:0] zext_ln188_8_fu_1987_p1;
wire    ap_block_pp4_stage2;
wire   [63:0] zext_ln188_9_fu_2000_p1;
wire    ap_block_pp4_stage3;
wire   [63:0] zext_ln198_fu_2013_p1;
wire    ap_block_pp4_stage4;
wire   [63:0] zext_ln188_2_fu_2025_p1;
wire   [63:0] zext_ln188_3_fu_2075_p1;
wire    ap_block_pp4_stage5;
wire   [63:0] zext_ln188_10_fu_2088_p1;
wire    ap_block_pp4_stage6;
wire   [63:0] zext_ln188_11_fu_2143_p1;
wire    ap_block_pp4_stage7;
wire   [63:0] zext_ln198_1_fu_2404_p1;
wire    ap_block_pp4_stage8;
wire   [63:0] zext_ln188_4_fu_2416_p1;
wire   [63:0] zext_ln188_5_fu_2501_p1;
wire    ap_block_pp4_stage9;
wire   [63:0] zext_ln188_12_fu_2579_p1;
wire    ap_block_pp4_stage10;
wire   [63:0] zext_ln188_13_fu_2748_p1;
wire    ap_block_pp4_stage11;
wire   [63:0] zext_ln198_2_fu_2864_p1;
wire    ap_block_pp4_stage12;
wire   [63:0] zext_ln188_6_fu_2876_p1;
wire   [63:0] zext_ln188_7_fu_3017_p1;
wire    ap_block_pp4_stage13;
wire   [63:0] zext_ln188_14_fu_3186_p1;
wire    ap_block_pp4_stage14;
wire   [63:0] zext_ln188_15_fu_3302_p1;
wire    ap_block_pp4_stage15;
wire   [63:0] zext_ln198_3_fu_3364_p1;
wire   [63:0] zext_ln232_fu_3894_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] zext_ln232_1_fu_3906_p1;
wire    ap_block_pp5_stage1;
wire   [63:0] zext_ln232_4_fu_3926_p1;
wire    ap_block_pp5_stage2;
wire   [63:0] zext_ln232_5_fu_3943_p1;
wire    ap_block_pp5_stage3;
wire   [63:0] zext_ln241_fu_3953_p1;
wire    ap_block_pp5_stage4;
wire   [63:0] zext_ln232_2_fu_3965_p1;
wire   [63:0] zext_ln232_3_fu_3993_p1;
wire    ap_block_pp5_stage5;
wire   [63:0] zext_ln232_6_fu_4139_p1;
wire    ap_block_pp5_stage6;
wire   [63:0] zext_ln232_7_fu_4186_p1;
wire    ap_block_pp5_stage7;
wire   [63:0] zext_ln241_1_fu_4209_p1;
wire   [63:0] zext_ln262_fu_4517_p1;
wire    ap_block_pp6_stage0;
wire    ap_CS_fsm_state49;
wire   [0:0] tmp_43_nbwritereq_fu_455_p3;
reg    ap_predicate_op1053_write_state49;
wire    early_trigger_stream_full_n;
wire   [0:0] tmp_44_nbwritereq_fu_463_p3;
reg    ap_predicate_op1057_write_state49;
reg    ap_block_state49;
wire   [9:0] add_ln141_fu_1814_p2;
wire   [31:0] add_ln161_fu_1905_p2;
reg    ap_block_pp3_stage0_11001_grp3;
wire    ap_block_pp3_stage0_grp3;
wire   [31:0] grp_fu_1081_p2;
wire   [31:0] grp_fu_1141_p2;
reg   [3:0] x_fu_286;
wire   [3:0] add_ln113_fu_1447_p2;
reg   [3:0] y_fu_290;
wire   [3:0] select_ln112_fu_1417_p3;
reg   [7:0] indvar_flatten_fu_294;
wire   [7:0] select_ln112_1_fu_1345_p3;
reg   [1:0] z_fu_298;
wire   [1:0] select_ln111_1_fu_1325_p3;
reg   [7:0] indvar_flatten13_fu_302;
wire   [7:0] add_ln111_1_fu_1304_p2;
reg   [2:0] x_2_fu_306;
wire   [2:0] add_ln120_fu_1604_p2;
reg   [2:0] y_2_fu_310;
wire   [2:0] select_ln119_fu_1586_p3;
reg   [5:0] indvar_flatten20_fu_314;
wire   [5:0] select_ln119_1_fu_1616_p3;
reg   [1:0] z_1_fu_318;
wire   [1:0] select_ln118_1_fu_1558_p3;
reg   [5:0] indvar_flatten33_fu_322;
wire   [5:0] add_ln118_1_fu_1505_p2;
reg   [1:0] x_1_fu_326;
wire   [1:0] select_ln126_fu_1759_p3;
wire    ap_CS_fsm_state8;
reg   [1:0] y_1_fu_330;
wire   [1:0] select_ln125_fu_1734_p3;
reg   [2:0] indvar_flatten40_fu_334;
wire   [2:0] add_ln125_1_fu_1694_p2;
reg   [2:0] l1_y_fu_338;
wire   [2:0] add_ln166_fu_1935_p2;
reg   [511:0] L0_bitmap_0_fu_342;
reg   [1:0] l2_y_fu_346;
wire   [1:0] add_ln213_fu_3914_p2;
reg   [511:0] L1_bitmap_0_fu_350;
reg   [63:0] l2_complete_level_fu_354;
wire   [63:0] l2_complete_level_1_fu_4575_p4;
reg   [2:0] l2_bit_pos_1_fu_358;
wire   [2:0] l2_bit_pos_3_fu_4591_p2;
reg   [1:0] l2_x_fu_362;
wire   [1:0] select_ln260_fu_4522_p3;
reg   [2:0] add_ln2601_fu_366;
wire   [2:0] add_ln260_fu_4597_p2;
reg   [2:0] l2_bit_pos_fu_370;
wire   [2:0] select_ln258_1_fu_4564_p3;
reg   [1:0] l2_y_1_fu_374;
wire   [1:0] select_ln258_fu_4497_p3;
reg   [2:0] indvar_flatten47_fu_378;
wire   [2:0] add_ln258_1_fu_4457_p2;
reg   [2:0] i_fu_382;
wire   [2:0] add_ln275_fu_4657_p2;
wire    ap_block_pp7_stage0;
reg   [511:0] empty_86_fu_386;
wire   [511:0] tmp_119_fu_4739_p4;
reg    ap_block_pp3_stage0_01001_grp1;
reg    ap_block_pp3_stage0_11001_grp1;
reg    ap_block_pp3_stage0_01001_grp2;
reg    ap_block_pp3_stage0_11001_grp2;
reg    ap_block_pp3_stage0_01001_grp3;
reg    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local;
reg   [0:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local;
reg    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local;
reg   [5:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local;
wire    ap_block_pp3_stage0_11001_grp0;
reg    ap_block_pp3_stage0_subdone_grp0_done_reg;
wire    ap_block_pp3_stage0_subdone_grp0;
reg    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local;
reg   [0:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local;
reg    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local;
reg   [5:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local;
reg    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local;
reg   [0:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local;
reg    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local;
reg   [3:0] streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local;
reg    l2_temp_buffer_we0_local;
reg   [0:0] l2_temp_buffer_d0_local;
reg    l2_temp_buffer_ce0_local;
reg   [1:0] l2_temp_buffer_address0_local;
wire   [31:0] grp_fu_1067_p2;
wire   [31:0] grp_fu_1099_p2;
wire   [31:0] grp_fu_1113_p2;
wire   [31:0] grp_fu_1127_p2;
wire   [31:0] grp_fu_1151_p2;
wire   [31:0] grp_fu_1165_p2;
wire   [31:0] grp_fu_1179_p2;
wire   [31:0] grp_fu_1193_p2;
wire   [31:0] grp_fu_1207_p2;
wire   [31:0] grp_fu_1221_p2;
wire   [1:0] add_ln111_fu_1313_p2;
wire   [7:0] add_ln112_1_fu_1339_p2;
wire   [0:0] icmp_ln113_fu_1386_p2;
wire   [0:0] xor_ln111_fu_1381_p2;
wire   [3:0] select_ln111_fu_1374_p3;
wire   [0:0] and_ln111_fu_1392_p2;
wire   [0:0] empty_fu_1404_p2;
wire   [3:0] add_ln112_fu_1398_p2;
wire   [2:0] empty_81_fu_1425_p1;
wire   [3:0] x_mid2_fu_1409_p3;
wire   [5:0] tmp_1_fu_1429_p3;
wire   [5:0] zext_ln114_fu_1437_p1;
wire   [0:0] icmp_ln119_fu_1526_p2;
wire   [0:0] icmp_ln120_fu_1546_p2;
wire   [0:0] xor_ln118_fu_1540_p2;
wire   [1:0] add_ln118_fu_1520_p2;
wire   [2:0] select_ln118_fu_1532_p3;
wire   [0:0] and_ln118_fu_1552_p2;
wire   [0:0] empty_83_fu_1572_p2;
wire   [2:0] add_ln119_fu_1566_p2;
wire   [5:0] add_ln119_1_fu_1610_p2;
wire   [3:0] tmp_s_fu_1649_p3;
wire   [3:0] zext_ln121_fu_1656_p1;
wire   [3:0] add_ln121_fu_1659_p2;
wire   [0:0] icmp_ln126_fu_1716_p2;
wire   [0:0] trunc_ln125_fu_1706_p1;
wire   [0:0] xor_ln125_fu_1722_p2;
wire   [1:0] add_ln125_fu_1710_p2;
wire   [0:0] trunc_ln127_fu_1742_p1;
wire   [0:0] and_ln125_fu_1728_p2;
wire   [1:0] add_ln_fu_1746_p3;
wire   [2:0] y_3_fu_1836_p4;
wire   [5:0] tmp_4_fu_1854_p3;
wire   [5:0] x_3_fu_1826_p4;
wire   [5:0] tmp_9_fu_1945_p3;
wire   [5:0] tmp_10_fu_1967_p3;
wire   [5:0] tmp_17_fu_1980_p3;
wire   [5:0] tmp_18_fu_1993_p3;
wire   [3:0] tmp_5_fu_2006_p3;
wire   [5:0] tmp_11_fu_2018_p3;
wire   [0:0] or_ln192_fu_2031_p2;
wire   [0:0] or_ln192_3_fu_2036_p2;
wire   [0:0] or_ln192_1_fu_2042_p2;
wire   [0:0] or_ln192_2_fu_2047_p2;
wire   [0:0] or_ln192_4_fu_2052_p2;
wire   [0:0] or_ln192_5_fu_2057_p2;
wire   [5:0] tmp_12_fu_2068_p3;
wire   [5:0] tmp_19_fu_2081_p3;
wire   [8:0] sub_ln150_fu_2102_p2;
wire   [9:0] zext_ln150_2_fu_2108_p1;
wire   [0:0] grp_fu_1059_p3;
wire   [9:0] sub_ln150_1_fu_2112_p2;
wire   [9:0] zext_ln150_1_fu_2098_p1;
wire   [5:0] tmp_20_fu_2136_p3;
wire  signed [31:0] tmp_27_fu_2152_p2;
wire   [8:0] xor_ln150_fu_2163_p2;
wire   [9:0] zext_ln150_4_fu_2168_p1;
wire   [9:0] sub_ln150_2_fu_2172_p2;
wire   [9:0] zext_ln150_3_fu_2160_p1;
wire   [9:0] bit_offset_1_fu_2178_p3;
wire   [511:0] tmp_27_fu_2152_p4;
wire  signed [31:0] tmp_29_fu_2189_p2;
wire   [8:0] trunc_ln150_2_fu_2198_p1;
wire   [8:0] sub_ln150_3_fu_2206_p2;
wire   [9:0] zext_ln150_6_fu_2211_p1;
wire   [0:0] grp_fu_1157_p3;
wire   [9:0] sub_ln150_4_fu_2215_p2;
wire   [9:0] zext_ln150_5_fu_2202_p1;
wire   [9:0] bit_offset_2_fu_2221_p3;
wire   [511:0] tmp_29_fu_2189_p4;
wire  signed [31:0] tmp_31_fu_2233_p2;
wire   [8:0] trunc_ln150_3_fu_2242_p1;
wire   [8:0] sub_ln150_5_fu_2250_p2;
wire   [9:0] zext_ln150_8_fu_2255_p1;
wire   [0:0] grp_fu_1171_p3;
wire   [9:0] sub_ln150_6_fu_2259_p2;
wire   [9:0] zext_ln150_7_fu_2246_p1;
wire   [8:0] trunc_ln150_4_fu_2273_p1;
wire   [8:0] sub_ln150_7_fu_2281_p2;
wire   [9:0] zext_ln150_10_fu_2286_p1;
wire   [0:0] grp_fu_1185_p3;
wire   [9:0] sub_ln150_8_fu_2290_p2;
wire   [9:0] zext_ln150_9_fu_2277_p1;
wire   [8:0] trunc_ln150_5_fu_2304_p1;
wire   [8:0] sub_ln150_9_fu_2312_p2;
wire   [9:0] zext_ln150_12_fu_2317_p1;
wire   [0:0] grp_fu_1199_p3;
wire   [9:0] sub_ln150_10_fu_2321_p2;
wire   [9:0] zext_ln150_11_fu_2308_p1;
wire   [8:0] trunc_ln150_6_fu_2335_p1;
wire   [8:0] sub_ln150_11_fu_2343_p2;
wire   [9:0] zext_ln150_14_fu_2348_p1;
wire   [0:0] grp_fu_1213_p3;
wire   [9:0] sub_ln150_12_fu_2352_p2;
wire   [9:0] zext_ln150_13_fu_2339_p1;
wire   [8:0] trunc_ln150_7_fu_2366_p1;
wire   [8:0] sub_ln150_13_fu_2374_p2;
wire   [9:0] zext_ln150_16_fu_2379_p1;
wire   [0:0] grp_fu_1227_p3;
wire   [9:0] sub_ln150_14_fu_2383_p2;
wire   [9:0] zext_ln150_15_fu_2370_p1;
wire   [3:0] tmp_6_fu_2397_p3;
wire   [5:0] tmp_13_fu_2409_p3;
wire  signed [31:0] tmp_33_fu_2425_p2;
wire   [511:0] tmp_33_fu_2425_p4;
wire  signed [31:0] tmp_35_fu_2436_p2;
wire   [511:0] tmp_35_fu_2436_p4;
wire  signed [31:0] tmp_37_fu_2448_p2;
wire   [0:0] or_ln192_7_fu_2462_p2;
wire   [0:0] or_ln192_8_fu_2466_p2;
wire   [0:0] or_ln192_9_fu_2471_p2;
wire   [0:0] or_ln192_10_fu_2457_p2;
wire   [0:0] or_ln192_11_fu_2477_p2;
wire   [0:0] or_ln192_12_fu_2483_p2;
wire   [5:0] tmp_14_fu_2494_p3;
wire  signed [31:0] tmp_39_fu_2510_p2;
wire   [511:0] tmp_39_fu_2510_p4;
wire  signed [31:0] tmp_41_fu_2521_p2;
wire   [8:0] sub_ln150_15_fu_2538_p2;
wire   [9:0] zext_ln150_18_fu_2544_p1;
wire   [9:0] sub_ln150_16_fu_2548_p2;
wire   [9:0] zext_ln150_17_fu_2534_p1;
wire   [5:0] tmp_21_fu_2572_p3;
wire  signed [31:0] tmp_54_fu_2588_p2;
wire   [8:0] xor_ln150_1_fu_2600_p2;
wire   [9:0] zext_ln150_20_fu_2605_p1;
wire   [9:0] sub_ln150_17_fu_2609_p2;
wire   [9:0] zext_ln150_19_fu_2597_p1;
wire   [9:0] bit_offset_9_fu_2615_p3;
wire   [511:0] tmp_54_fu_2588_p4;
wire  signed [31:0] tmp_56_fu_2626_p2;
wire   [8:0] trunc_ln150_10_fu_2635_p1;
wire   [8:0] sub_ln150_18_fu_2643_p2;
wire   [9:0] zext_ln150_22_fu_2648_p1;
wire   [9:0] sub_ln150_19_fu_2652_p2;
wire   [9:0] zext_ln150_21_fu_2639_p1;
wire   [9:0] bit_offset_10_fu_2658_p3;
wire   [511:0] tmp_56_fu_2626_p4;
wire  signed [31:0] tmp_58_fu_2670_p2;
wire   [8:0] trunc_ln150_11_fu_2679_p1;
wire   [8:0] sub_ln150_20_fu_2687_p2;
wire   [9:0] zext_ln150_24_fu_2692_p1;
wire   [9:0] sub_ln150_21_fu_2696_p2;
wire   [9:0] zext_ln150_23_fu_2683_p1;
wire   [8:0] trunc_ln150_12_fu_2710_p1;
wire   [8:0] sub_ln150_22_fu_2718_p2;
wire   [9:0] zext_ln150_26_fu_2723_p1;
wire   [9:0] sub_ln150_23_fu_2727_p2;
wire   [9:0] zext_ln150_25_fu_2714_p1;
wire   [5:0] tmp_22_fu_2741_p3;
wire  signed [31:0] tmp_60_fu_2757_p2;
wire   [511:0] tmp_60_fu_2757_p4;
wire  signed [31:0] tmp_62_fu_2768_p2;
wire   [8:0] trunc_ln150_13_fu_2777_p1;
wire   [8:0] sub_ln150_24_fu_2785_p2;
wire   [9:0] zext_ln150_28_fu_2790_p1;
wire   [9:0] sub_ln150_25_fu_2794_p2;
wire   [9:0] zext_ln150_27_fu_2781_p1;
wire   [9:0] bit_offset_13_fu_2800_p3;
wire   [511:0] tmp_62_fu_2768_p4;
wire  signed [31:0] tmp_64_fu_2812_p2;
wire   [8:0] trunc_ln150_14_fu_2821_p1;
wire   [8:0] sub_ln150_26_fu_2829_p2;
wire   [9:0] zext_ln150_30_fu_2834_p1;
wire   [9:0] sub_ln150_27_fu_2838_p2;
wire   [9:0] zext_ln150_29_fu_2825_p1;
wire   [3:0] tmp_7_fu_2857_p3;
wire   [5:0] tmp_15_fu_2869_p3;
wire  signed [31:0] tmp_66_fu_2885_p2;
wire   [8:0] trunc_ln150_15_fu_2893_p1;
wire   [9:0] zext_ln150_32_fu_2901_p1;
wire   [9:0] sub_ln150_29_fu_2904_p2;
wire   [9:0] zext_ln150_31_fu_2897_p1;
wire   [9:0] bit_offset_15_fu_2910_p3;
wire   [511:0] tmp_66_fu_2885_p4;
wire  signed [31:0] tmp_68_fu_2922_p2;
wire   [0:0] or_ln192_14_fu_2936_p2;
wire   [0:0] or_ln192_15_fu_2940_p2;
wire   [0:0] or_ln192_16_fu_2945_p2;
wire   [0:0] or_ln192_17_fu_2931_p2;
wire   [0:0] or_ln192_18_fu_2951_p2;
wire   [0:0] or_ln192_19_fu_2957_p2;
wire   [8:0] sub_ln150_37_fu_2976_p2;
wire   [9:0] zext_ln150_42_fu_2982_p1;
wire   [9:0] sub_ln150_38_fu_2986_p2;
wire   [9:0] zext_ln150_41_fu_2972_p1;
wire   [5:0] tmp_16_fu_3010_p3;
wire  signed [31:0] tmp_78_fu_3026_p2;
wire   [8:0] xor_ln150_3_fu_3038_p2;
wire   [9:0] zext_ln150_44_fu_3043_p1;
wire   [9:0] sub_ln150_39_fu_3047_p2;
wire   [9:0] zext_ln150_43_fu_3035_p1;
wire   [9:0] bit_offset_21_fu_3053_p3;
wire   [511:0] tmp_78_fu_3026_p4;
wire  signed [31:0] tmp_80_fu_3064_p2;
wire   [8:0] trunc_ln150_22_fu_3073_p1;
wire   [8:0] sub_ln150_40_fu_3081_p2;
wire   [9:0] zext_ln150_46_fu_3086_p1;
wire   [9:0] sub_ln150_41_fu_3090_p2;
wire   [9:0] zext_ln150_45_fu_3077_p1;
wire   [9:0] bit_offset_22_fu_3096_p3;
wire   [511:0] tmp_80_fu_3064_p4;
wire  signed [31:0] tmp_82_fu_3108_p2;
wire   [8:0] trunc_ln150_23_fu_3117_p1;
wire   [8:0] sub_ln150_42_fu_3125_p2;
wire   [9:0] zext_ln150_48_fu_3130_p1;
wire   [9:0] sub_ln150_43_fu_3134_p2;
wire   [9:0] zext_ln150_47_fu_3121_p1;
wire   [8:0] trunc_ln150_24_fu_3148_p1;
wire   [8:0] sub_ln150_44_fu_3156_p2;
wire   [9:0] zext_ln150_50_fu_3161_p1;
wire   [9:0] sub_ln150_45_fu_3165_p2;
wire   [9:0] zext_ln150_49_fu_3152_p1;
wire   [5:0] tmp_23_fu_3179_p3;
wire  signed [31:0] tmp_84_fu_3195_p2;
wire   [511:0] tmp_84_fu_3195_p4;
wire  signed [31:0] tmp_86_fu_3206_p2;
wire   [8:0] trunc_ln150_25_fu_3215_p1;
wire   [8:0] sub_ln150_46_fu_3223_p2;
wire   [9:0] zext_ln150_52_fu_3228_p1;
wire   [9:0] sub_ln150_47_fu_3232_p2;
wire   [9:0] zext_ln150_51_fu_3219_p1;
wire   [9:0] bit_offset_25_fu_3238_p3;
wire   [511:0] tmp_86_fu_3206_p4;
wire  signed [31:0] tmp_88_fu_3250_p2;
wire   [8:0] trunc_ln150_26_fu_3259_p1;
wire   [8:0] sub_ln150_48_fu_3267_p2;
wire   [9:0] zext_ln150_54_fu_3272_p1;
wire   [9:0] sub_ln150_49_fu_3276_p2;
wire   [9:0] zext_ln150_53_fu_3263_p1;
wire   [5:0] tmp_24_fu_3295_p3;
wire  signed [31:0] tmp_90_fu_3311_p2;
wire   [8:0] trunc_ln150_27_fu_3319_p1;
wire   [9:0] zext_ln150_56_fu_3327_p1;
wire   [9:0] sub_ln150_51_fu_3330_p2;
wire   [9:0] zext_ln150_55_fu_3323_p1;
wire   [9:0] bit_offset_27_fu_3336_p3;
wire   [511:0] tmp_90_fu_3311_p4;
wire  signed [31:0] tmp_92_fu_3348_p2;
wire   [3:0] tmp_8_fu_3357_p3;
wire   [0:0] or_ln192_21_fu_3374_p2;
wire   [0:0] or_ln192_22_fu_3378_p2;
wire   [0:0] or_ln192_23_fu_3383_p2;
wire   [0:0] or_ln192_24_fu_3369_p2;
wire   [0:0] or_ln192_25_fu_3389_p2;
wire   [0:0] or_ln192_26_fu_3395_p2;
wire   [8:0] trunc_ln150_32_fu_3406_p1;
wire   [8:0] sub_ln150_59_fu_3414_p2;
wire   [9:0] zext_ln150_66_fu_3420_p1;
wire   [9:0] sub_ln150_60_fu_3424_p2;
wire   [9:0] zext_ln150_65_fu_3410_p1;
wire   [9:0] bit_offset_32_fu_3430_p3;
wire  signed [31:0] tmp_103_fu_3442_p2;
wire   [8:0] trunc_ln150_33_fu_3451_p1;
wire   [8:0] xor_ln150_5_fu_3459_p2;
wire   [9:0] zext_ln150_68_fu_3465_p1;
wire   [9:0] sub_ln150_61_fu_3469_p2;
wire   [9:0] zext_ln150_67_fu_3455_p1;
wire   [9:0] bit_offset_33_fu_3475_p3;
wire   [511:0] tmp_103_fu_3442_p4;
wire  signed [31:0] tmp_105_fu_3487_p2;
wire   [31:0] add_ln205_22_fu_3496_p2;
wire   [8:0] trunc_ln150_34_fu_3510_p1;
wire   [8:0] sub_ln150_62_fu_3518_p2;
wire   [9:0] zext_ln150_70_fu_3524_p1;
wire   [0:0] tmp_106_fu_3502_p3;
wire   [9:0] sub_ln150_63_fu_3528_p2;
wire   [9:0] zext_ln150_69_fu_3514_p1;
wire   [9:0] bit_offset_34_fu_3534_p3;
wire   [511:0] tmp_105_fu_3487_p4;
wire  signed [31:0] tmp_107_fu_3546_p2;
wire   [31:0] add_ln205_23_fu_3555_p2;
wire   [8:0] trunc_ln150_35_fu_3569_p1;
wire   [8:0] sub_ln150_64_fu_3577_p2;
wire   [9:0] zext_ln150_72_fu_3583_p1;
wire   [0:0] tmp_108_fu_3561_p3;
wire   [9:0] sub_ln150_65_fu_3587_p2;
wire   [9:0] zext_ln150_71_fu_3573_p1;
wire   [9:0] bit_offset_35_fu_3593_p3;
wire   [511:0] tmp_107_fu_3546_p4;
wire  signed [31:0] tmp_109_fu_3605_p2;
wire   [31:0] add_ln205_24_fu_3615_p2;
wire   [8:0] trunc_ln150_36_fu_3629_p1;
wire   [8:0] sub_ln150_66_fu_3637_p2;
wire   [9:0] zext_ln150_74_fu_3643_p1;
wire   [0:0] tmp_110_fu_3621_p3;
wire   [9:0] sub_ln150_67_fu_3647_p2;
wire   [9:0] zext_ln150_73_fu_3633_p1;
wire   [9:0] bit_offset_36_fu_3653_p3;
wire   [511:0] tmp_109_fu_3605_p4;
wire  signed [31:0] tmp_111_fu_3665_p2;
wire   [31:0] add_ln205_25_fu_3674_p2;
wire   [8:0] trunc_ln150_37_fu_3688_p1;
wire   [8:0] sub_ln150_68_fu_3696_p2;
wire   [9:0] zext_ln150_76_fu_3702_p1;
wire   [0:0] tmp_112_fu_3680_p3;
wire   [9:0] sub_ln150_69_fu_3706_p2;
wire   [9:0] zext_ln150_75_fu_3692_p1;
wire   [9:0] bit_offset_37_fu_3712_p3;
wire   [511:0] tmp_111_fu_3665_p4;
wire  signed [31:0] tmp_113_fu_3724_p2;
wire   [31:0] add_ln205_26_fu_3733_p2;
wire   [8:0] trunc_ln150_38_fu_3747_p1;
wire   [8:0] sub_ln150_70_fu_3755_p2;
wire   [9:0] zext_ln150_78_fu_3761_p1;
wire   [0:0] tmp_114_fu_3739_p3;
wire   [9:0] sub_ln150_71_fu_3765_p2;
wire   [9:0] zext_ln150_77_fu_3751_p1;
wire   [9:0] bit_offset_38_fu_3771_p3;
wire   [511:0] tmp_113_fu_3724_p4;
wire  signed [31:0] tmp_115_fu_3783_p2;
wire   [31:0] add_ln205_27_fu_3792_p2;
wire   [8:0] trunc_ln150_39_fu_3806_p1;
wire   [8:0] sub_ln150_72_fu_3814_p2;
wire   [9:0] zext_ln150_80_fu_3820_p1;
wire   [0:0] tmp_116_fu_3798_p3;
wire   [9:0] sub_ln150_73_fu_3824_p2;
wire   [9:0] zext_ln150_79_fu_3810_p1;
wire   [9:0] bit_offset_39_fu_3830_p3;
wire   [511:0] tmp_115_fu_3783_p4;
wire  signed [31:0] tmp_117_fu_3842_p2;
wire   [3:0] tmp_45_fu_3886_p3;
wire   [3:0] tmp_46_fu_3899_p3;
wire   [3:0] tmp_49_fu_3919_p3;
wire   [3:0] tmp_50_fu_3936_p3;
wire   [1:0] shl_ln241_fu_3948_p2;
wire   [3:0] tmp_47_fu_3958_p3;
wire   [0:0] or_ln236_1_fu_3970_p2;
wire   [0:0] or_ln236_fu_3975_p2;
wire   [3:0] tmp_48_fu_3986_p3;
wire   [8:0] trunc_ln150_16_fu_3998_p1;
wire   [8:0] sub_ln150_30_fu_4006_p2;
wire   [9:0] zext_ln150_34_fu_4012_p1;
wire   [0:0] grp_fu_1091_p3;
wire   [9:0] sub_ln150_31_fu_4016_p2;
wire   [9:0] zext_ln150_33_fu_4002_p1;
wire   [8:0] trunc_ln150_17_fu_4030_p1;
wire   [8:0] xor_ln150_2_fu_4038_p2;
wire   [9:0] zext_ln150_36_fu_4044_p1;
wire   [0:0] grp_fu_1105_p3;
wire   [9:0] sub_ln150_32_fu_4048_p2;
wire   [9:0] zext_ln150_35_fu_4034_p1;
wire   [8:0] trunc_ln150_18_fu_4062_p1;
wire   [8:0] sub_ln150_33_fu_4070_p2;
wire   [9:0] zext_ln150_38_fu_4076_p1;
wire   [0:0] grp_fu_1119_p3;
wire   [9:0] sub_ln150_34_fu_4080_p2;
wire   [9:0] zext_ln150_37_fu_4066_p1;
wire   [8:0] trunc_ln150_19_fu_4094_p1;
wire   [8:0] sub_ln150_35_fu_4102_p2;
wire   [9:0] zext_ln150_40_fu_4108_p1;
wire   [0:0] grp_fu_1133_p3;
wire   [9:0] sub_ln150_36_fu_4112_p2;
wire   [9:0] zext_ln150_39_fu_4098_p1;
wire   [3:0] tmp_51_fu_4132_p3;
wire  signed [31:0] tmp_70_fu_4147_p2;
wire   [511:0] tmp_70_fu_4147_p4;
wire  signed [31:0] tmp_72_fu_4158_p2;
wire   [511:0] tmp_72_fu_4158_p4;
wire  signed [31:0] tmp_74_fu_4170_p2;
wire   [3:0] tmp_52_fu_4179_p3;
wire  signed [31:0] tmp_76_fu_4194_p2;
wire   [1:0] tmp_42_fu_4202_p3;
wire   [0:0] or_ln236_4_fu_4218_p2;
wire   [0:0] or_ln236_3_fu_4214_p2;
wire   [8:0] trunc_ln150_28_fu_4230_p1;
wire   [8:0] sub_ln150_52_fu_4238_p2;
wire   [9:0] zext_ln150_58_fu_4244_p1;
wire   [9:0] sub_ln150_53_fu_4248_p2;
wire   [9:0] zext_ln150_57_fu_4234_p1;
wire   [9:0] bit_offset_28_fu_4254_p3;
wire  signed [31:0] tmp_95_fu_4266_p2;
wire   [8:0] trunc_ln150_29_fu_4275_p1;
wire   [8:0] xor_ln150_4_fu_4283_p2;
wire   [9:0] zext_ln150_60_fu_4289_p1;
wire   [9:0] sub_ln150_54_fu_4293_p2;
wire   [9:0] zext_ln150_59_fu_4279_p1;
wire   [8:0] trunc_ln150_30_fu_4307_p1;
wire   [8:0] sub_ln150_55_fu_4315_p2;
wire   [9:0] zext_ln150_62_fu_4321_p1;
wire   [9:0] sub_ln150_56_fu_4325_p2;
wire   [9:0] zext_ln150_61_fu_4311_p1;
wire   [8:0] trunc_ln150_31_fu_4339_p1;
wire   [8:0] sub_ln150_57_fu_4347_p2;
wire   [9:0] zext_ln150_64_fu_4353_p1;
wire   [9:0] sub_ln150_58_fu_4357_p2;
wire   [9:0] zext_ln150_63_fu_4343_p1;
wire  signed [31:0] tmp_97_fu_4380_p2;
wire   [511:0] tmp_97_fu_4380_p4;
wire  signed [31:0] tmp_99_fu_4391_p2;
wire   [511:0] tmp_99_fu_4391_p4;
wire  signed [31:0] tmp_101_fu_4403_p2;
wire   [0:0] trunc_ln256_fu_4469_p1;
wire   [0:0] xor_ln255_fu_4485_p2;
wire   [1:0] add_ln258_fu_4473_p2;
wire   [0:0] trunc_ln258_1_fu_4505_p1;
wire   [0:0] and_ln255_fu_4491_p2;
wire   [1:0] add_ln1_fu_4509_p3;
wire   [2:0] select_ln255_fu_4557_p3;
wire   [31:0] l2_complete_level_1_fu_4575_p2;
wire   [3:0] zext_ln275_fu_4663_p1;
wire   [3:0] lshr_ln277_fu_4667_p2;
wire   [1:0] trunc_ln278_fu_4676_p1;
wire   [31:0] zext_ln278_fu_4680_p1;
wire   [31:0] add_ln278_fu_4684_p2;
wire   [9:0] zext_ln150_82_fu_4719_p1;
wire   [9:0] sub_ln150_75_fu_4722_p2;
wire   [9:0] zext_ln150_81_fu_4716_p1;
wire   [9:0] bit_offset_40_fu_4728_p3;
wire  signed [31:0] tmp_119_fu_4739_p2;
wire   [31:0] add_ln286_1_fu_4769_p2;
wire   [31:0] add_ln286_fu_4763_p2;
wire   [31:0] add_ln286_2_fu_4775_p2;
wire   [159:0] or_ln286_6_fu_4781_p6;
reg   [511:0] ap_return_0_preg;
reg   [511:0] ap_return_1_preg;
reg   [511:0] ap_return_2_preg;
reg   [159:0] ap_return_3_preg;
reg   [39:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state48_blk;
reg    ap_ST_fsm_state49_blk;
wire    ap_block_pp4_stage0_subdone;
wire    ap_block_pp4_stage2_subdone;
wire    ap_block_pp4_stage3_subdone;
wire    ap_block_pp4_stage4_subdone;
wire    ap_block_pp4_stage5_subdone;
wire    ap_block_pp4_stage6_subdone;
wire    ap_block_pp4_stage7_subdone;
wire    ap_block_pp4_stage8_subdone;
wire    ap_block_pp4_stage9_subdone;
wire    ap_block_pp4_stage10_subdone;
wire    ap_block_pp4_stage11_subdone;
wire    ap_block_pp4_stage12_subdone;
wire    ap_block_pp4_stage13_subdone;
wire    ap_block_pp4_stage14_subdone;
wire    ap_block_pp5_stage0_subdone;
wire    ap_block_pp5_stage1_subdone;
wire    ap_block_pp5_stage3_subdone;
wire    ap_block_pp5_stage4_subdone;
wire    ap_block_pp5_stage5_subdone;
wire    ap_block_pp5_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_condition_4137;
reg    ap_condition_4141;
reg    ap_condition_4145;
reg    ap_condition_4149;
reg    ap_condition_645;
reg    ap_condition_783;
wire   [511:0] tmp_27_fu_2152_p0;
wire   [511:0] tmp_29_fu_2189_p0;
wire   [511:0] tmp_31_fu_2233_p0;
wire   [511:0] tmp_33_fu_2425_p0;
wire   [511:0] tmp_35_fu_2436_p0;
wire   [511:0] tmp_37_fu_2448_p0;
wire   [511:0] tmp_39_fu_2510_p0;
wire   [511:0] tmp_41_fu_2521_p0;
wire   [511:0] tmp_54_fu_2588_p0;
wire   [511:0] tmp_56_fu_2626_p0;
wire   [511:0] tmp_58_fu_2670_p0;
wire   [511:0] tmp_60_fu_2757_p0;
wire   [511:0] tmp_62_fu_2768_p0;
wire   [511:0] tmp_64_fu_2812_p0;
wire   [511:0] tmp_66_fu_2885_p0;
wire   [511:0] tmp_68_fu_2922_p0;
wire   [511:0] tmp_78_fu_3026_p0;
wire   [511:0] tmp_80_fu_3064_p0;
wire   [511:0] tmp_82_fu_3108_p0;
wire   [511:0] tmp_84_fu_3195_p0;
wire   [511:0] tmp_86_fu_3206_p0;
wire   [511:0] tmp_88_fu_3250_p0;
wire   [511:0] tmp_90_fu_3311_p0;
wire   [511:0] tmp_92_fu_3348_p0;
wire   [511:0] tmp_103_fu_3442_p0;
wire   [511:0] tmp_105_fu_3487_p0;
wire   [511:0] tmp_107_fu_3546_p0;
wire   [511:0] tmp_109_fu_3605_p0;
wire   [511:0] tmp_111_fu_3665_p0;
wire   [511:0] tmp_113_fu_3724_p0;
wire   [511:0] tmp_115_fu_3783_p0;
wire   [511:0] tmp_117_fu_3842_p0;
wire   [511:0] tmp_70_fu_4147_p0;
wire   [511:0] tmp_72_fu_4158_p0;
wire   [511:0] tmp_74_fu_4170_p0;
wire   [511:0] tmp_76_fu_4194_p0;
wire   [511:0] tmp_95_fu_4266_p0;
wire   [511:0] tmp_97_fu_4380_p0;
wire   [511:0] tmp_99_fu_4391_p0;
wire   [511:0] tmp_101_fu_4403_p0;
wire   [63:0] l2_complete_level_1_fu_4575_p0;
wire   [511:0] tmp_119_fu_4739_p0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 initialized = 1'd0;
#0 l2_write_pos = 32'd0;
#0 voxel_count = 10'd0;
#0 retained_block_count = 32'd0;
#0 l0_write_pos = 32'd0;
#0 l1_write_pos = 32'd0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_block_pp3_stage0_subdone_grp1_done_reg = 1'b0;
#0 ap_block_pp3_stage0_subdone_grp2_done_reg = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0_reg = 1'b0;
#0 ap_block_pp3_stage0_subdone_grp3_done_reg = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0_reg = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 x_fu_286 = 4'd0;
#0 y_fu_290 = 4'd0;
#0 indvar_flatten_fu_294 = 8'd0;
#0 z_fu_298 = 2'd0;
#0 indvar_flatten13_fu_302 = 8'd0;
#0 x_2_fu_306 = 3'd0;
#0 y_2_fu_310 = 3'd0;
#0 indvar_flatten20_fu_314 = 6'd0;
#0 z_1_fu_318 = 2'd0;
#0 indvar_flatten33_fu_322 = 6'd0;
#0 x_1_fu_326 = 2'd0;
#0 y_1_fu_330 = 2'd0;
#0 indvar_flatten40_fu_334 = 3'd0;
#0 l1_y_fu_338 = 3'd0;
#0 L0_bitmap_0_fu_342 = 512'd0;
#0 l2_y_fu_346 = 2'd0;
#0 L1_bitmap_0_fu_350 = 512'd0;
#0 l2_complete_level_fu_354 = 64'd0;
#0 l2_bit_pos_1_fu_358 = 3'd0;
#0 l2_x_fu_362 = 2'd0;
#0 add_ln2601_fu_366 = 3'd0;
#0 l2_bit_pos_fu_370 = 3'd0;
#0 l2_y_1_fu_374 = 2'd0;
#0 indvar_flatten47_fu_378 = 3'd0;
#0 i_fu_382 = 3'd0;
#0 empty_86_fu_386 = 512'd0;
#0 ap_block_pp3_stage0_subdone_grp0_done_reg = 1'b0;
#0 ap_return_0_preg = 512'd0;
#0 ap_return_1_preg = 512'd0;
#0 ap_return_2_preg = 512'd0;
#0 ap_return_3_preg = 160'd0;
end

ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streabkb #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local),
    .ce0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local),
    .we0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local),
    .d0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local),
    .q0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0)
);

ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streabkb #(
    .DataWidth( 1 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local),
    .ce0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local),
    .we0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local),
    .d0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local),
    .q0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0)
);

ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streadEe #(
    .DataWidth( 1 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local),
    .ce0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local),
    .we0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local),
    .d0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local),
    .q0(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0)
);

ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_l2_temp_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
l2_temp_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(l2_temp_buffer_address0_local),
    .ce0(l2_temp_buffer_ce0_local),
    .we0(l2_temp_buffer_we0_local),
    .d0(l2_temp_buffer_d0_local),
    .q0(l2_temp_buffer_q0)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U7(
    .din(L0_bitmap_0_load_reg_5075),
    .sel(tmp_27_fu_2152_p2),
    .value(voxel_bit_reg_5092),
    .dout(tmp_27_fu_2152_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U8(
    .din(tmp_27_fu_2152_p4),
    .sel(tmp_29_fu_2189_p2),
    .value(voxel_bit_25_reg_5104),
    .dout(tmp_29_fu_2189_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U9(
    .din(tmp_29_fu_2189_p4),
    .sel(tmp_31_fu_2233_p2),
    .value(voxel_bit_26_reg_5136),
    .dout(tmp_31_fu_2233_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U10(
    .din(tmp_31_reg_5252),
    .sel(tmp_33_fu_2425_p2),
    .value(voxel_bit_27_reg_5158),
    .dout(tmp_33_fu_2425_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U11(
    .din(tmp_33_fu_2425_p4),
    .sel(tmp_35_fu_2436_p2),
    .value(voxel_bit_28_reg_5098),
    .dout(tmp_35_fu_2436_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U12(
    .din(tmp_35_fu_2436_p4),
    .sel(tmp_37_fu_2448_p2),
    .value(voxel_bit_29_reg_5120),
    .dout(tmp_37_fu_2448_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U13(
    .din(tmp_37_reg_5304),
    .sel(tmp_39_fu_2510_p2),
    .value(voxel_bit_30_reg_5142),
    .dout(tmp_39_fu_2510_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U14(
    .din(tmp_39_fu_2510_p4),
    .sel(tmp_41_fu_2521_p2),
    .value(voxel_bit_31_reg_5163),
    .dout(tmp_41_fu_2521_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U15(
    .din(ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949),
    .sel(tmp_54_fu_2588_p2),
    .value(voxel_bit_32_reg_5182),
    .dout(tmp_54_fu_2588_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U16(
    .din(tmp_54_fu_2588_p4),
    .sel(tmp_56_fu_2626_p2),
    .value(voxel_bit_33_reg_5230),
    .dout(tmp_56_fu_2626_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U17(
    .din(tmp_56_fu_2626_p4),
    .sel(tmp_58_fu_2670_p2),
    .value(voxel_bit_34_reg_5282),
    .dout(tmp_58_fu_2670_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U18(
    .din(tmp_58_reg_5386),
    .sel(tmp_60_fu_2757_p2),
    .value(voxel_bit_35_reg_5309),
    .dout(tmp_60_fu_2757_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U19(
    .din(tmp_60_fu_2757_p4),
    .sel(tmp_62_fu_2768_p2),
    .value(voxel_bit_36_reg_5188),
    .dout(tmp_62_fu_2768_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U20(
    .din(tmp_62_fu_2768_p4),
    .sel(tmp_64_fu_2812_p2),
    .value(voxel_bit_37_reg_5236),
    .dout(tmp_64_fu_2812_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U21(
    .din(tmp_64_reg_5423),
    .sel(tmp_66_fu_2885_p2),
    .value(voxel_bit_38_reg_5288),
    .dout(tmp_66_fu_2885_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U22(
    .din(tmp_66_fu_2885_p4),
    .sel(tmp_68_fu_2922_p2),
    .value(voxel_bit_39_reg_5314),
    .dout(tmp_68_fu_2922_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U23(
    .din(ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959),
    .sel(tmp_78_fu_3026_p2),
    .value(voxel_bit_40_reg_5364),
    .dout(tmp_78_fu_3026_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U24(
    .din(tmp_78_fu_3026_p4),
    .sel(tmp_80_fu_3064_p2),
    .value(voxel_bit_41_reg_5401),
    .dout(tmp_80_fu_3064_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U25(
    .din(tmp_80_fu_3064_p4),
    .sel(tmp_82_fu_3108_p2),
    .value(voxel_bit_42_reg_5438),
    .dout(tmp_82_fu_3108_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U26(
    .din(tmp_82_reg_5515),
    .sel(tmp_84_fu_3195_p2),
    .value(voxel_bit_43_reg_5465),
    .dout(tmp_84_fu_3195_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U27(
    .din(tmp_84_fu_3195_p4),
    .sel(tmp_86_fu_3206_p2),
    .value(voxel_bit_44_reg_5370),
    .dout(tmp_86_fu_3206_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U28(
    .din(tmp_86_fu_3206_p4),
    .sel(tmp_88_fu_3250_p2),
    .value(voxel_bit_45_reg_5407),
    .dout(tmp_88_fu_3250_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U29(
    .din(tmp_88_reg_5552),
    .sel(tmp_90_fu_3311_p2),
    .value(voxel_bit_46_reg_5444),
    .dout(tmp_90_fu_3311_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U30(
    .din(tmp_90_fu_3311_p4),
    .sel(tmp_92_fu_3348_p2),
    .value(voxel_bit_47_reg_5470),
    .dout(tmp_92_fu_3348_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U31(
    .din(ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970),
    .sel(tmp_103_fu_3442_p2),
    .value(voxel_bit_48_reg_5530),
    .dout(tmp_103_fu_3442_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U32(
    .din(tmp_103_fu_3442_p4),
    .sel(tmp_105_fu_3487_p2),
    .value(voxel_bit_49_reg_5567),
    .dout(tmp_105_fu_3487_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U33(
    .din(tmp_105_fu_3487_p4),
    .sel(tmp_107_fu_3546_p2),
    .value(voxel_bit_50_reg_5594),
    .dout(tmp_107_fu_3546_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U34(
    .din(tmp_107_fu_3546_p4),
    .sel(tmp_109_fu_3605_p2),
    .value(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0),
    .dout(tmp_109_fu_3605_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U35(
    .din(tmp_109_fu_3605_p4),
    .sel(tmp_111_fu_3665_p2),
    .value(voxel_bit_52_reg_5536),
    .dout(tmp_111_fu_3665_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U36(
    .din(tmp_111_fu_3665_p4),
    .sel(tmp_113_fu_3724_p2),
    .value(voxel_bit_53_reg_5573),
    .dout(tmp_113_fu_3724_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U37(
    .din(tmp_113_fu_3724_p4),
    .sel(tmp_115_fu_3783_p2),
    .value(voxel_bit_54_reg_5600),
    .dout(tmp_115_fu_3783_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U38(
    .din(tmp_115_fu_3783_p4),
    .sel(tmp_117_fu_3842_p2),
    .value(streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0),
    .dout(tmp_117_fu_3842_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U39(
    .din(L1_bitmap_0_load_reg_5661),
    .sel(tmp_70_fu_4147_p2),
    .value(l1_bit_reg_5655),
    .dout(tmp_70_fu_4147_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U40(
    .din(tmp_70_fu_4147_p4),
    .sel(tmp_72_fu_4158_p2),
    .value(l1_bit_5_reg_5668),
    .dout(tmp_72_fu_4158_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U41(
    .din(tmp_72_fu_4158_p4),
    .sel(tmp_74_fu_4170_p2),
    .value(l1_bit_6_reg_5684),
    .dout(tmp_74_fu_4170_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U42(
    .din(tmp_74_reg_5740),
    .sel(tmp_76_fu_4194_p2),
    .value(l1_bit_7_reg_5695),
    .dout(tmp_76_fu_4194_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U43(
    .din(ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990),
    .sel(tmp_95_fu_4266_p2),
    .value(l1_bit_8_reg_5729),
    .dout(tmp_95_fu_4266_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U44(
    .din(tmp_95_reg_5776),
    .sel(tmp_97_fu_4380_p2),
    .value(l1_bit_9_reg_5745),
    .dout(tmp_97_fu_4380_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U45(
    .din(tmp_97_fu_4380_p4),
    .sel(tmp_99_fu_4391_p2),
    .value(l1_bit_10_reg_5761),
    .dout(tmp_99_fu_4391_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U46(
    .din(tmp_99_fu_4391_p4),
    .sel(tmp_101_fu_4403_p2),
    .value(l1_bit_11_reg_5767),
    .dout(tmp_101_fu_4403_p4)
);

ocnn6_net_8_layer_pipeline_bitset_64ns_64ns_32ns_1ns_64_1_1 #(
    .DATAWIDTH( 64 ),
    .ADDRWIDTH( 32 ))
bitset_64ns_64ns_32ns_1ns_64_1_1_U47(
    .din(l2_complete_level_fu_354),
    .sel(l2_complete_level_1_fu_4575_p2),
    .value(l2_temp_buffer_q0),
    .dout(l2_complete_level_1_fu_4575_p4)
);

ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 #(
    .DATAWIDTH( 512 ),
    .ADDRWIDTH( 32 ))
bitset_512ns_512ns_32s_1ns_512_1_1_U48(
    .din(empty_86_fu_386),
    .sel(tmp_119_fu_4739_p2),
    .value(bit_val_reg_5893),
    .dout(tmp_119_fu_4739_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp3_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_block_pp3_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone_grp0)) begin
            ap_block_pp3_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp3_stage0_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_block_pp3_stage0_subdone_grp1_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone_grp1)) begin
            ap_block_pp3_stage0_subdone_grp1_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp3_stage0_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_block_pp3_stage0_subdone_grp2_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone_grp2)) begin
            ap_block_pp3_stage0_subdone_grp2_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp3_stage0_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_block_pp3_stage0_subdone_grp3_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp3_stage0_subdone_grp3)) begin
            ap_block_pp3_stage0_subdone_grp3_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state11) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
            ap_enable_reg_pp4_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter0_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp4_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15_subdone)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state34) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state34) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_subdone))) begin
            ap_enable_reg_pp5_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp5_iter0_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp5_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_subdone)) | ((1'b1 == ap_CS_fsm_pp5_stage7) & (1'b0 == ap_block_pp5_stage7_subdone)))) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state43) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state43) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state43);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state46) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd1))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state46) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state46);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd1))) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 512'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
            ap_return_0_preg <= tmp_93_reg_5870;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 512'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
            ap_return_1_preg <= L1_bitmap_0_load_reg_5661;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 512'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
            ap_return_2_preg <= L0_bitmap_0_load_reg_5075;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_3_preg[0] <= 1'b0;
        ap_return_3_preg[32] <= 1'b0;
        ap_return_3_preg[33] <= 1'b0;
        ap_return_3_preg[34] <= 1'b0;
        ap_return_3_preg[35] <= 1'b0;
        ap_return_3_preg[36] <= 1'b0;
        ap_return_3_preg[37] <= 1'b0;
        ap_return_3_preg[38] <= 1'b0;
        ap_return_3_preg[39] <= 1'b0;
        ap_return_3_preg[40] <= 1'b0;
        ap_return_3_preg[41] <= 1'b0;
        ap_return_3_preg[42] <= 1'b0;
        ap_return_3_preg[43] <= 1'b0;
        ap_return_3_preg[44] <= 1'b0;
        ap_return_3_preg[45] <= 1'b0;
        ap_return_3_preg[46] <= 1'b0;
        ap_return_3_preg[47] <= 1'b0;
        ap_return_3_preg[48] <= 1'b0;
        ap_return_3_preg[49] <= 1'b0;
        ap_return_3_preg[50] <= 1'b0;
        ap_return_3_preg[51] <= 1'b0;
        ap_return_3_preg[52] <= 1'b0;
        ap_return_3_preg[53] <= 1'b0;
        ap_return_3_preg[54] <= 1'b0;
        ap_return_3_preg[55] <= 1'b0;
        ap_return_3_preg[56] <= 1'b0;
        ap_return_3_preg[57] <= 1'b0;
        ap_return_3_preg[58] <= 1'b0;
        ap_return_3_preg[59] <= 1'b0;
        ap_return_3_preg[60] <= 1'b0;
        ap_return_3_preg[61] <= 1'b0;
        ap_return_3_preg[62] <= 1'b0;
        ap_return_3_preg[63] <= 1'b0;
        ap_return_3_preg[64] <= 1'b0;
        ap_return_3_preg[65] <= 1'b0;
        ap_return_3_preg[66] <= 1'b0;
        ap_return_3_preg[67] <= 1'b0;
        ap_return_3_preg[68] <= 1'b0;
        ap_return_3_preg[69] <= 1'b0;
        ap_return_3_preg[70] <= 1'b0;
        ap_return_3_preg[71] <= 1'b0;
        ap_return_3_preg[72] <= 1'b0;
        ap_return_3_preg[73] <= 1'b0;
        ap_return_3_preg[74] <= 1'b0;
        ap_return_3_preg[75] <= 1'b0;
        ap_return_3_preg[76] <= 1'b0;
        ap_return_3_preg[77] <= 1'b0;
        ap_return_3_preg[78] <= 1'b0;
        ap_return_3_preg[79] <= 1'b0;
        ap_return_3_preg[80] <= 1'b0;
        ap_return_3_preg[81] <= 1'b0;
        ap_return_3_preg[82] <= 1'b0;
        ap_return_3_preg[83] <= 1'b0;
        ap_return_3_preg[84] <= 1'b0;
        ap_return_3_preg[85] <= 1'b0;
        ap_return_3_preg[86] <= 1'b0;
        ap_return_3_preg[87] <= 1'b0;
        ap_return_3_preg[88] <= 1'b0;
        ap_return_3_preg[89] <= 1'b0;
        ap_return_3_preg[90] <= 1'b0;
        ap_return_3_preg[91] <= 1'b0;
        ap_return_3_preg[92] <= 1'b0;
        ap_return_3_preg[93] <= 1'b0;
        ap_return_3_preg[94] <= 1'b0;
        ap_return_3_preg[95] <= 1'b0;
        ap_return_3_preg[96] <= 1'b0;
        ap_return_3_preg[97] <= 1'b0;
        ap_return_3_preg[98] <= 1'b0;
        ap_return_3_preg[99] <= 1'b0;
        ap_return_3_preg[100] <= 1'b0;
        ap_return_3_preg[101] <= 1'b0;
        ap_return_3_preg[102] <= 1'b0;
        ap_return_3_preg[103] <= 1'b0;
        ap_return_3_preg[104] <= 1'b0;
        ap_return_3_preg[105] <= 1'b0;
        ap_return_3_preg[106] <= 1'b0;
        ap_return_3_preg[107] <= 1'b0;
        ap_return_3_preg[108] <= 1'b0;
        ap_return_3_preg[109] <= 1'b0;
        ap_return_3_preg[110] <= 1'b0;
        ap_return_3_preg[111] <= 1'b0;
        ap_return_3_preg[112] <= 1'b0;
        ap_return_3_preg[113] <= 1'b0;
        ap_return_3_preg[114] <= 1'b0;
        ap_return_3_preg[115] <= 1'b0;
        ap_return_3_preg[116] <= 1'b0;
        ap_return_3_preg[117] <= 1'b0;
        ap_return_3_preg[118] <= 1'b0;
        ap_return_3_preg[119] <= 1'b0;
        ap_return_3_preg[120] <= 1'b0;
        ap_return_3_preg[121] <= 1'b0;
        ap_return_3_preg[122] <= 1'b0;
        ap_return_3_preg[123] <= 1'b0;
        ap_return_3_preg[124] <= 1'b0;
        ap_return_3_preg[125] <= 1'b0;
        ap_return_3_preg[126] <= 1'b0;
        ap_return_3_preg[127] <= 1'b0;
        ap_return_3_preg[128] <= 1'b0;
        ap_return_3_preg[129] <= 1'b0;
        ap_return_3_preg[130] <= 1'b0;
        ap_return_3_preg[131] <= 1'b0;
        ap_return_3_preg[132] <= 1'b0;
        ap_return_3_preg[133] <= 1'b0;
        ap_return_3_preg[134] <= 1'b0;
        ap_return_3_preg[135] <= 1'b0;
        ap_return_3_preg[136] <= 1'b0;
        ap_return_3_preg[137] <= 1'b0;
        ap_return_3_preg[138] <= 1'b0;
        ap_return_3_preg[139] <= 1'b0;
        ap_return_3_preg[140] <= 1'b0;
        ap_return_3_preg[141] <= 1'b0;
        ap_return_3_preg[142] <= 1'b0;
        ap_return_3_preg[143] <= 1'b0;
        ap_return_3_preg[144] <= 1'b0;
        ap_return_3_preg[145] <= 1'b0;
        ap_return_3_preg[146] <= 1'b0;
        ap_return_3_preg[147] <= 1'b0;
        ap_return_3_preg[148] <= 1'b0;
        ap_return_3_preg[149] <= 1'b0;
        ap_return_3_preg[150] <= 1'b0;
        ap_return_3_preg[151] <= 1'b0;
        ap_return_3_preg[152] <= 1'b0;
        ap_return_3_preg[153] <= 1'b0;
        ap_return_3_preg[154] <= 1'b0;
        ap_return_3_preg[155] <= 1'b0;
        ap_return_3_preg[156] <= 1'b0;
        ap_return_3_preg[157] <= 1'b0;
        ap_return_3_preg[158] <= 1'b0;
        ap_return_3_preg[159] <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
                        ap_return_3_preg[0] <= or_ln286_6_fu_4781_p6[0];
            ap_return_3_preg[159 : 32] <= or_ln286_6_fu_4781_p6[159 : 32];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        L0_bitmap_0_fu_342 <= p_read2;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        L0_bitmap_0_fu_342 <= ap_phi_mux_L0_bitmap_4_phi_fu_983_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        L1_bitmap_0_fu_350 <= p_read1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001))) begin
        L1_bitmap_0_fu_350 <= ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1))) begin
        if ((1'b1 == ap_condition_4141)) begin
            ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949 <= L0_bitmap_0_load_reg_5075;
        end else if ((1'b1 == ap_condition_4137)) begin
            ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949 <= tmp_41_fu_2521_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1))) begin
        if ((1'b1 == ap_condition_4149)) begin
            ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959 <= ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949;
        end else if ((1'b1 == ap_condition_4145)) begin
            ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959 <= tmp_68_fu_2922_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_645)) begin
        if (((l1_has_data_3_reg_5475 == 1'd1) & (icmp_ln166_reg_5038 == 1'd0))) begin
            ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970 <= tmp_92_fu_3348_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970 <= ap_phi_reg_pp4_iter0_L0_bitmap_3_reg_970;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_783)) begin
        if (((l2_has_data_1_reg_5700 == 1'd1) & (icmp_ln213_reg_5629 == 1'd0))) begin
            ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990 <= tmp_76_fu_4194_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990 <= ap_phi_reg_pp5_iter0_L1_bitmap_1_reg_990;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((l2_has_data_2_fu_4223_p2 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000 <= ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage7) & (1'b0 == ap_block_pp5_stage7_11001))) begin
        ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000 <= ap_phi_reg_pp5_iter0_L1_bitmap_2_reg_1000;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd1))) begin
        empty_86_fu_386 <= L2_bitmap_read;
    end else if (((ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        empty_86_fu_386 <= tmp_119_fu_4739_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd1))) begin
        i_fu_382 <= 3'd0;
    end else if (((icmp_ln275_fu_4651_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        i_fu_382 <= add_ln275_fu_4657_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_fu_302 <= 8'd0;
    end else if (((icmp_ln111_fu_1298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten13_fu_302 <= add_ln111_1_fu_1304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten20_fu_314 <= 6'd0;
    end else if (((icmp_ln118_fu_1499_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten20_fu_314 <= select_ln119_1_fu_1616_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten33_fu_322 <= 6'd0;
    end else if (((icmp_ln118_fu_1499_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten33_fu_322 <= add_ln118_1_fu_1505_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten40_fu_334 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln125_fu_1688_p2 == 1'd0))) begin
        indvar_flatten40_fu_334 <= add_ln125_1_fu_1694_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        indvar_flatten47_fu_378 <= 3'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln258_fu_4451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        indvar_flatten47_fu_378 <= add_ln258_1_fu_4457_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_294 <= 8'd0;
    end else if (((icmp_ln111_fu_1298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_fu_294 <= select_ln112_1_fu_1345_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        l0_write_pos <= 32'd0;
    end else if ((((l1_has_data_3_fu_2962_p2 == 1'd1) & (icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln166_reg_5038 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (l1_has_data_4_fu_3400_p2 == 1'd1)) | ((l1_has_data_2_reg_5319 == 1'd1) & (icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001)) | ((l1_has_data_1_reg_5168 == 1'd1) & (icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6_11001)))) begin
        l0_write_pos <= grp_fu_1081_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        l1_write_pos <= 32'd0;
    end else if ((((l2_has_data_2_fu_4223_p2 == 1'd1) & (ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((l2_has_data_1_reg_5700 == 1'd1) & (ap_enable_reg_pp5_iter0_reg == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage5) & (1'b0 == ap_block_pp5_stage5_11001)))) begin
        l1_write_pos <= grp_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        l1_y_fu_338 <= 3'd0;
    end else if (((icmp_ln166_fu_1929_p2 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        l1_y_fu_338 <= add_ln166_fu_1935_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        l2_bit_pos_1_fu_358 <= 3'd0;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln258_reg_5845 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        l2_bit_pos_1_fu_358 <= l2_bit_pos_3_fu_4591_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        l2_bit_pos_fu_370 <= 3'd0;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln258_reg_5845 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        l2_bit_pos_fu_370 <= select_ln258_1_fu_4564_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        l2_complete_level_fu_354 <= 64'd0;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln258_reg_5845 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        l2_complete_level_fu_354 <= l2_complete_level_1_fu_4575_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((initialized_load_reg_4854 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        l2_write_pos_flag_0_reg_925 <= 1'd1;
    end else if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        l2_write_pos_flag_0_reg_925 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd0))) begin
        l2_write_pos_flag_1_reg_1022 <= l2_write_pos_flag_0_reg_925;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        l2_write_pos_flag_1_reg_1022 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((initialized_load_reg_4854 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        l2_write_pos_loc_0_reg_938 <= 32'd0;
    end else if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        l2_write_pos_loc_0_reg_938 <= l2_write_pos;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd0))) begin
        l2_write_pos_loc_1_reg_1045 <= l2_write_pos_loc_0_reg_938;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        l2_write_pos_loc_1_reg_1045 <= add_ln280_fu_4757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd0))) begin
        l2_write_pos_new_1_reg_1034 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        l2_write_pos_new_1_reg_1034 <= add_ln280_fu_4757_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        l2_x_fu_362 <= 2'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln258_fu_4451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        l2_x_fu_362 <= select_ln260_fu_4522_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        l2_y_1_fu_374 <= 2'd0;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln258_fu_4451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        l2_y_1_fu_374 <= select_ln258_fu_4497_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        l2_y_fu_346 <= 2'd0;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_11001))) begin
        l2_y_fu_346 <= add_ln213_fu_3914_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        l3_has_data_1_reg_1010 <= 1'd0;
    end else if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln258_reg_5845 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        l3_has_data_1_reg_1010 <= l3_has_data_fu_4585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        retained_block_count <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (voxel_occupancy_reg_4998 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp3_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp3))) begin
        retained_block_count <= add_ln161_fu_1905_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        voxel_count <= 10'd0;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_nbreadreq_fu_414_p3 == 1'd1) & (tmp_2_fu_1792_p3 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        voxel_count <= add_ln141_fu_1814_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_1_fu_326 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln125_fu_1688_p2 == 1'd0))) begin
        x_1_fu_326 <= select_ln126_fu_1759_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x_2_fu_306 <= 3'd0;
    end else if (((icmp_ln118_fu_1499_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        x_2_fu_306 <= add_ln120_fu_1604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        x_fu_286 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_fu_286 <= add_ln113_fu_1447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_1_fu_330 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln125_fu_1688_p2 == 1'd0))) begin
        y_1_fu_330 <= select_ln125_fu_1734_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        y_2_fu_310 <= 3'd0;
    end else if (((icmp_ln118_fu_1499_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        y_2_fu_310 <= select_ln119_fu_1586_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_290 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_fu_290 <= select_ln112_fu_1417_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        z_1_fu_318 <= 2'd0;
    end else if (((icmp_ln118_fu_1499_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        z_1_fu_318 <= select_ln118_1_fu_1558_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        z_fu_298 <= 2'd0;
    end else if (((icmp_ln111_fu_1298_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z_fu_298 <= select_ln111_1_fu_1325_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001))) begin
        L0_bitmap_0_load_reg_5075 <= L0_bitmap_0_fu_342;
        voxel_bit_28_reg_5098 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
        voxel_bit_reg_5092 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_11001))) begin
        L1_bitmap_0_load_reg_5661 <= L1_bitmap_0_fu_350;
        l1_bit_5_reg_5668 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln114_reg_4910 <= add_ln114_fu_1441_p2;
        cond388_i_reg_4906 <= cond388_i_fu_1333_p2;
        cond388_i_reg_4906_pp0_iter1_reg <= cond388_i_reg_4906;
        icmp_ln112_reg_4899 <= icmp_ln112_fu_1319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        add_ln150_reg_5014 <= add_ln150_fu_1862_p2;
        tmp_25_reg_5019 <= {{input_voxel_stream_dout[1084:1]}};
        tmp_3_reg_5010 <= input_voxel_stream_dout[32'd1037];
        voxel_morton_addr_reg_5004 <= {{input_voxel_stream_dout[1084:1025]}};
        voxel_occupancy_reg_4998 <= voxel_occupancy_fu_1800_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b1) & (icmp_ln258_reg_5845 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        add_ln2601_fu_366 <= add_ln260_fu_4597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((l1_has_data_3_reg_5475 == 1'd0) & (icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13_11001))) begin
        ap_phi_reg_pp4_iter0_L0_bitmap_3_reg_970 <= ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959;
    end
end

always @ (posedge ap_clk) begin
    if (((l2_has_data_1_fu_3980_p2 == 1'd0) & (ap_enable_reg_pp5_iter0_reg == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4_11001))) begin
        ap_phi_reg_pp5_iter0_L1_bitmap_1_reg_990 <= L1_bitmap_0_load_reg_5661;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10_11001))) begin
        bit_offset_11_reg_5391 <= bit_offset_11_fu_2702_p3;
        bit_offset_12_reg_5396 <= bit_offset_12_fu_2733_p3;
        tmp_58_reg_5386 <= tmp_58_fu_2670_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_block_pp4_stage11_11001))) begin
        bit_offset_14_reg_5428 <= bit_offset_14_fu_2844_p3;
        sub_ln150_28_reg_5433 <= sub_ln150_28_fu_2852_p2;
        tmp_64_reg_5423 <= tmp_64_fu_2812_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage5) & (1'b0 == ap_block_pp5_stage5_11001))) begin
        bit_offset_16_reg_5709 <= bit_offset_16_fu_4022_p3;
        bit_offset_17_reg_5714 <= bit_offset_17_fu_4054_p3;
        bit_offset_18_reg_5719 <= bit_offset_18_fu_4086_p3;
        bit_offset_19_reg_5724 <= bit_offset_19_fu_4118_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001))) begin
        bit_offset_20_reg_5490 <= bit_offset_20_fu_2992_p3;
        l1_has_data_3_reg_5475 <= l1_has_data_3_fu_2962_p2;
        trunc_ln150_20_reg_5479 <= trunc_ln150_20_fu_2968_p1;
        trunc_ln150_21_reg_5500 <= trunc_ln150_21_fu_3000_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13_11001))) begin
        bit_offset_23_reg_5520 <= bit_offset_23_fu_3140_p3;
        bit_offset_24_reg_5525 <= bit_offset_24_fu_3171_p3;
        tmp_82_reg_5515 <= tmp_82_fu_3108_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == ap_block_pp4_stage14_11001))) begin
        bit_offset_26_reg_5557 <= bit_offset_26_fu_3282_p3;
        sub_ln150_50_reg_5562 <= sub_ln150_50_fu_3290_p2;
        tmp_88_reg_5552 <= tmp_88_fu_3250_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        bit_offset_29_reg_5781 <= bit_offset_29_fu_4299_p3;
        bit_offset_30_reg_5786 <= bit_offset_30_fu_4331_p3;
        bit_offset_31_reg_5791 <= bit_offset_31_fu_4363_p3;
        icmp_ln213_reg_5629 <= icmp_ln213_fu_3876_p2;
        icmp_ln213_reg_5629_pp5_iter1_reg <= icmp_ln213_reg_5629;
        l2_has_data_2_reg_5772 <= l2_has_data_2_fu_4223_p2;
        l2_y_2_reg_5623 <= l2_y_fu_346;
        tmp_95_reg_5776 <= tmp_95_fu_4266_p4;
        trunc_ln213_reg_5633 <= trunc_ln213_fu_3882_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7_11001))) begin
        bit_offset_3_reg_5257 <= bit_offset_3_fu_2265_p3;
        bit_offset_4_reg_5262 <= bit_offset_4_fu_2296_p3;
        bit_offset_5_reg_5267 <= bit_offset_5_fu_2327_p3;
        bit_offset_6_reg_5272 <= bit_offset_6_fu_2358_p3;
        bit_offset_7_reg_5277 <= bit_offset_7_fu_2389_p3;
        tmp_31_reg_5252 <= tmp_31_fu_2233_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001))) begin
        bit_offset_8_reg_5349 <= bit_offset_8_fu_2554_p3;
        trunc_ln150_8_reg_5338 <= trunc_ln150_8_fu_2530_p1;
        trunc_ln150_9_reg_5359 <= trunc_ln150_9_fu_2562_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6_11001))) begin
        bit_offset_reg_5215 <= bit_offset_fu_2118_p3;
        trunc_ln150_1_reg_5225 <= trunc_ln150_1_fu_2126_p1;
        trunc_ln150_reg_5204 <= trunc_ln150_fu_2094_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_11001))) begin
        bit_val_reg_5893 <= bit_val_fu_4672_p1;
        sub_ln150_74_reg_5908 <= sub_ln150_74_fu_4702_p2;
        tmp_118_reg_5898 <= add_ln278_fu_4684_p2[32'd31];
        trunc_ln150_40_reg_5903 <= trunc_ln150_40_fu_4698_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        cond389_i_reg_4963 <= cond389_i_fu_1598_p2;
        empty_84_reg_4958 <= empty_84_fu_1594_p1;
        x_2_mid2_reg_4953 <= x_2_mid2_fu_1578_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln166_reg_5038 <= icmp_ln166_fu_1929_p2;
        trunc_ln166_reg_5042 <= trunc_ln166_fu_1941_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001))) begin
        icmp_ln258_reg_5845 <= icmp_ln258_fu_4451_p2;
        icmp_ln260_reg_5849 <= icmp_ln260_fu_4479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((initialized_load_reg_4854 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        initialized <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        initialized_load_reg_4854 <= initialized;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage7) & (1'b0 == ap_block_pp5_stage7_11001))) begin
        l1_bit_10_reg_5761 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001))) begin
        l1_bit_11_reg_5767 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001))) begin
        l1_bit_6_reg_5684 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4_11001))) begin
        l1_bit_7_reg_5695 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage5) & (1'b0 == ap_block_pp5_stage5_11001))) begin
        l1_bit_8_reg_5729 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage6) & (1'b0 == ap_block_pp5_stage6_11001))) begin
        l1_bit_9_reg_5745 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001))) begin
        l1_bit_reg_5655 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001))) begin
        l1_has_data_1_reg_5168 <= l1_has_data_1_fu_2062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001))) begin
        l1_has_data_2_reg_5319 <= l1_has_data_2_fu_2488_p2;
        tmp_37_reg_5304 <= tmp_37_fu_2448_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4_11001))) begin
        l2_has_data_1_reg_5700 <= l2_has_data_1_fu_3980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49) & (ap_phi_mux_l2_write_pos_flag_1_phi_fu_1026_p4 == 1'd1))) begin
        l2_write_pos <= l2_write_pos_new_1_reg_1034;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6_11001)))) begin
        reg_1147 <= l0_write_pos;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6_11001))) begin
        tmp_28_reg_5220 <= grp_fu_1067_p2[32'd31];
        voxel_bit_33_reg_5230 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_37_reg_5236 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        tmp_2_reg_4991 <= voxel_count[32'd9];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001))) begin
        tmp_55_reg_5354 <= grp_fu_1067_p2[32'd31];
        voxel_bit_40_reg_5364 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_44_reg_5370 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage6) & (1'b0 == ap_block_pp5_stage6_11001))) begin
        tmp_74_reg_5740 <= tmp_74_fu_4170_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001))) begin
        tmp_79_reg_5495 <= grp_fu_1067_p2[32'd31];
        voxel_bit_43_reg_5465 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_47_reg_5470 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        tmp_93_reg_5870 <= tmp_93_fu_4630_p4;
        trunc_ln258_reg_5865 <= trunc_ln258_fu_4626_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_11001))) begin
        voxel_bit_25_reg_5104 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_29_reg_5120 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001))) begin
        voxel_bit_26_reg_5136 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_30_reg_5142 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001))) begin
        voxel_bit_27_reg_5158 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_31_reg_5163 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_block_pp4_stage5_11001))) begin
        voxel_bit_32_reg_5182 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_36_reg_5188 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7_11001))) begin
        voxel_bit_34_reg_5282 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_38_reg_5288 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001))) begin
        voxel_bit_35_reg_5309 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_39_reg_5314 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10_11001))) begin
        voxel_bit_41_reg_5401 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_45_reg_5407 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_block_pp4_stage11_11001))) begin
        voxel_bit_42_reg_5438 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_46_reg_5444 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13_11001))) begin
        voxel_bit_48_reg_5530 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_52_reg_5536 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == ap_block_pp4_stage14_11001))) begin
        voxel_bit_49_reg_5567 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_53_reg_5573 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15_11001))) begin
        voxel_bit_50_reg_5594 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
        voxel_bit_54_reg_5600 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        L2_bitmap_ap_vld = 1'b1;
    end else begin
        L2_bitmap_ap_vld = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state49)) begin
        ap_ST_fsm_state49_blk = 1'b1;
    end else begin
        ap_ST_fsm_state49_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((icmp_ln111_fu_1298_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln118_fu_1499_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_predicate_tran11to13_state11 == 1'b1)) begin
        ap_condition_pp3_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln166_reg_5038 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln213_reg_5629 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state34 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state34 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln258_fu_4451_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state43 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state43 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln275_fu_4651_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln166_reg_5038 == 1'd0)) begin
        if ((l1_has_data_4_fu_3400_p2 == 1'd0)) begin
            ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 = ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970;
        end else if ((l1_has_data_4_fu_3400_p2 == 1'd1)) begin
            ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 = tmp_117_fu_3842_p4;
        end else begin
            ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 = ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980;
        end
    end else begin
        ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 = ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980;
    end
end

always @ (*) begin
    if (((l2_has_data_2_reg_5772 == 1'd1) & (icmp_ln213_reg_5629_pp5_iter1_reg == 1'd0))) begin
        ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4 = tmp_101_fu_4403_p4;
    end else begin
        ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4 = ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
        ap_return_0 = tmp_93_reg_5870;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
        ap_return_1 = L1_bitmap_0_load_reg_5661;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
        ap_return_2 = L0_bitmap_0_load_reg_5075;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
        ap_return_3 = or_ln286_6_fu_4781_p6;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (voxel_occupancy_reg_4998 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp3_stage0_grp1))) begin
        feature_data_stream_blk_n = feature_data_stream_full_n;
    end else begin
        feature_data_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (voxel_occupancy_reg_4998 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp1))) begin
        feature_data_stream_write = 1'b1;
    end else begin
        feature_data_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (tmp_nbreadreq_fu_414_p3 == 1'd1) & (tmp_2_fu_1792_p3 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        input_voxel_stream_blk_n = input_voxel_stream_empty_n;
    end else begin
        input_voxel_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op223_read_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        input_voxel_stream_read = 1'b1;
    end else begin
        input_voxel_stream_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        l2_temp_buffer_address0_local = zext_ln262_fu_4517_p1;
    end else if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        l2_temp_buffer_address0_local = zext_ln241_1_fu_4209_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4))) begin
        l2_temp_buffer_address0_local = zext_ln241_fu_3953_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        l2_temp_buffer_address0_local = zext_ln127_fu_1754_p1;
    end else begin
        l2_temp_buffer_address0_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4_11001)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_11001)))) begin
        l2_temp_buffer_ce0_local = 1'b1;
    end else begin
        l2_temp_buffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        l2_temp_buffer_d0_local = l2_has_data_2_fu_4223_p2;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4))) begin
        l2_temp_buffer_d0_local = l2_has_data_1_fu_3980_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        l2_temp_buffer_d0_local = 1'd0;
    end else begin
        l2_temp_buffer_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter1 == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (icmp_ln213_reg_5629 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4_11001)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln125_fu_1688_p2 == 1'd0)))) begin
        l2_temp_buffer_we0_local = 1'b1;
    end else begin
        l2_temp_buffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_15_fu_3302_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == ap_block_pp4_stage14))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_14_fu_3186_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_7_fu_3017_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_6_fu_2876_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_block_pp4_stage11))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_13_fu_2748_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_12_fu_2579_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_5_fu_2501_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_4_fu_2416_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_11_fu_2143_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_10_fu_2088_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_block_pp4_stage5))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_3_fu_2075_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_2_fu_2025_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_9_fu_2000_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_8_fu_1987_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_1_fu_1974_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln188_fu_1953_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_grp0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln150_fu_1878_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = zext_ln114_1_fu_1463_p1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == ap_block_pp4_stage14_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_block_pp4_stage11_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_block_pp4_stage5_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001)) 
    | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp0)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local = 1'b1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_grp0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local = voxel_occupancy_reg_4998;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local = 1'd0;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_3_reg_5010 == 1'd1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (cond388_i_reg_4906_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local = 1'b1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_15_fu_3302_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == ap_block_pp4_stage14))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_14_fu_3186_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_7_fu_3017_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_6_fu_2876_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_block_pp4_stage11))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_13_fu_2748_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_12_fu_2579_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_5_fu_2501_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_4_fu_2416_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_11_fu_2143_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_10_fu_2088_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_block_pp4_stage5))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_3_fu_2075_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_2_fu_2025_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_9_fu_2000_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_8_fu_1987_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_1_fu_1974_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln188_fu_1953_p1;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_grp0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln150_fu_1878_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = zext_ln114_1_fu_1463_p1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage14) & (1'b0 == ap_block_pp4_stage14_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage13) & (1'b0 == ap_block_pp4_stage13_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage11) & (1'b0 == ap_block_pp4_stage11_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage7) & (1'b0 == ap_block_pp4_stage7_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage5) & (1'b0 == ap_block_pp4_stage5_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001)) 
    | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage6) & (1'b0 == ap_block_pp4_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp0)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local = 1'b1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_grp0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local = voxel_occupancy_reg_4998;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local = 1'd0;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_3_reg_5010 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (cond388_i_reg_4906_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local = 1'b1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage7) & (1'b0 == ap_block_pp5_stage7))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_7_fu_4186_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage6) & (1'b0 == ap_block_pp5_stage6))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_6_fu_4139_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage5) & (1'b0 == ap_block_pp5_stage5))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_3_fu_3993_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_2_fu_3965_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_5_fu_3943_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_4_fu_3926_p1;
    end else if (((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_1_fu_3906_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln232_fu_3894_p1;
    end else if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln198_3_fu_3364_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln198_2_fu_2864_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln198_1_fu_2404_p1;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln198_fu_2013_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = zext_ln121_1_fu_1665_p1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage7) & (1'b0 == ap_block_pp5_stage7_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage6) & (1'b0 == ap_block_pp5_stage6_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage5) & (1'b0 == ap_block_pp5_stage5_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage4) & (1'b0 == ap_block_pp5_stage4_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage3) & (1'b0 == ap_block_pp5_stage3_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage2) & (1'b0 == ap_block_pp5_stage2_11001)) | ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == ap_block_pp5_stage1_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001)) | ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001)) | ((ap_enable_reg_pp4_iter0_reg 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001)) | ((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local = 1'b1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local = l1_has_data_4_fu_3400_p2;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local = l1_has_data_3_fu_2962_p2;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local = l1_has_data_2_fu_2488_p2;
    end else if (((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local = l1_has_data_1_fu_2062_p2;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local = 1'd0;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (cond389_i_reg_4963 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (icmp_ln166_reg_5038 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage8) & (1'b0 == ap_block_pp4_stage8_11001)) | ((icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001)) | ((icmp_ln166_reg_5038 == 1'd0) & (ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001)))) begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local = 1'b1;
    end else begin
        streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (voxel_occupancy_reg_4998 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg) & (1'b0 == ap_block_pp3_stage0_grp2))) begin
        write_addr_stream_blk_n = write_addr_stream_full_n;
    end else begin
        write_addr_stream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (voxel_occupancy_reg_4998 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg) & (1'b0 == ap_block_pp3_stage0_11001_grp2))) begin
        write_addr_stream_write = 1'b1;
    end else begin
        write_addr_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_start == 1'b1) & (initialized_load_load_fu_1235_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln111_fu_1298_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln111_fu_1298_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln118_fu_1499_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln118_fu_1499_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln125_fu_1688_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_predicate_tran11to13_state11 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_predicate_tran11to13_state11 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter0 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((~((icmp_ln166_reg_5038 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_subdone)) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else if (((icmp_ln166_reg_5038 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_pp4_stage4 : begin
            if ((1'b0 == ap_block_pp4_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage4;
            end
        end
        ap_ST_fsm_pp4_stage5 : begin
            if ((1'b0 == ap_block_pp4_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage5;
            end
        end
        ap_ST_fsm_pp4_stage6 : begin
            if ((1'b0 == ap_block_pp4_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage6;
            end
        end
        ap_ST_fsm_pp4_stage7 : begin
            if ((1'b0 == ap_block_pp4_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage7;
            end
        end
        ap_ST_fsm_pp4_stage8 : begin
            if ((1'b0 == ap_block_pp4_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage8;
            end
        end
        ap_ST_fsm_pp4_stage9 : begin
            if ((1'b0 == ap_block_pp4_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage9;
            end
        end
        ap_ST_fsm_pp4_stage10 : begin
            if ((1'b0 == ap_block_pp4_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage10;
            end
        end
        ap_ST_fsm_pp4_stage11 : begin
            if ((1'b0 == ap_block_pp4_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage11;
            end
        end
        ap_ST_fsm_pp4_stage12 : begin
            if ((1'b0 == ap_block_pp4_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage12;
            end
        end
        ap_ST_fsm_pp4_stage13 : begin
            if ((1'b0 == ap_block_pp4_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage13;
            end
        end
        ap_ST_fsm_pp4_stage14 : begin
            if ((1'b0 == ap_block_pp4_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage14;
            end
        end
        ap_ST_fsm_pp4_stage15 : begin
            if ((1'b0 == ap_block_pp4_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage15;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if ((1'b0 == ap_block_pp5_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end
        end
        ap_ST_fsm_pp5_stage2 : begin
            if ((~((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln213_reg_5629 == 1'd1) & (1'b0 == ap_block_pp5_stage2_subdone)) & (1'b0 == ap_block_pp5_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (icmp_ln213_reg_5629 == 1'd1) & (1'b0 == ap_block_pp5_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage2;
            end
        end
        ap_ST_fsm_pp5_stage3 : begin
            if ((1'b0 == ap_block_pp5_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage3;
            end
        end
        ap_ST_fsm_pp5_stage4 : begin
            if ((1'b0 == ap_block_pp5_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage4;
            end
        end
        ap_ST_fsm_pp5_stage5 : begin
            if ((1'b0 == ap_block_pp5_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage5;
            end
        end
        ap_ST_fsm_pp5_stage6 : begin
            if ((1'b0 == ap_block_pp5_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage6;
            end
        end
        ap_ST_fsm_pp5_stage7 : begin
            if ((1'b0 == ap_block_pp5_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage7;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln258_fu_4451_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter0 == 1'b1) & (icmp_ln258_fu_4451_p2 == 1'd1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (l3_has_data_1_reg_1010 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((icmp_ln275_fu_4651_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter1 == 1'b1) & (ap_enable_reg_pp7_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((icmp_ln275_fu_4651_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter1 == 1'b1) & (ap_enable_reg_pp7_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (1'b0 == ap_block_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L2_bitmap = empty_86_fu_386;

assign add_ln111_1_fu_1304_p2 = (indvar_flatten13_fu_302 + 8'd1);

assign add_ln111_fu_1313_p2 = (z_fu_298 + 2'd1);

assign add_ln112_1_fu_1339_p2 = (indvar_flatten_fu_294 + 8'd1);

assign add_ln112_fu_1398_p2 = (select_ln111_fu_1374_p3 + 4'd1);

assign add_ln113_fu_1447_p2 = (x_mid2_fu_1409_p3 + 4'd1);

assign add_ln114_fu_1441_p2 = (tmp_1_fu_1429_p3 + zext_ln114_fu_1437_p1);

assign add_ln118_1_fu_1505_p2 = (indvar_flatten33_fu_322 + 6'd1);

assign add_ln118_fu_1520_p2 = (z_1_fu_318 + 2'd1);

assign add_ln119_1_fu_1610_p2 = (indvar_flatten20_fu_314 + 6'd1);

assign add_ln119_fu_1566_p2 = (select_ln118_fu_1532_p3 + 3'd1);

assign add_ln120_fu_1604_p2 = (x_2_mid2_fu_1578_p3 + 3'd1);

assign add_ln121_fu_1659_p2 = (tmp_s_fu_1649_p3 + zext_ln121_fu_1656_p1);

assign add_ln125_1_fu_1694_p2 = (indvar_flatten40_fu_334 + 3'd1);

assign add_ln125_fu_1710_p2 = (y_1_fu_330 + 2'd1);

assign add_ln141_fu_1814_p2 = (voxel_count + 10'd1);

assign add_ln150_fu_1862_p2 = (tmp_4_fu_1854_p3 + x_3_fu_1826_p4);

assign add_ln161_fu_1905_p2 = (retained_block_count + 32'd1);

assign add_ln166_fu_1935_p2 = (l1_y_fu_338 + 3'd1);

assign add_ln1_fu_4509_p3 = {{trunc_ln258_1_fu_4505_p1}, {and_ln255_fu_4491_p2}};

assign add_ln205_22_fu_3496_p2 = (l0_write_pos + 32'd2);

assign add_ln205_23_fu_3555_p2 = (l0_write_pos + 32'd3);

assign add_ln205_24_fu_3615_p2 = (l0_write_pos + 32'd4);

assign add_ln205_25_fu_3674_p2 = (l0_write_pos + 32'd5);

assign add_ln205_26_fu_3733_p2 = (l0_write_pos + 32'd6);

assign add_ln205_27_fu_3792_p2 = (l0_write_pos + 32'd7);

assign add_ln213_fu_3914_p2 = (l2_y_2_reg_5623 + 2'd1);

assign add_ln258_1_fu_4457_p2 = (indvar_flatten47_fu_378 + 3'd1);

assign add_ln258_fu_4473_p2 = (l2_y_1_fu_374 + 2'd1);

assign add_ln260_fu_4597_p2 = (select_ln258_1_fu_4564_p3 + 3'd2);

assign add_ln275_fu_4657_p2 = (i_fu_382 + 3'd1);

assign add_ln278_fu_4684_p2 = (l2_write_pos_loc_0_reg_938 + zext_ln278_fu_4680_p1);

assign add_ln280_fu_4757_p2 = (l2_write_pos_loc_0_reg_938 + 32'd4);

assign add_ln286_1_fu_4769_p2 = (l2_write_pos_loc_1_reg_1045 + 32'd1);

assign add_ln286_2_fu_4775_p2 = (add_ln286_1_fu_4769_p2 + add_ln286_fu_4763_p2);

assign add_ln286_fu_4763_p2 = (l1_write_pos + l0_write_pos);

assign add_ln_fu_1746_p3 = {{trunc_ln127_fu_1742_p1}, {and_ln125_fu_1728_p2}};

assign and_ln111_fu_1392_p2 = (xor_ln111_fu_1381_p2 & icmp_ln113_fu_1386_p2);

assign and_ln118_fu_1552_p2 = (xor_ln118_fu_1540_p2 & icmp_ln120_fu_1546_p2);

assign and_ln125_fu_1728_p2 = (xor_ln125_fu_1722_p2 & trunc_ln125_fu_1706_p1);

assign and_ln255_fu_4491_p2 = (xor_ln255_fu_4485_p2 & trunc_ln256_fu_4469_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp4_stage10 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp4_stage11 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp4_stage12 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp4_stage13 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp4_stage14 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp4_stage15 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp4_stage4 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp4_stage5 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp4_stage6 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp4_stage7 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp4_stage8 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp4_stage9 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp5_stage2 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp5_stage3 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp5_stage4 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp5_stage5 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp5_stage6 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp5_stage7 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001_grp1 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_01001_grp2 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_01001_grp3 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp3_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = (((1'b1 == ap_block_state11_pp3_stage0_iter0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'b1 == ap_block_state12_pp3_stage0_iter1_grp3) & (1'b0 == ap_block_pp3_stage0_subdone_grp3_done_reg)) | ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp2) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg)) | ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg)))));
end

assign ap_block_pp3_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001_grp1 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_11001_grp2 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_11001_grp3 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp3_done_reg));
end

assign ap_block_pp3_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_subdone = (((1'b1 == ap_block_state11_pp3_stage0_iter0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (((1'b1 == ap_block_state12_pp3_stage0_iter1_grp3) & (1'b0 == ap_block_pp3_stage0_subdone_grp3_done_reg)) | ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp2) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg)) | ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg)))));
end

assign ap_block_pp3_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_subdone_grp1 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp1_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone_grp2 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp2) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp2_done_reg));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone_grp3 = ((1'b1 == ap_block_state12_pp3_stage0_iter1_grp3) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone_grp3_done_reg));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp3_stage0_iter0 = ((input_voxel_stream_empty_n == 1'b0) & (ap_predicate_op223_read_state11 == 1'b1));
end

always @ (*) begin
    ap_block_state12_pp3_stage0_iter1_grp1 = ((feature_data_stream_full_n == 1'b0) & (voxel_occupancy_reg_4998 == 1'd1));
end

always @ (*) begin
    ap_block_state12_pp3_stage0_iter1_grp2 = ((write_addr_stream_full_n == 1'b0) & (voxel_occupancy_reg_4998 == 1'd1));
end

always @ (*) begin
    ap_block_state12_pp3_stage0_iter1_grp3 = ((voxel_occupancy_reg_4998 == 1'd1) & (retained_blocks_stream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state49 = (((retained_blocks_stream_full_n == 1'b0) & (ap_predicate_op1053_write_state49 == 1'b1)) | ((ap_predicate_op1057_write_state49 == 1'b1) & (early_trigger_stream_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_4137 = ((l1_has_data_1_reg_5168 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage9) & (1'b0 == ap_block_pp4_stage9_11001));
end

always @ (*) begin
    ap_condition_4141 = ((l1_has_data_1_fu_2062_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage4) & (1'b0 == ap_block_pp4_stage4_11001));
end

always @ (*) begin
    ap_condition_4145 = ((l1_has_data_2_reg_5319 == 1'd1) & (1'b1 == ap_CS_fsm_pp4_stage12) & (1'b0 == ap_block_pp4_stage12_11001));
end

always @ (*) begin
    ap_condition_4149 = ((l1_has_data_2_reg_5319 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage10) & (1'b0 == ap_block_pp4_stage10_11001));
end

always @ (*) begin
    ap_condition_645 = ((ap_enable_reg_pp4_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage15) & (1'b0 == ap_block_pp4_stage15_11001));
end

always @ (*) begin
    ap_condition_783 = ((ap_enable_reg_pp5_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage7) & (1'b0 == ap_block_pp5_stage7_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_phi_mux_l2_write_pos_flag_1_phi_fu_1026_p4 = l2_write_pos_flag_1_reg_1022;

assign ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980 = 'bx;

assign ap_phi_reg_pp5_iter0_L1_bitmap_2_reg_1000 = 'bx;

always @ (*) begin
    ap_predicate_op1053_write_state49 = ((tmp_2_reg_4991 == 1'd1) & (tmp_43_nbwritereq_fu_455_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op1057_write_state49 = ((tmp_2_reg_4991 == 1'd1) & (tmp_44_nbwritereq_fu_463_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op223_read_state11 = ((tmp_nbreadreq_fu_414_p3 == 1'd1) & (tmp_2_fu_1792_p3 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to13_state11 = ((tmp_nbreadreq_fu_414_p3 == 1'd0) | (tmp_2_fu_1792_p3 == 1'd1));
end

assign bit_offset_10_fu_2658_p3 = ((grp_fu_1157_p3[0:0] == 1'b1) ? sub_ln150_19_fu_2652_p2 : zext_ln150_21_fu_2639_p1);

assign bit_offset_11_fu_2702_p3 = ((grp_fu_1171_p3[0:0] == 1'b1) ? sub_ln150_21_fu_2696_p2 : zext_ln150_23_fu_2683_p1);

assign bit_offset_12_fu_2733_p3 = ((grp_fu_1185_p3[0:0] == 1'b1) ? sub_ln150_23_fu_2727_p2 : zext_ln150_25_fu_2714_p1);

assign bit_offset_13_fu_2800_p3 = ((grp_fu_1199_p3[0:0] == 1'b1) ? sub_ln150_25_fu_2794_p2 : zext_ln150_27_fu_2781_p1);

assign bit_offset_14_fu_2844_p3 = ((grp_fu_1213_p3[0:0] == 1'b1) ? sub_ln150_27_fu_2838_p2 : zext_ln150_29_fu_2825_p1);

assign bit_offset_15_fu_2910_p3 = ((grp_fu_1227_p3[0:0] == 1'b1) ? sub_ln150_29_fu_2904_p2 : zext_ln150_31_fu_2897_p1);

assign bit_offset_16_fu_4022_p3 = ((grp_fu_1091_p3[0:0] == 1'b1) ? sub_ln150_31_fu_4016_p2 : zext_ln150_33_fu_4002_p1);

assign bit_offset_17_fu_4054_p3 = ((grp_fu_1105_p3[0:0] == 1'b1) ? sub_ln150_32_fu_4048_p2 : zext_ln150_35_fu_4034_p1);

assign bit_offset_18_fu_4086_p3 = ((grp_fu_1119_p3[0:0] == 1'b1) ? sub_ln150_34_fu_4080_p2 : zext_ln150_37_fu_4066_p1);

assign bit_offset_19_fu_4118_p3 = ((grp_fu_1133_p3[0:0] == 1'b1) ? sub_ln150_36_fu_4112_p2 : zext_ln150_39_fu_4098_p1);

assign bit_offset_1_fu_2178_p3 = ((tmp_28_reg_5220[0:0] == 1'b1) ? sub_ln150_2_fu_2172_p2 : zext_ln150_3_fu_2160_p1);

assign bit_offset_20_fu_2992_p3 = ((grp_fu_1059_p3[0:0] == 1'b1) ? sub_ln150_38_fu_2986_p2 : zext_ln150_41_fu_2972_p1);

assign bit_offset_21_fu_3053_p3 = ((tmp_79_reg_5495[0:0] == 1'b1) ? sub_ln150_39_fu_3047_p2 : zext_ln150_43_fu_3035_p1);

assign bit_offset_22_fu_3096_p3 = ((grp_fu_1157_p3[0:0] == 1'b1) ? sub_ln150_41_fu_3090_p2 : zext_ln150_45_fu_3077_p1);

assign bit_offset_23_fu_3140_p3 = ((grp_fu_1171_p3[0:0] == 1'b1) ? sub_ln150_43_fu_3134_p2 : zext_ln150_47_fu_3121_p1);

assign bit_offset_24_fu_3171_p3 = ((grp_fu_1185_p3[0:0] == 1'b1) ? sub_ln150_45_fu_3165_p2 : zext_ln150_49_fu_3152_p1);

assign bit_offset_25_fu_3238_p3 = ((grp_fu_1199_p3[0:0] == 1'b1) ? sub_ln150_47_fu_3232_p2 : zext_ln150_51_fu_3219_p1);

assign bit_offset_26_fu_3282_p3 = ((grp_fu_1213_p3[0:0] == 1'b1) ? sub_ln150_49_fu_3276_p2 : zext_ln150_53_fu_3263_p1);

assign bit_offset_27_fu_3336_p3 = ((grp_fu_1227_p3[0:0] == 1'b1) ? sub_ln150_51_fu_3330_p2 : zext_ln150_55_fu_3323_p1);

assign bit_offset_28_fu_4254_p3 = ((grp_fu_1091_p3[0:0] == 1'b1) ? sub_ln150_53_fu_4248_p2 : zext_ln150_57_fu_4234_p1);

assign bit_offset_29_fu_4299_p3 = ((grp_fu_1105_p3[0:0] == 1'b1) ? sub_ln150_54_fu_4293_p2 : zext_ln150_59_fu_4279_p1);

assign bit_offset_2_fu_2221_p3 = ((grp_fu_1157_p3[0:0] == 1'b1) ? sub_ln150_4_fu_2215_p2 : zext_ln150_5_fu_2202_p1);

assign bit_offset_30_fu_4331_p3 = ((grp_fu_1119_p3[0:0] == 1'b1) ? sub_ln150_56_fu_4325_p2 : zext_ln150_61_fu_4311_p1);

assign bit_offset_31_fu_4363_p3 = ((grp_fu_1133_p3[0:0] == 1'b1) ? sub_ln150_58_fu_4357_p2 : zext_ln150_63_fu_4343_p1);

assign bit_offset_32_fu_3430_p3 = ((grp_fu_1059_p3[0:0] == 1'b1) ? sub_ln150_60_fu_3424_p2 : zext_ln150_65_fu_3410_p1);

assign bit_offset_33_fu_3475_p3 = ((grp_fu_1073_p3[0:0] == 1'b1) ? sub_ln150_61_fu_3469_p2 : zext_ln150_67_fu_3455_p1);

assign bit_offset_34_fu_3534_p3 = ((tmp_106_fu_3502_p3[0:0] == 1'b1) ? sub_ln150_63_fu_3528_p2 : zext_ln150_69_fu_3514_p1);

assign bit_offset_35_fu_3593_p3 = ((tmp_108_fu_3561_p3[0:0] == 1'b1) ? sub_ln150_65_fu_3587_p2 : zext_ln150_71_fu_3573_p1);

assign bit_offset_36_fu_3653_p3 = ((tmp_110_fu_3621_p3[0:0] == 1'b1) ? sub_ln150_67_fu_3647_p2 : zext_ln150_73_fu_3633_p1);

assign bit_offset_37_fu_3712_p3 = ((tmp_112_fu_3680_p3[0:0] == 1'b1) ? sub_ln150_69_fu_3706_p2 : zext_ln150_75_fu_3692_p1);

assign bit_offset_38_fu_3771_p3 = ((tmp_114_fu_3739_p3[0:0] == 1'b1) ? sub_ln150_71_fu_3765_p2 : zext_ln150_77_fu_3751_p1);

assign bit_offset_39_fu_3830_p3 = ((tmp_116_fu_3798_p3[0:0] == 1'b1) ? sub_ln150_73_fu_3824_p2 : zext_ln150_79_fu_3810_p1);

assign bit_offset_3_fu_2265_p3 = ((grp_fu_1171_p3[0:0] == 1'b1) ? sub_ln150_6_fu_2259_p2 : zext_ln150_7_fu_2246_p1);

assign bit_offset_40_fu_4728_p3 = ((tmp_118_reg_5898[0:0] == 1'b1) ? sub_ln150_75_fu_4722_p2 : zext_ln150_81_fu_4716_p1);

assign bit_offset_4_fu_2296_p3 = ((grp_fu_1185_p3[0:0] == 1'b1) ? sub_ln150_8_fu_2290_p2 : zext_ln150_9_fu_2277_p1);

assign bit_offset_5_fu_2327_p3 = ((grp_fu_1199_p3[0:0] == 1'b1) ? sub_ln150_10_fu_2321_p2 : zext_ln150_11_fu_2308_p1);

assign bit_offset_6_fu_2358_p3 = ((grp_fu_1213_p3[0:0] == 1'b1) ? sub_ln150_12_fu_2352_p2 : zext_ln150_13_fu_2339_p1);

assign bit_offset_7_fu_2389_p3 = ((grp_fu_1227_p3[0:0] == 1'b1) ? sub_ln150_14_fu_2383_p2 : zext_ln150_15_fu_2370_p1);

assign bit_offset_8_fu_2554_p3 = ((grp_fu_1059_p3[0:0] == 1'b1) ? sub_ln150_16_fu_2548_p2 : zext_ln150_17_fu_2534_p1);

assign bit_offset_9_fu_2615_p3 = ((tmp_55_reg_5354[0:0] == 1'b1) ? sub_ln150_17_fu_2609_p2 : zext_ln150_19_fu_2597_p1);

assign bit_offset_fu_2118_p3 = ((grp_fu_1059_p3[0:0] == 1'b1) ? sub_ln150_1_fu_2112_p2 : zext_ln150_1_fu_2098_p1);

assign bit_val_fu_4672_p1 = lshr_ln277_fu_4667_p2[0:0];

assign cond388_i_fu_1333_p2 = ((select_ln111_1_fu_1325_p3 == 2'd0) ? 1'b1 : 1'b0);

assign cond389_i_fu_1598_p2 = ((select_ln118_1_fu_1558_p3 == 2'd0) ? 1'b1 : 1'b0);

assign early_trigger_stream_full_n = 1'b1;

assign empty_81_fu_1425_p1 = select_ln112_fu_1417_p3[2:0];

assign empty_83_fu_1572_p2 = (icmp_ln119_fu_1526_p2 | and_ln118_fu_1552_p2);

assign empty_84_fu_1594_p1 = select_ln119_fu_1586_p3[1:0];

assign empty_fu_1404_p2 = (icmp_ln112_reg_4899 | and_ln111_fu_1392_p2);

assign feature_data_stream_din = {{tmp_25_reg_5019}, {1'd1}};

assign grp_fu_1059_p3 = l0_write_pos[32'd31];

assign grp_fu_1067_p2 = (l0_write_pos + 32'd1);

assign grp_fu_1073_p3 = grp_fu_1067_p2[32'd31];

assign grp_fu_1081_p2 = (l0_write_pos + 32'd8);

assign grp_fu_1091_p3 = l1_write_pos[32'd31];

assign grp_fu_1099_p2 = (l1_write_pos + 32'd1);

assign grp_fu_1105_p3 = grp_fu_1099_p2[32'd31];

assign grp_fu_1113_p2 = (l1_write_pos + 32'd2);

assign grp_fu_1119_p3 = grp_fu_1113_p2[32'd31];

assign grp_fu_1127_p2 = (l1_write_pos + 32'd3);

assign grp_fu_1133_p3 = grp_fu_1127_p2[32'd31];

assign grp_fu_1141_p2 = (l1_write_pos + 32'd4);

assign grp_fu_1151_p2 = (reg_1147 + 32'd2);

assign grp_fu_1157_p3 = grp_fu_1151_p2[32'd31];

assign grp_fu_1165_p2 = (reg_1147 + 32'd3);

assign grp_fu_1171_p3 = grp_fu_1165_p2[32'd31];

assign grp_fu_1179_p2 = (reg_1147 + 32'd4);

assign grp_fu_1185_p3 = grp_fu_1179_p2[32'd31];

assign grp_fu_1193_p2 = (reg_1147 + 32'd5);

assign grp_fu_1199_p3 = grp_fu_1193_p2[32'd31];

assign grp_fu_1207_p2 = (reg_1147 + 32'd6);

assign grp_fu_1213_p3 = grp_fu_1207_p2[32'd31];

assign grp_fu_1221_p2 = (reg_1147 + 32'd7);

assign grp_fu_1227_p3 = grp_fu_1221_p2[32'd31];

assign icmp_ln111_fu_1298_p2 = ((indvar_flatten13_fu_302 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_1319_p2 = ((indvar_flatten_fu_294 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_1386_p2 = ((x_fu_286 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln118_fu_1499_p2 = ((indvar_flatten33_fu_322 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_1526_p2 = ((indvar_flatten20_fu_314 == 6'd16) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_1546_p2 = ((x_2_fu_306 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_1688_p2 = ((indvar_flatten40_fu_334 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_1716_p2 = ((x_1_fu_326 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln166_fu_1929_p2 = ((l1_y_fu_338 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_3876_p2 = ((l2_y_fu_346 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_4451_p2 = ((indvar_flatten47_fu_378 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln260_fu_4479_p2 = ((l2_x_fu_362 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln275_fu_4651_p2 = ((i_fu_382 == 3'd4) ? 1'b1 : 1'b0);

assign initialized_load_load_fu_1235_p1 = initialized;

assign l1_has_data_1_fu_2062_p2 = (voxel_bit_reg_5092 | or_ln192_5_fu_2057_p2);

assign l1_has_data_2_fu_2488_p2 = (voxel_bit_32_reg_5182 | or_ln192_12_fu_2483_p2);

assign l1_has_data_3_fu_2962_p2 = (voxel_bit_40_reg_5364 | or_ln192_19_fu_2957_p2);

assign l1_has_data_4_fu_3400_p2 = (voxel_bit_48_reg_5530 | or_ln192_26_fu_3395_p2);

assign l2_bit_pos_3_fu_4591_p2 = (select_ln255_fu_4557_p3 + 3'd1);

assign l2_complete_level_1_fu_4575_p2 = select_ln255_fu_4557_p3;

assign l2_has_data_1_fu_3980_p2 = (or_ln236_fu_3975_p2 | l1_bit_reg_5655);

assign l2_has_data_2_fu_4223_p2 = (or_ln236_4_fu_4218_p2 | or_ln236_3_fu_4214_p2);

assign l3_has_data_fu_4585_p2 = (l3_has_data_1_reg_1010 | l2_temp_buffer_q0);

assign lshr_ln277_fu_4667_p2 = trunc_ln258_reg_5865 >> zext_ln275_fu_4663_p1;

assign or_ln192_10_fu_2457_p2 = (voxel_bit_34_reg_5282 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);

assign or_ln192_11_fu_2477_p2 = (or_ln192_9_fu_2471_p2 | or_ln192_10_fu_2457_p2);

assign or_ln192_12_fu_2483_p2 = (voxel_bit_33_reg_5230 | or_ln192_11_fu_2477_p2);

assign or_ln192_14_fu_2936_p2 = (voxel_bit_46_reg_5444 | voxel_bit_45_reg_5407);

assign or_ln192_15_fu_2940_p2 = (voxel_bit_44_reg_5370 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);

assign or_ln192_16_fu_2945_p2 = (or_ln192_15_fu_2940_p2 | or_ln192_14_fu_2936_p2);

assign or_ln192_17_fu_2931_p2 = (voxel_bit_42_reg_5438 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);

assign or_ln192_18_fu_2951_p2 = (or_ln192_17_fu_2931_p2 | or_ln192_16_fu_2945_p2);

assign or_ln192_19_fu_2957_p2 = (voxel_bit_41_reg_5401 | or_ln192_18_fu_2951_p2);

assign or_ln192_1_fu_2042_p2 = (voxel_bit_26_reg_5136 | or_ln192_3_fu_2036_p2);

assign or_ln192_21_fu_3374_p2 = (voxel_bit_54_reg_5600 | voxel_bit_53_reg_5573);

assign or_ln192_22_fu_3378_p2 = (voxel_bit_52_reg_5536 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);

assign or_ln192_23_fu_3383_p2 = (or_ln192_22_fu_3378_p2 | or_ln192_21_fu_3374_p2);

assign or_ln192_24_fu_3369_p2 = (voxel_bit_50_reg_5594 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);

assign or_ln192_25_fu_3389_p2 = (or_ln192_24_fu_3369_p2 | or_ln192_23_fu_3383_p2);

assign or_ln192_26_fu_3395_p2 = (voxel_bit_49_reg_5567 | or_ln192_25_fu_3389_p2);

assign or_ln192_2_fu_2047_p2 = (voxel_bit_29_reg_5120 | or_ln192_1_fu_2042_p2);

assign or_ln192_3_fu_2036_p2 = (streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0 | or_ln192_fu_2031_p2);

assign or_ln192_4_fu_2052_p2 = (voxel_bit_28_reg_5098 | or_ln192_2_fu_2047_p2);

assign or_ln192_5_fu_2057_p2 = (voxel_bit_25_reg_5104 | or_ln192_4_fu_2052_p2);

assign or_ln192_7_fu_2462_p2 = (voxel_bit_38_reg_5288 | voxel_bit_37_reg_5236);

assign or_ln192_8_fu_2466_p2 = (voxel_bit_36_reg_5188 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);

assign or_ln192_9_fu_2471_p2 = (or_ln192_8_fu_2466_p2 | or_ln192_7_fu_2462_p2);

assign or_ln192_fu_2031_p2 = (voxel_bit_30_reg_5142 | streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);

assign or_ln236_1_fu_3970_p2 = (streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0 | l1_bit_6_reg_5684);

assign or_ln236_3_fu_4214_p2 = (l1_bit_8_reg_5729 | l1_bit_10_reg_5761);

assign or_ln236_4_fu_4218_p2 = (streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0 | l1_bit_9_reg_5745);

assign or_ln236_fu_3975_p2 = (or_ln236_1_fu_3970_p2 | l1_bit_5_reg_5668);

assign or_ln286_6_fu_4781_p6 = {{{{{add_ln286_2_fu_4775_p2}, {l0_write_pos}}, {l1_write_pos}}, {l2_write_pos_loc_1_reg_1045}}, {32'd1}};

assign retained_blocks_stream_full_n = 1'b1;

assign select_ln111_1_fu_1325_p3 = ((icmp_ln112_fu_1319_p2[0:0] == 1'b1) ? add_ln111_fu_1313_p2 : z_fu_298);

assign select_ln111_fu_1374_p3 = ((icmp_ln112_reg_4899[0:0] == 1'b1) ? 4'd0 : y_fu_290);

assign select_ln112_1_fu_1345_p3 = ((icmp_ln112_fu_1319_p2[0:0] == 1'b1) ? 8'd1 : add_ln112_1_fu_1339_p2);

assign select_ln112_fu_1417_p3 = ((and_ln111_fu_1392_p2[0:0] == 1'b1) ? add_ln112_fu_1398_p2 : select_ln111_fu_1374_p3);

assign select_ln118_1_fu_1558_p3 = ((icmp_ln119_fu_1526_p2[0:0] == 1'b1) ? add_ln118_fu_1520_p2 : z_1_fu_318);

assign select_ln118_fu_1532_p3 = ((icmp_ln119_fu_1526_p2[0:0] == 1'b1) ? 3'd0 : y_2_fu_310);

assign select_ln119_1_fu_1616_p3 = ((icmp_ln119_fu_1526_p2[0:0] == 1'b1) ? 6'd1 : add_ln119_1_fu_1610_p2);

assign select_ln119_fu_1586_p3 = ((and_ln118_fu_1552_p2[0:0] == 1'b1) ? add_ln119_fu_1566_p2 : select_ln118_fu_1532_p3);

assign select_ln125_fu_1734_p3 = ((icmp_ln126_fu_1716_p2[0:0] == 1'b1) ? add_ln125_fu_1710_p2 : y_1_fu_330);

assign select_ln126_fu_1759_p3 = ((and_ln125_fu_1728_p2[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign select_ln255_fu_4557_p3 = ((icmp_ln260_reg_5849[0:0] == 1'b1) ? add_ln2601_fu_366 : l2_bit_pos_1_fu_358);

assign select_ln258_1_fu_4564_p3 = ((icmp_ln260_reg_5849[0:0] == 1'b1) ? add_ln2601_fu_366 : l2_bit_pos_fu_370);

assign select_ln258_fu_4497_p3 = ((icmp_ln260_fu_4479_p2[0:0] == 1'b1) ? add_ln258_fu_4473_p2 : l2_y_1_fu_374);

assign select_ln260_fu_4522_p3 = ((and_ln255_fu_4491_p2[0:0] == 1'b1) ? 2'd2 : 2'd1);

assign shl_ln241_fu_3948_p2 = l2_y_2_reg_5623 << 2'd1;

assign sub_ln150_10_fu_2321_p2 = (10'd0 - zext_ln150_12_fu_2317_p1);

assign sub_ln150_11_fu_2343_p2 = ($signed(9'd506) - $signed(trunc_ln150_reg_5204));

assign sub_ln150_12_fu_2352_p2 = (10'd0 - zext_ln150_14_fu_2348_p1);

assign sub_ln150_13_fu_2374_p2 = ($signed(9'd505) - $signed(trunc_ln150_reg_5204));

assign sub_ln150_14_fu_2383_p2 = (10'd0 - zext_ln150_16_fu_2379_p1);

assign sub_ln150_15_fu_2538_p2 = (9'd0 - trunc_ln150_8_fu_2530_p1);

assign sub_ln150_16_fu_2548_p2 = (10'd0 - zext_ln150_18_fu_2544_p1);

assign sub_ln150_17_fu_2609_p2 = (10'd0 - zext_ln150_20_fu_2605_p1);

assign sub_ln150_18_fu_2643_p2 = ($signed(9'd510) - $signed(trunc_ln150_8_reg_5338));

assign sub_ln150_19_fu_2652_p2 = (10'd0 - zext_ln150_22_fu_2648_p1);

assign sub_ln150_1_fu_2112_p2 = (10'd0 - zext_ln150_2_fu_2108_p1);

assign sub_ln150_20_fu_2687_p2 = ($signed(9'd509) - $signed(trunc_ln150_8_reg_5338));

assign sub_ln150_21_fu_2696_p2 = (10'd0 - zext_ln150_24_fu_2692_p1);

assign sub_ln150_22_fu_2718_p2 = ($signed(9'd508) - $signed(trunc_ln150_8_reg_5338));

assign sub_ln150_23_fu_2727_p2 = (10'd0 - zext_ln150_26_fu_2723_p1);

assign sub_ln150_24_fu_2785_p2 = ($signed(9'd507) - $signed(trunc_ln150_8_reg_5338));

assign sub_ln150_25_fu_2794_p2 = (10'd0 - zext_ln150_28_fu_2790_p1);

assign sub_ln150_26_fu_2829_p2 = ($signed(9'd506) - $signed(trunc_ln150_8_reg_5338));

assign sub_ln150_27_fu_2838_p2 = (10'd0 - zext_ln150_30_fu_2834_p1);

assign sub_ln150_28_fu_2852_p2 = ($signed(9'd505) - $signed(trunc_ln150_8_reg_5338));

assign sub_ln150_29_fu_2904_p2 = (10'd0 - zext_ln150_32_fu_2901_p1);

assign sub_ln150_2_fu_2172_p2 = (10'd0 - zext_ln150_4_fu_2168_p1);

assign sub_ln150_30_fu_4006_p2 = (9'd0 - trunc_ln150_16_fu_3998_p1);

assign sub_ln150_31_fu_4016_p2 = (10'd0 - zext_ln150_34_fu_4012_p1);

assign sub_ln150_32_fu_4048_p2 = (10'd0 - zext_ln150_36_fu_4044_p1);

assign sub_ln150_33_fu_4070_p2 = ($signed(9'd510) - $signed(trunc_ln150_16_fu_3998_p1));

assign sub_ln150_34_fu_4080_p2 = (10'd0 - zext_ln150_38_fu_4076_p1);

assign sub_ln150_35_fu_4102_p2 = ($signed(9'd509) - $signed(trunc_ln150_16_fu_3998_p1));

assign sub_ln150_36_fu_4112_p2 = (10'd0 - zext_ln150_40_fu_4108_p1);

assign sub_ln150_37_fu_2976_p2 = (9'd0 - trunc_ln150_20_fu_2968_p1);

assign sub_ln150_38_fu_2986_p2 = (10'd0 - zext_ln150_42_fu_2982_p1);

assign sub_ln150_39_fu_3047_p2 = (10'd0 - zext_ln150_44_fu_3043_p1);

assign sub_ln150_3_fu_2206_p2 = ($signed(9'd510) - $signed(trunc_ln150_reg_5204));

assign sub_ln150_40_fu_3081_p2 = ($signed(9'd510) - $signed(trunc_ln150_20_reg_5479));

assign sub_ln150_41_fu_3090_p2 = (10'd0 - zext_ln150_46_fu_3086_p1);

assign sub_ln150_42_fu_3125_p2 = ($signed(9'd509) - $signed(trunc_ln150_20_reg_5479));

assign sub_ln150_43_fu_3134_p2 = (10'd0 - zext_ln150_48_fu_3130_p1);

assign sub_ln150_44_fu_3156_p2 = ($signed(9'd508) - $signed(trunc_ln150_20_reg_5479));

assign sub_ln150_45_fu_3165_p2 = (10'd0 - zext_ln150_50_fu_3161_p1);

assign sub_ln150_46_fu_3223_p2 = ($signed(9'd507) - $signed(trunc_ln150_20_reg_5479));

assign sub_ln150_47_fu_3232_p2 = (10'd0 - zext_ln150_52_fu_3228_p1);

assign sub_ln150_48_fu_3267_p2 = ($signed(9'd506) - $signed(trunc_ln150_20_reg_5479));

assign sub_ln150_49_fu_3276_p2 = (10'd0 - zext_ln150_54_fu_3272_p1);

assign sub_ln150_4_fu_2215_p2 = (10'd0 - zext_ln150_6_fu_2211_p1);

assign sub_ln150_50_fu_3290_p2 = ($signed(9'd505) - $signed(trunc_ln150_20_reg_5479));

assign sub_ln150_51_fu_3330_p2 = (10'd0 - zext_ln150_56_fu_3327_p1);

assign sub_ln150_52_fu_4238_p2 = (9'd0 - trunc_ln150_28_fu_4230_p1);

assign sub_ln150_53_fu_4248_p2 = (10'd0 - zext_ln150_58_fu_4244_p1);

assign sub_ln150_54_fu_4293_p2 = (10'd0 - zext_ln150_60_fu_4289_p1);

assign sub_ln150_55_fu_4315_p2 = ($signed(9'd510) - $signed(trunc_ln150_28_fu_4230_p1));

assign sub_ln150_56_fu_4325_p2 = (10'd0 - zext_ln150_62_fu_4321_p1);

assign sub_ln150_57_fu_4347_p2 = ($signed(9'd509) - $signed(trunc_ln150_28_fu_4230_p1));

assign sub_ln150_58_fu_4357_p2 = (10'd0 - zext_ln150_64_fu_4353_p1);

assign sub_ln150_59_fu_3414_p2 = (9'd0 - trunc_ln150_32_fu_3406_p1);

assign sub_ln150_5_fu_2250_p2 = ($signed(9'd509) - $signed(trunc_ln150_reg_5204));

assign sub_ln150_60_fu_3424_p2 = (10'd0 - zext_ln150_66_fu_3420_p1);

assign sub_ln150_61_fu_3469_p2 = (10'd0 - zext_ln150_68_fu_3465_p1);

assign sub_ln150_62_fu_3518_p2 = ($signed(9'd510) - $signed(trunc_ln150_32_fu_3406_p1));

assign sub_ln150_63_fu_3528_p2 = (10'd0 - zext_ln150_70_fu_3524_p1);

assign sub_ln150_64_fu_3577_p2 = ($signed(9'd509) - $signed(trunc_ln150_32_fu_3406_p1));

assign sub_ln150_65_fu_3587_p2 = (10'd0 - zext_ln150_72_fu_3583_p1);

assign sub_ln150_66_fu_3637_p2 = ($signed(9'd508) - $signed(trunc_ln150_32_fu_3406_p1));

assign sub_ln150_67_fu_3647_p2 = (10'd0 - zext_ln150_74_fu_3643_p1);

assign sub_ln150_68_fu_3696_p2 = ($signed(9'd507) - $signed(trunc_ln150_32_fu_3406_p1));

assign sub_ln150_69_fu_3706_p2 = (10'd0 - zext_ln150_76_fu_3702_p1);

assign sub_ln150_6_fu_2259_p2 = (10'd0 - zext_ln150_8_fu_2255_p1);

assign sub_ln150_70_fu_3755_p2 = ($signed(9'd506) - $signed(trunc_ln150_32_fu_3406_p1));

assign sub_ln150_71_fu_3765_p2 = (10'd0 - zext_ln150_78_fu_3761_p1);

assign sub_ln150_72_fu_3814_p2 = ($signed(9'd505) - $signed(trunc_ln150_32_fu_3406_p1));

assign sub_ln150_73_fu_3824_p2 = (10'd0 - zext_ln150_80_fu_3820_p1);

assign sub_ln150_74_fu_4702_p2 = (9'd0 - trunc_ln150_40_fu_4698_p1);

assign sub_ln150_75_fu_4722_p2 = (10'd0 - zext_ln150_82_fu_4719_p1);

assign sub_ln150_7_fu_2281_p2 = ($signed(9'd508) - $signed(trunc_ln150_reg_5204));

assign sub_ln150_8_fu_2290_p2 = (10'd0 - zext_ln150_10_fu_2286_p1);

assign sub_ln150_9_fu_2312_p2 = ($signed(9'd507) - $signed(trunc_ln150_reg_5204));

assign sub_ln150_fu_2102_p2 = (9'd0 - trunc_ln150_fu_2094_p1);

assign tmp_101_fu_4403_p2 = $signed(bit_offset_31_reg_5791);

assign tmp_103_fu_3442_p2 = $signed(bit_offset_32_fu_3430_p3);

assign tmp_105_fu_3487_p2 = $signed(bit_offset_33_fu_3475_p3);

assign tmp_106_fu_3502_p3 = add_ln205_22_fu_3496_p2[32'd31];

assign tmp_107_fu_3546_p2 = $signed(bit_offset_34_fu_3534_p3);

assign tmp_108_fu_3561_p3 = add_ln205_23_fu_3555_p2[32'd31];

assign tmp_109_fu_3605_p2 = $signed(bit_offset_35_fu_3593_p3);

assign tmp_10_fu_1967_p3 = {{trunc_ln166_reg_5042}, {4'd1}};

assign tmp_110_fu_3621_p3 = add_ln205_24_fu_3615_p2[32'd31];

assign tmp_111_fu_3665_p2 = $signed(bit_offset_36_fu_3653_p3);

assign tmp_112_fu_3680_p3 = add_ln205_25_fu_3674_p2[32'd31];

assign tmp_113_fu_3724_p2 = $signed(bit_offset_37_fu_3712_p3);

assign tmp_114_fu_3739_p3 = add_ln205_26_fu_3733_p2[32'd31];

assign tmp_115_fu_3783_p2 = $signed(bit_offset_38_fu_3771_p3);

assign tmp_116_fu_3798_p3 = add_ln205_27_fu_3792_p2[32'd31];

assign tmp_117_fu_3842_p2 = $signed(bit_offset_39_fu_3830_p3);

assign tmp_119_fu_4739_p2 = $signed(bit_offset_40_fu_4728_p3);

assign tmp_11_fu_2018_p3 = {{trunc_ln166_reg_5042}, {4'd2}};

assign tmp_12_fu_2068_p3 = {{trunc_ln166_reg_5042}, {4'd3}};

assign tmp_13_fu_2409_p3 = {{trunc_ln166_reg_5042}, {4'd4}};

assign tmp_14_fu_2494_p3 = {{trunc_ln166_reg_5042}, {4'd5}};

assign tmp_15_fu_2869_p3 = {{trunc_ln166_reg_5042}, {4'd6}};

assign tmp_16_fu_3010_p3 = {{trunc_ln166_reg_5042}, {4'd7}};

assign tmp_17_fu_1980_p3 = {{trunc_ln166_reg_5042}, {4'd8}};

assign tmp_18_fu_1993_p3 = {{trunc_ln166_reg_5042}, {4'd9}};

assign tmp_19_fu_2081_p3 = {{trunc_ln166_reg_5042}, {4'd10}};

assign tmp_1_fu_1429_p3 = {{empty_81_fu_1425_p1}, {3'd0}};

assign tmp_20_fu_2136_p3 = {{trunc_ln166_reg_5042}, {4'd11}};

assign tmp_21_fu_2572_p3 = {{trunc_ln166_reg_5042}, {4'd12}};

assign tmp_22_fu_2741_p3 = {{trunc_ln166_reg_5042}, {4'd13}};

assign tmp_23_fu_3179_p3 = {{trunc_ln166_reg_5042}, {4'd14}};

assign tmp_24_fu_3295_p3 = {{trunc_ln166_reg_5042}, {4'd15}};

assign tmp_27_fu_2152_p2 = $signed(bit_offset_reg_5215);

assign tmp_29_fu_2189_p2 = $signed(bit_offset_1_fu_2178_p3);

assign tmp_2_fu_1792_p3 = voxel_count[32'd9];

assign tmp_31_fu_2233_p2 = $signed(bit_offset_2_fu_2221_p3);

assign tmp_33_fu_2425_p2 = $signed(bit_offset_3_reg_5257);

assign tmp_35_fu_2436_p2 = $signed(bit_offset_4_reg_5262);

assign tmp_37_fu_2448_p2 = $signed(bit_offset_5_reg_5267);

assign tmp_39_fu_2510_p2 = $signed(bit_offset_6_reg_5272);

assign tmp_41_fu_2521_p2 = $signed(bit_offset_7_reg_5277);

assign tmp_42_fu_4202_p3 = {{trunc_ln213_reg_5633}, {1'd1}};

assign tmp_43_nbwritereq_fu_455_p3 = 1'b1;

assign tmp_44_nbwritereq_fu_463_p3 = 1'b1;

assign tmp_45_fu_3886_p3 = {{trunc_ln213_fu_3882_p1}, {3'd0}};

assign tmp_46_fu_3899_p3 = {{trunc_ln213_reg_5633}, {3'd1}};

assign tmp_47_fu_3958_p3 = {{trunc_ln213_reg_5633}, {3'd2}};

assign tmp_48_fu_3986_p3 = {{trunc_ln213_reg_5633}, {3'd3}};

assign tmp_49_fu_3919_p3 = {{trunc_ln213_reg_5633}, {3'd4}};

assign tmp_4_fu_1854_p3 = {{y_3_fu_1836_p4}, {3'd0}};

assign tmp_50_fu_3936_p3 = {{trunc_ln213_reg_5633}, {3'd5}};

assign tmp_51_fu_4132_p3 = {{trunc_ln213_reg_5633}, {3'd6}};

assign tmp_52_fu_4179_p3 = {{trunc_ln213_reg_5633}, {3'd7}};

assign tmp_54_fu_2588_p2 = $signed(bit_offset_8_reg_5349);

assign tmp_56_fu_2626_p2 = $signed(bit_offset_9_fu_2615_p3);

assign tmp_58_fu_2670_p2 = $signed(bit_offset_10_fu_2658_p3);

assign tmp_5_fu_2006_p3 = {{trunc_ln166_reg_5042}, {2'd0}};

assign tmp_60_fu_2757_p2 = $signed(bit_offset_11_reg_5391);

assign tmp_62_fu_2768_p2 = $signed(bit_offset_12_reg_5396);

assign tmp_64_fu_2812_p2 = $signed(bit_offset_13_fu_2800_p3);

assign tmp_66_fu_2885_p2 = $signed(bit_offset_14_reg_5428);

assign tmp_68_fu_2922_p2 = $signed(bit_offset_15_fu_2910_p3);

assign tmp_6_fu_2397_p3 = {{trunc_ln166_reg_5042}, {2'd1}};

assign tmp_70_fu_4147_p2 = $signed(bit_offset_16_reg_5709);

assign tmp_72_fu_4158_p2 = $signed(bit_offset_17_reg_5714);

assign tmp_74_fu_4170_p2 = $signed(bit_offset_18_reg_5719);

assign tmp_76_fu_4194_p2 = $signed(bit_offset_19_reg_5724);

assign tmp_78_fu_3026_p2 = $signed(bit_offset_20_reg_5490);

assign tmp_7_fu_2857_p3 = {{trunc_ln166_reg_5042}, {2'd2}};

assign tmp_80_fu_3064_p2 = $signed(bit_offset_21_fu_3053_p3);

assign tmp_82_fu_3108_p2 = $signed(bit_offset_22_fu_3096_p3);

assign tmp_84_fu_3195_p2 = $signed(bit_offset_23_reg_5520);

assign tmp_86_fu_3206_p2 = $signed(bit_offset_24_reg_5525);

assign tmp_88_fu_3250_p2 = $signed(bit_offset_25_fu_3238_p3);

assign tmp_8_fu_3357_p3 = {{trunc_ln166_reg_5042}, {2'd3}};

assign tmp_90_fu_3311_p2 = $signed(bit_offset_26_reg_5557);

assign tmp_92_fu_3348_p2 = $signed(bit_offset_27_fu_3336_p3);

assign tmp_93_fu_4630_p4 = {p_read[512-1:1], |(l3_has_data_1_reg_1010)};

assign tmp_95_fu_4266_p2 = $signed(bit_offset_28_fu_4254_p3);

assign tmp_97_fu_4380_p2 = $signed(bit_offset_29_reg_5781);

assign tmp_99_fu_4391_p2 = $signed(bit_offset_30_reg_5786);

assign tmp_9_fu_1945_p3 = {{trunc_ln166_fu_1941_p1}, {4'd0}};

assign tmp_nbreadreq_fu_414_p3 = input_voxel_stream_empty_n;

assign tmp_s_fu_1649_p3 = {{empty_84_reg_4958}, {2'd0}};

assign trunc_ln125_fu_1706_p1 = x_1_fu_326[0:0];

assign trunc_ln127_fu_1742_p1 = select_ln125_fu_1734_p3[0:0];

assign trunc_ln150_10_fu_2635_p1 = grp_fu_1151_p2[8:0];

assign trunc_ln150_11_fu_2679_p1 = grp_fu_1165_p2[8:0];

assign trunc_ln150_12_fu_2710_p1 = grp_fu_1179_p2[8:0];

assign trunc_ln150_13_fu_2777_p1 = grp_fu_1193_p2[8:0];

assign trunc_ln150_14_fu_2821_p1 = grp_fu_1207_p2[8:0];

assign trunc_ln150_15_fu_2893_p1 = grp_fu_1221_p2[8:0];

assign trunc_ln150_16_fu_3998_p1 = l1_write_pos[8:0];

assign trunc_ln150_17_fu_4030_p1 = grp_fu_1099_p2[8:0];

assign trunc_ln150_18_fu_4062_p1 = grp_fu_1113_p2[8:0];

assign trunc_ln150_19_fu_4094_p1 = grp_fu_1127_p2[8:0];

assign trunc_ln150_1_fu_2126_p1 = grp_fu_1067_p2[8:0];

assign trunc_ln150_20_fu_2968_p1 = l0_write_pos[8:0];

assign trunc_ln150_21_fu_3000_p1 = grp_fu_1067_p2[8:0];

assign trunc_ln150_22_fu_3073_p1 = grp_fu_1151_p2[8:0];

assign trunc_ln150_23_fu_3117_p1 = grp_fu_1165_p2[8:0];

assign trunc_ln150_24_fu_3148_p1 = grp_fu_1179_p2[8:0];

assign trunc_ln150_25_fu_3215_p1 = grp_fu_1193_p2[8:0];

assign trunc_ln150_26_fu_3259_p1 = grp_fu_1207_p2[8:0];

assign trunc_ln150_27_fu_3319_p1 = grp_fu_1221_p2[8:0];

assign trunc_ln150_28_fu_4230_p1 = l1_write_pos[8:0];

assign trunc_ln150_29_fu_4275_p1 = grp_fu_1099_p2[8:0];

assign trunc_ln150_2_fu_2198_p1 = grp_fu_1151_p2[8:0];

assign trunc_ln150_30_fu_4307_p1 = grp_fu_1113_p2[8:0];

assign trunc_ln150_31_fu_4339_p1 = grp_fu_1127_p2[8:0];

assign trunc_ln150_32_fu_3406_p1 = l0_write_pos[8:0];

assign trunc_ln150_33_fu_3451_p1 = grp_fu_1067_p2[8:0];

assign trunc_ln150_34_fu_3510_p1 = add_ln205_22_fu_3496_p2[8:0];

assign trunc_ln150_35_fu_3569_p1 = add_ln205_23_fu_3555_p2[8:0];

assign trunc_ln150_36_fu_3629_p1 = add_ln205_24_fu_3615_p2[8:0];

assign trunc_ln150_37_fu_3688_p1 = add_ln205_25_fu_3674_p2[8:0];

assign trunc_ln150_38_fu_3747_p1 = add_ln205_26_fu_3733_p2[8:0];

assign trunc_ln150_39_fu_3806_p1 = add_ln205_27_fu_3792_p2[8:0];

assign trunc_ln150_3_fu_2242_p1 = grp_fu_1165_p2[8:0];

assign trunc_ln150_40_fu_4698_p1 = add_ln278_fu_4684_p2[8:0];

assign trunc_ln150_4_fu_2273_p1 = grp_fu_1179_p2[8:0];

assign trunc_ln150_5_fu_2304_p1 = grp_fu_1193_p2[8:0];

assign trunc_ln150_6_fu_2335_p1 = grp_fu_1207_p2[8:0];

assign trunc_ln150_7_fu_2366_p1 = grp_fu_1221_p2[8:0];

assign trunc_ln150_8_fu_2530_p1 = l0_write_pos[8:0];

assign trunc_ln150_9_fu_2562_p1 = grp_fu_1067_p2[8:0];

assign trunc_ln150_fu_2094_p1 = l0_write_pos[8:0];

assign trunc_ln166_fu_1941_p1 = l1_y_fu_338[1:0];

assign trunc_ln213_fu_3882_p1 = l2_y_fu_346[0:0];

assign trunc_ln256_fu_4469_p1 = l2_x_fu_362[0:0];

assign trunc_ln258_1_fu_4505_p1 = select_ln258_fu_4497_p3[0:0];

assign trunc_ln258_fu_4626_p1 = l2_complete_level_fu_354[3:0];

assign trunc_ln278_fu_4676_p1 = i_fu_382[1:0];

assign voxel_occupancy_fu_1800_p1 = input_voxel_stream_dout[0:0];

assign write_addr_stream_din = voxel_morton_addr_reg_5004;

assign x_2_mid2_fu_1578_p3 = ((empty_83_fu_1572_p2[0:0] == 1'b1) ? 3'd0 : x_2_fu_306);

assign x_3_fu_1826_p4 = {{input_voxel_stream_dout[1030:1025]}};

assign x_mid2_fu_1409_p3 = ((empty_fu_1404_p2[0:0] == 1'b1) ? 4'd0 : x_fu_286);

assign xor_ln111_fu_1381_p2 = (icmp_ln112_reg_4899 ^ 1'd1);

assign xor_ln118_fu_1540_p2 = (icmp_ln119_fu_1526_p2 ^ 1'd1);

assign xor_ln125_fu_1722_p2 = (icmp_ln126_fu_1716_p2 ^ 1'd1);

assign xor_ln150_1_fu_2600_p2 = (trunc_ln150_8_reg_5338 ^ 9'd511);

assign xor_ln150_2_fu_4038_p2 = (trunc_ln150_16_fu_3998_p1 ^ 9'd511);

assign xor_ln150_3_fu_3038_p2 = (trunc_ln150_20_reg_5479 ^ 9'd511);

assign xor_ln150_4_fu_4283_p2 = (trunc_ln150_28_fu_4230_p1 ^ 9'd511);

assign xor_ln150_5_fu_3459_p2 = (trunc_ln150_32_fu_3406_p1 ^ 9'd511);

assign xor_ln150_fu_2163_p2 = (trunc_ln150_reg_5204 ^ 9'd511);

assign xor_ln255_fu_4485_p2 = (icmp_ln260_fu_4479_p2 ^ 1'd1);

assign y_3_fu_1836_p4 = {{input_voxel_stream_dout[1033:1031]}};

assign zext_ln114_1_fu_1463_p1 = add_ln114_reg_4910;

assign zext_ln114_fu_1437_p1 = x_mid2_fu_1409_p3;

assign zext_ln121_1_fu_1665_p1 = add_ln121_fu_1659_p2;

assign zext_ln121_fu_1656_p1 = x_2_mid2_reg_4953;

assign zext_ln127_fu_1754_p1 = add_ln_fu_1746_p3;

assign zext_ln150_10_fu_2286_p1 = sub_ln150_7_fu_2281_p2;

assign zext_ln150_11_fu_2308_p1 = trunc_ln150_5_fu_2304_p1;

assign zext_ln150_12_fu_2317_p1 = sub_ln150_9_fu_2312_p2;

assign zext_ln150_13_fu_2339_p1 = trunc_ln150_6_fu_2335_p1;

assign zext_ln150_14_fu_2348_p1 = sub_ln150_11_fu_2343_p2;

assign zext_ln150_15_fu_2370_p1 = trunc_ln150_7_fu_2366_p1;

assign zext_ln150_16_fu_2379_p1 = sub_ln150_13_fu_2374_p2;

assign zext_ln150_17_fu_2534_p1 = trunc_ln150_8_fu_2530_p1;

assign zext_ln150_18_fu_2544_p1 = sub_ln150_15_fu_2538_p2;

assign zext_ln150_19_fu_2597_p1 = trunc_ln150_9_reg_5359;

assign zext_ln150_1_fu_2098_p1 = trunc_ln150_fu_2094_p1;

assign zext_ln150_20_fu_2605_p1 = xor_ln150_1_fu_2600_p2;

assign zext_ln150_21_fu_2639_p1 = trunc_ln150_10_fu_2635_p1;

assign zext_ln150_22_fu_2648_p1 = sub_ln150_18_fu_2643_p2;

assign zext_ln150_23_fu_2683_p1 = trunc_ln150_11_fu_2679_p1;

assign zext_ln150_24_fu_2692_p1 = sub_ln150_20_fu_2687_p2;

assign zext_ln150_25_fu_2714_p1 = trunc_ln150_12_fu_2710_p1;

assign zext_ln150_26_fu_2723_p1 = sub_ln150_22_fu_2718_p2;

assign zext_ln150_27_fu_2781_p1 = trunc_ln150_13_fu_2777_p1;

assign zext_ln150_28_fu_2790_p1 = sub_ln150_24_fu_2785_p2;

assign zext_ln150_29_fu_2825_p1 = trunc_ln150_14_fu_2821_p1;

assign zext_ln150_2_fu_2108_p1 = sub_ln150_fu_2102_p2;

assign zext_ln150_30_fu_2834_p1 = sub_ln150_26_fu_2829_p2;

assign zext_ln150_31_fu_2897_p1 = trunc_ln150_15_fu_2893_p1;

assign zext_ln150_32_fu_2901_p1 = sub_ln150_28_reg_5433;

assign zext_ln150_33_fu_4002_p1 = trunc_ln150_16_fu_3998_p1;

assign zext_ln150_34_fu_4012_p1 = sub_ln150_30_fu_4006_p2;

assign zext_ln150_35_fu_4034_p1 = trunc_ln150_17_fu_4030_p1;

assign zext_ln150_36_fu_4044_p1 = xor_ln150_2_fu_4038_p2;

assign zext_ln150_37_fu_4066_p1 = trunc_ln150_18_fu_4062_p1;

assign zext_ln150_38_fu_4076_p1 = sub_ln150_33_fu_4070_p2;

assign zext_ln150_39_fu_4098_p1 = trunc_ln150_19_fu_4094_p1;

assign zext_ln150_3_fu_2160_p1 = trunc_ln150_1_reg_5225;

assign zext_ln150_40_fu_4108_p1 = sub_ln150_35_fu_4102_p2;

assign zext_ln150_41_fu_2972_p1 = trunc_ln150_20_fu_2968_p1;

assign zext_ln150_42_fu_2982_p1 = sub_ln150_37_fu_2976_p2;

assign zext_ln150_43_fu_3035_p1 = trunc_ln150_21_reg_5500;

assign zext_ln150_44_fu_3043_p1 = xor_ln150_3_fu_3038_p2;

assign zext_ln150_45_fu_3077_p1 = trunc_ln150_22_fu_3073_p1;

assign zext_ln150_46_fu_3086_p1 = sub_ln150_40_fu_3081_p2;

assign zext_ln150_47_fu_3121_p1 = trunc_ln150_23_fu_3117_p1;

assign zext_ln150_48_fu_3130_p1 = sub_ln150_42_fu_3125_p2;

assign zext_ln150_49_fu_3152_p1 = trunc_ln150_24_fu_3148_p1;

assign zext_ln150_4_fu_2168_p1 = xor_ln150_fu_2163_p2;

assign zext_ln150_50_fu_3161_p1 = sub_ln150_44_fu_3156_p2;

assign zext_ln150_51_fu_3219_p1 = trunc_ln150_25_fu_3215_p1;

assign zext_ln150_52_fu_3228_p1 = sub_ln150_46_fu_3223_p2;

assign zext_ln150_53_fu_3263_p1 = trunc_ln150_26_fu_3259_p1;

assign zext_ln150_54_fu_3272_p1 = sub_ln150_48_fu_3267_p2;

assign zext_ln150_55_fu_3323_p1 = trunc_ln150_27_fu_3319_p1;

assign zext_ln150_56_fu_3327_p1 = sub_ln150_50_reg_5562;

assign zext_ln150_57_fu_4234_p1 = trunc_ln150_28_fu_4230_p1;

assign zext_ln150_58_fu_4244_p1 = sub_ln150_52_fu_4238_p2;

assign zext_ln150_59_fu_4279_p1 = trunc_ln150_29_fu_4275_p1;

assign zext_ln150_5_fu_2202_p1 = trunc_ln150_2_fu_2198_p1;

assign zext_ln150_60_fu_4289_p1 = xor_ln150_4_fu_4283_p2;

assign zext_ln150_61_fu_4311_p1 = trunc_ln150_30_fu_4307_p1;

assign zext_ln150_62_fu_4321_p1 = sub_ln150_55_fu_4315_p2;

assign zext_ln150_63_fu_4343_p1 = trunc_ln150_31_fu_4339_p1;

assign zext_ln150_64_fu_4353_p1 = sub_ln150_57_fu_4347_p2;

assign zext_ln150_65_fu_3410_p1 = trunc_ln150_32_fu_3406_p1;

assign zext_ln150_66_fu_3420_p1 = sub_ln150_59_fu_3414_p2;

assign zext_ln150_67_fu_3455_p1 = trunc_ln150_33_fu_3451_p1;

assign zext_ln150_68_fu_3465_p1 = xor_ln150_5_fu_3459_p2;

assign zext_ln150_69_fu_3514_p1 = trunc_ln150_34_fu_3510_p1;

assign zext_ln150_6_fu_2211_p1 = sub_ln150_3_fu_2206_p2;

assign zext_ln150_70_fu_3524_p1 = sub_ln150_62_fu_3518_p2;

assign zext_ln150_71_fu_3573_p1 = trunc_ln150_35_fu_3569_p1;

assign zext_ln150_72_fu_3583_p1 = sub_ln150_64_fu_3577_p2;

assign zext_ln150_73_fu_3633_p1 = trunc_ln150_36_fu_3629_p1;

assign zext_ln150_74_fu_3643_p1 = sub_ln150_66_fu_3637_p2;

assign zext_ln150_75_fu_3692_p1 = trunc_ln150_37_fu_3688_p1;

assign zext_ln150_76_fu_3702_p1 = sub_ln150_68_fu_3696_p2;

assign zext_ln150_77_fu_3751_p1 = trunc_ln150_38_fu_3747_p1;

assign zext_ln150_78_fu_3761_p1 = sub_ln150_70_fu_3755_p2;

assign zext_ln150_79_fu_3810_p1 = trunc_ln150_39_fu_3806_p1;

assign zext_ln150_7_fu_2246_p1 = trunc_ln150_3_fu_2242_p1;

assign zext_ln150_80_fu_3820_p1 = sub_ln150_72_fu_3814_p2;

assign zext_ln150_81_fu_4716_p1 = trunc_ln150_40_reg_5903;

assign zext_ln150_82_fu_4719_p1 = sub_ln150_74_reg_5908;

assign zext_ln150_8_fu_2255_p1 = sub_ln150_5_fu_2250_p2;

assign zext_ln150_9_fu_2277_p1 = trunc_ln150_4_fu_2273_p1;

assign zext_ln150_fu_1878_p1 = add_ln150_reg_5014;

assign zext_ln188_10_fu_2088_p1 = tmp_19_fu_2081_p3;

assign zext_ln188_11_fu_2143_p1 = tmp_20_fu_2136_p3;

assign zext_ln188_12_fu_2579_p1 = tmp_21_fu_2572_p3;

assign zext_ln188_13_fu_2748_p1 = tmp_22_fu_2741_p3;

assign zext_ln188_14_fu_3186_p1 = tmp_23_fu_3179_p3;

assign zext_ln188_15_fu_3302_p1 = tmp_24_fu_3295_p3;

assign zext_ln188_1_fu_1974_p1 = tmp_10_fu_1967_p3;

assign zext_ln188_2_fu_2025_p1 = tmp_11_fu_2018_p3;

assign zext_ln188_3_fu_2075_p1 = tmp_12_fu_2068_p3;

assign zext_ln188_4_fu_2416_p1 = tmp_13_fu_2409_p3;

assign zext_ln188_5_fu_2501_p1 = tmp_14_fu_2494_p3;

assign zext_ln188_6_fu_2876_p1 = tmp_15_fu_2869_p3;

assign zext_ln188_7_fu_3017_p1 = tmp_16_fu_3010_p3;

assign zext_ln188_8_fu_1987_p1 = tmp_17_fu_1980_p3;

assign zext_ln188_9_fu_2000_p1 = tmp_18_fu_1993_p3;

assign zext_ln188_fu_1953_p1 = tmp_9_fu_1945_p3;

assign zext_ln198_1_fu_2404_p1 = tmp_6_fu_2397_p3;

assign zext_ln198_2_fu_2864_p1 = tmp_7_fu_2857_p3;

assign zext_ln198_3_fu_3364_p1 = tmp_8_fu_3357_p3;

assign zext_ln198_fu_2013_p1 = tmp_5_fu_2006_p3;

assign zext_ln232_1_fu_3906_p1 = tmp_46_fu_3899_p3;

assign zext_ln232_2_fu_3965_p1 = tmp_47_fu_3958_p3;

assign zext_ln232_3_fu_3993_p1 = tmp_48_fu_3986_p3;

assign zext_ln232_4_fu_3926_p1 = tmp_49_fu_3919_p3;

assign zext_ln232_5_fu_3943_p1 = tmp_50_fu_3936_p3;

assign zext_ln232_6_fu_4139_p1 = tmp_51_fu_4132_p3;

assign zext_ln232_7_fu_4186_p1 = tmp_52_fu_4179_p3;

assign zext_ln232_fu_3894_p1 = tmp_45_fu_3886_p3;

assign zext_ln241_1_fu_4209_p1 = tmp_42_fu_4202_p3;

assign zext_ln241_fu_3953_p1 = shl_ln241_fu_3948_p2;

assign zext_ln262_fu_4517_p1 = add_ln1_fu_4509_p3;

assign zext_ln275_fu_4663_p1 = i_fu_382;

assign zext_ln278_fu_4680_p1 = trunc_ln278_fu_4676_p1;

always @ (posedge ap_clk) begin
    ap_return_3_preg[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor
