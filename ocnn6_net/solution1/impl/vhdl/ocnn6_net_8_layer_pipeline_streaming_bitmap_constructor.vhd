-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_voxel_stream_dout : IN STD_LOGIC_VECTOR (1084 downto 0);
    input_voxel_stream_empty_n : IN STD_LOGIC;
    input_voxel_stream_read : OUT STD_LOGIC;
    feature_data_stream_din : OUT STD_LOGIC_VECTOR (1084 downto 0);
    feature_data_stream_full_n : IN STD_LOGIC;
    feature_data_stream_write : OUT STD_LOGIC;
    feature_data_stream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    feature_data_stream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    write_addr_stream_din : OUT STD_LOGIC_VECTOR (59 downto 0);
    write_addr_stream_full_n : IN STD_LOGIC;
    write_addr_stream_write : OUT STD_LOGIC;
    write_addr_stream_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    write_addr_stream_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    p_read : IN STD_LOGIC_VECTOR (511 downto 0);
    L2_bitmap : OUT STD_LOGIC_VECTOR (511 downto 0);
    L2_bitmap_ap_vld : OUT STD_LOGIC;
    L2_bitmap_read : IN STD_LOGIC_VECTOR (511 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (511 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (511 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (511 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (511 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (511 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (159 downto 0) );
end;


architecture behav of ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000001000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000100000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000010000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp4_stage1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp4_stage2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp4_stage3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp4_stage4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp4_stage5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp4_stage6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp4_stage7 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp4_stage8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp4_stage9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp4_stage10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp4_stage11 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp4_stage12 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp4_stage13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp4_stage14 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp4_stage15 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000001000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp5_stage1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp5_stage7 : STD_LOGIC_VECTOR (39 downto 0) := "0000001000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (39 downto 0) := "0000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0000100000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (39 downto 0) := "0001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp7_stage0 : STD_LOGIC_VECTOR (39 downto 0) := "0010000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (39 downto 0) := "0100000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_401 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000001";
    constant ap_const_lv32_43C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000111100";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_406 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000110";
    constant ap_const_lv32_407 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000111";
    constant ap_const_lv32_409 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000001001";
    constant ap_const_lv32_40D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000001101";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";
    constant ap_const_lv9_1FD : STD_LOGIC_VECTOR (8 downto 0) := "111111101";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv9_1FB : STD_LOGIC_VECTOR (8 downto 0) := "111111011";
    constant ap_const_lv9_1FA : STD_LOGIC_VECTOR (8 downto 0) := "111111010";
    constant ap_const_lv9_1F9 : STD_LOGIC_VECTOR (8 downto 0) := "111111001";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv160_lc_1 : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal initialized : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal l2_write_pos : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal voxel_count : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal retained_block_count : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal l0_write_pos : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal l1_write_pos : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_temp_buffer_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal input_voxel_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal retained_blocks_stream_full_n : STD_LOGIC;
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal tmp_2_fu_1792_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_nbreadreq_fu_414_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal feature_data_stream_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_grp1 : BOOLEAN;
    signal voxel_occupancy_reg_4998 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp3_stage0_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp3_stage0_subdone_grp1 : BOOLEAN;
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal write_addr_stream_blk_n : STD_LOGIC;
    signal ap_block_pp3_stage0_grp2 : BOOLEAN;
    signal ap_block_pp3_stage0_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp3_stage0_subdone_grp2 : BOOLEAN;
    signal l3_has_data_1_reg_1010 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp4_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage6 : signal is "none";
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp4_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp4_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage9 : signal is "none";
    signal ap_block_pp4_stage9_11001 : BOOLEAN;
    signal ap_CS_fsm_pp4_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage12 : signal is "none";
    signal ap_block_pp4_stage12_11001 : BOOLEAN;
    signal initialized_load_load_fu_1235_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal initialized_load_reg_4854 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_4899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal cond388_i_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond388_i_reg_4906 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond388_i_reg_4906_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln114_fu_1441_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln114_reg_4910 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_2_mid2_fu_1578_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_2_mid2_reg_4953 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal empty_84_fu_1594_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_84_reg_4958 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond389_i_fu_1598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond389_i_reg_4963 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_4991 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op223_read_state11 : BOOLEAN;
    signal ap_block_state11_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp3_stage0_iter1_grp1 : BOOLEAN;
    signal ap_block_state12_pp3_stage0_iter1_grp2 : BOOLEAN;
    signal ap_block_state12_pp3_stage0_iter1_grp3 : BOOLEAN;
    signal ap_block_pp3_stage0_subdone_grp3_done_reg : BOOLEAN := false;
    signal ap_block_pp3_stage0_subdone_grp3 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal voxel_occupancy_fu_1800_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_morton_addr_reg_5004 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_3_reg_5010 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln150_fu_1862_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln150_reg_5014 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_25_reg_5019 : STD_LOGIC_VECTOR (1083 downto 0);
    signal icmp_ln166_fu_1929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_reg_5038 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal trunc_ln166_fu_1941_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln166_reg_5042 : STD_LOGIC_VECTOR (1 downto 0);
    signal L0_bitmap_0_load_reg_5075 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_CS_fsm_pp4_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage1 : signal is "none";
    signal ap_block_pp4_stage1_11001 : BOOLEAN;
    signal voxel_bit_reg_5092 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_28_reg_5098 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_25_reg_5104 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage2 : signal is "none";
    signal ap_block_pp4_stage2_11001 : BOOLEAN;
    signal voxel_bit_29_reg_5120 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage3 : signal is "none";
    signal ap_block_pp4_stage3_11001 : BOOLEAN;
    signal voxel_bit_26_reg_5136 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_30_reg_5142 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage4 : signal is "none";
    signal ap_block_pp4_stage4_11001 : BOOLEAN;
    signal voxel_bit_27_reg_5158 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_31_reg_5163 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_has_data_1_fu_2062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_has_data_1_reg_5168 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage5 : signal is "none";
    signal ap_block_pp4_stage5_11001 : BOOLEAN;
    signal voxel_bit_32_reg_5182 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_36_reg_5188 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_fu_2094_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_reg_5204 : STD_LOGIC_VECTOR (8 downto 0);
    signal bit_offset_fu_2118_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_reg_5215 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1073_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_5220 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_1_fu_2126_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_1_reg_5225 : STD_LOGIC_VECTOR (8 downto 0);
    signal voxel_bit_33_reg_5230 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_37_reg_5236 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage7 : signal is "none";
    signal ap_block_pp4_stage7_11001 : BOOLEAN;
    signal tmp_31_fu_2233_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_31_reg_5252 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_offset_3_fu_2265_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_3_reg_5257 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_4_fu_2296_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_4_reg_5262 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_5_fu_2327_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_5_reg_5267 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_6_fu_2358_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_6_reg_5272 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_7_fu_2389_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_7_reg_5277 : STD_LOGIC_VECTOR (9 downto 0);
    signal voxel_bit_34_reg_5282 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_38_reg_5288 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage8 : signal is "none";
    signal ap_block_pp4_stage8_11001 : BOOLEAN;
    signal tmp_37_fu_2448_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_37_reg_5304 : STD_LOGIC_VECTOR (511 downto 0);
    signal voxel_bit_35_reg_5309 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_39_reg_5314 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_has_data_2_fu_2488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_has_data_2_reg_5319 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_2521_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln150_8_fu_2530_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_8_reg_5338 : STD_LOGIC_VECTOR (8 downto 0);
    signal bit_offset_8_fu_2554_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_8_reg_5349 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_55_reg_5354 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_9_fu_2562_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_9_reg_5359 : STD_LOGIC_VECTOR (8 downto 0);
    signal voxel_bit_40_reg_5364 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_44_reg_5370 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage10 : signal is "none";
    signal ap_block_pp4_stage10_11001 : BOOLEAN;
    signal tmp_58_fu_2670_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_58_reg_5386 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_offset_11_fu_2702_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_11_reg_5391 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_12_fu_2733_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_12_reg_5396 : STD_LOGIC_VECTOR (9 downto 0);
    signal voxel_bit_41_reg_5401 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_45_reg_5407 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage11 : signal is "none";
    signal ap_block_pp4_stage11_11001 : BOOLEAN;
    signal tmp_64_fu_2812_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_64_reg_5423 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_offset_14_fu_2844_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_14_reg_5428 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_28_fu_2852_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_28_reg_5433 : STD_LOGIC_VECTOR (8 downto 0);
    signal voxel_bit_42_reg_5438 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_46_reg_5444 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_fu_2922_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal voxel_bit_43_reg_5465 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_47_reg_5470 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_has_data_3_fu_2962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_has_data_3_reg_5475 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_20_fu_2968_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_20_reg_5479 : STD_LOGIC_VECTOR (8 downto 0);
    signal bit_offset_20_fu_2992_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_20_reg_5490 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_79_reg_5495 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_21_fu_3000_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_21_reg_5500 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp4_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage13 : signal is "none";
    signal ap_block_pp4_stage13_11001 : BOOLEAN;
    signal tmp_82_fu_3108_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_82_reg_5515 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_offset_23_fu_3140_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_23_reg_5520 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_24_fu_3171_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_24_reg_5525 : STD_LOGIC_VECTOR (9 downto 0);
    signal voxel_bit_48_reg_5530 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_52_reg_5536 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage14 : signal is "none";
    signal ap_block_pp4_stage14_11001 : BOOLEAN;
    signal tmp_88_fu_3250_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_88_reg_5552 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_offset_26_fu_3282_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_26_reg_5557 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_50_fu_3290_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_50_reg_5562 : STD_LOGIC_VECTOR (8 downto 0);
    signal voxel_bit_49_reg_5567 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_53_reg_5573 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage15 : signal is "none";
    signal ap_block_pp4_stage15_11001 : BOOLEAN;
    signal tmp_92_fu_3348_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal voxel_bit_50_reg_5594 : STD_LOGIC_VECTOR (0 downto 0);
    signal voxel_bit_54_reg_5600 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_y_2_reg_5623 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal icmp_ln213_fu_3876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln213_reg_5629 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln213_reg_5629_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln213_fu_3882_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln213_reg_5633 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage1 : signal is "none";
    signal ap_block_pp5_stage1_11001 : BOOLEAN;
    signal l1_bit_reg_5655 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter0_reg : STD_LOGIC := '0';
    signal L1_bitmap_0_load_reg_5661 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_CS_fsm_pp5_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage2 : signal is "none";
    signal ap_block_pp5_stage2_11001 : BOOLEAN;
    signal l1_bit_5_reg_5668 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage3 : signal is "none";
    signal ap_block_pp5_stage3_11001 : BOOLEAN;
    signal l1_bit_6_reg_5684 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage4 : signal is "none";
    signal ap_block_pp5_stage4_11001 : BOOLEAN;
    signal l1_bit_7_reg_5695 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_has_data_1_fu_3980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_has_data_1_reg_5700 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage5 : signal is "none";
    signal ap_block_pp5_stage5_11001 : BOOLEAN;
    signal bit_offset_16_fu_4022_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_16_reg_5709 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_17_fu_4054_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_17_reg_5714 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_18_fu_4086_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_18_reg_5719 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_19_fu_4118_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_19_reg_5724 : STD_LOGIC_VECTOR (9 downto 0);
    signal l1_bit_8_reg_5729 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage6 : signal is "none";
    signal ap_block_pp5_stage6_11001 : BOOLEAN;
    signal tmp_74_fu_4170_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_74_reg_5740 : STD_LOGIC_VECTOR (511 downto 0);
    signal l1_bit_9_reg_5745 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage7 : signal is "none";
    signal ap_block_pp5_stage7_11001 : BOOLEAN;
    signal tmp_76_fu_4194_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal l1_bit_10_reg_5761 : STD_LOGIC_VECTOR (0 downto 0);
    signal l1_bit_11_reg_5767 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal l2_has_data_2_fu_4223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_has_data_2_reg_5772 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_95_fu_4266_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_95_reg_5776 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_offset_29_fu_4299_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_29_reg_5781 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_30_fu_4331_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_30_reg_5786 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_31_fu_4363_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_31_reg_5791 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln258_fu_4451_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln258_reg_5845 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal icmp_ln260_fu_4479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln260_reg_5849 : STD_LOGIC_VECTOR (0 downto 0);
    signal l3_has_data_fu_4585_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal trunc_ln258_fu_4626_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln258_reg_5865 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal tmp_93_fu_4630_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_93_reg_5870 : STD_LOGIC_VECTOR (511 downto 0);
    signal bit_val_fu_4672_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal bit_val_reg_5893 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp7_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp7_stage0 : signal is "none";
    signal ap_block_pp7_stage0_11001 : BOOLEAN;
    signal tmp_118_reg_5898 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_40_fu_4698_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln150_40_reg_5903 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_74_fu_4702_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_74_reg_5908 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln280_fu_4757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln111_fu_1298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal icmp_ln118_fu_1499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_predicate_tran11to13_state11 : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state11 : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp4_stage1_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state15 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage15_subdone : BOOLEAN;
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal ap_block_pp5_stage2_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state34 : STD_LOGIC;
    signal ap_block_pp5_stage7_subdone : BOOLEAN;
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state43 : STD_LOGIC;
    signal ap_enable_reg_pp7_iter0 : STD_LOGIC := '0';
    signal ap_block_pp7_stage0_subdone : BOOLEAN;
    signal icmp_ln275_fu_4651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_pp7_exit_iter0_state46 : STD_LOGIC;
    signal ap_enable_reg_pp7_iter1 : STD_LOGIC := '0';
    signal l2_write_pos_flag_0_reg_925 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_write_pos_loc_0_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp4_iter0_L0_bitmap_3_reg_970 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_117_fu_3842_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980 : STD_LOGIC_VECTOR (511 downto 0);
    signal l1_has_data_4_fu_3400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp5_iter0_L1_bitmap_1_reg_990 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_101_fu_4403_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp5_iter0_L1_bitmap_2_reg_1000 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_mux_l2_write_pos_flag_1_phi_fu_1026_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_write_pos_flag_1_reg_1022 : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_write_pos_new_1_reg_1034 : STD_LOGIC_VECTOR (31 downto 0);
    signal l2_write_pos_loc_1_reg_1045 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln114_1_fu_1463_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln121_1_fu_1665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln127_fu_1754_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal icmp_ln125_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln150_fu_1878_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0_grp0 : BOOLEAN;
    signal zext_ln188_fu_1953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal zext_ln188_1_fu_1974_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage1 : BOOLEAN;
    signal zext_ln188_8_fu_1987_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage2 : BOOLEAN;
    signal zext_ln188_9_fu_2000_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage3 : BOOLEAN;
    signal zext_ln198_fu_2013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage4 : BOOLEAN;
    signal zext_ln188_2_fu_2025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_3_fu_2075_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage5 : BOOLEAN;
    signal zext_ln188_10_fu_2088_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage6 : BOOLEAN;
    signal zext_ln188_11_fu_2143_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage7 : BOOLEAN;
    signal zext_ln198_1_fu_2404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage8 : BOOLEAN;
    signal zext_ln188_4_fu_2416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_5_fu_2501_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage9 : BOOLEAN;
    signal zext_ln188_12_fu_2579_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage10 : BOOLEAN;
    signal zext_ln188_13_fu_2748_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage11 : BOOLEAN;
    signal zext_ln198_2_fu_2864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage12 : BOOLEAN;
    signal zext_ln188_6_fu_2876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln188_7_fu_3017_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage13 : BOOLEAN;
    signal zext_ln188_14_fu_3186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage14 : BOOLEAN;
    signal zext_ln188_15_fu_3302_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage15 : BOOLEAN;
    signal zext_ln198_3_fu_3364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln232_fu_3894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal zext_ln232_1_fu_3906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage1 : BOOLEAN;
    signal zext_ln232_4_fu_3926_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage2 : BOOLEAN;
    signal zext_ln232_5_fu_3943_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage3 : BOOLEAN;
    signal zext_ln241_fu_3953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage4 : BOOLEAN;
    signal zext_ln232_2_fu_3965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln232_3_fu_3993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage5 : BOOLEAN;
    signal zext_ln232_6_fu_4139_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage6 : BOOLEAN;
    signal zext_ln232_7_fu_4186_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage7 : BOOLEAN;
    signal zext_ln241_1_fu_4209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln262_fu_4517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal tmp_43_nbwritereq_fu_455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op1053_write_state49 : BOOLEAN;
    signal early_trigger_stream_full_n : STD_LOGIC;
    signal tmp_44_nbwritereq_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op1057_write_state49 : BOOLEAN;
    signal ap_block_state49 : BOOLEAN;
    signal add_ln141_fu_1814_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln161_fu_1905_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp3_stage0_11001_grp3 : BOOLEAN;
    signal ap_block_pp3_stage0_grp3 : BOOLEAN;
    signal grp_fu_1081_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_fu_286 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln113_fu_1447_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal y_fu_290 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal select_ln112_fu_1417_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten_fu_294 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal select_ln112_1_fu_1345_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal z_fu_298 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln111_1_fu_1325_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten13_fu_302 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal add_ln111_1_fu_1304_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_2_fu_306 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln120_fu_1604_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal y_2_fu_310 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal select_ln119_fu_1586_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten20_fu_314 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal select_ln119_1_fu_1616_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal z_1_fu_318 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln118_1_fu_1558_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten33_fu_322 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln118_1_fu_1505_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_1_fu_326 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln126_fu_1759_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal y_1_fu_330 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln125_fu_1734_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten40_fu_334 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln125_1_fu_1694_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l1_y_fu_338 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln166_fu_1935_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal L0_bitmap_0_fu_342 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal l2_y_fu_346 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal add_ln213_fu_3914_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal L1_bitmap_0_fu_350 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal l2_complete_level_fu_354 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal l2_complete_level_1_fu_4575_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal l2_bit_pos_1_fu_358 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal l2_bit_pos_3_fu_4591_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l2_x_fu_362 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln260_fu_4522_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln2601_fu_366 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln260_fu_4597_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l2_bit_pos_fu_370 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal select_ln258_1_fu_4564_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal l2_y_1_fu_374 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal select_ln258_fu_4497_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvar_flatten47_fu_378 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln258_1_fu_4457_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_fu_382 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln275_fu_4657_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp7_stage0 : BOOLEAN;
    signal empty_86_fu_386 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal tmp_119_fu_4739_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp3_stage0_01001_grp1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001_grp1 : BOOLEAN;
    signal ap_block_pp3_stage0_01001_grp2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001_grp2 : BOOLEAN;
    signal ap_block_pp3_stage0_01001_grp3 : BOOLEAN;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local : STD_LOGIC;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local : STD_LOGIC_VECTOR (0 downto 0);
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local : STD_LOGIC;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp3_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp3_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp3_stage0_subdone_grp0 : BOOLEAN;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local : STD_LOGIC;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local : STD_LOGIC_VECTOR (0 downto 0);
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local : STD_LOGIC;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local : STD_LOGIC_VECTOR (5 downto 0);
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local : STD_LOGIC;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local : STD_LOGIC_VECTOR (0 downto 0);
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local : STD_LOGIC;
    signal streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local : STD_LOGIC_VECTOR (3 downto 0);
    signal l2_temp_buffer_we0_local : STD_LOGIC;
    signal l2_temp_buffer_d0_local : STD_LOGIC_VECTOR (0 downto 0);
    signal l2_temp_buffer_ce0_local : STD_LOGIC;
    signal l2_temp_buffer_address0_local : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1067_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1099_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1113_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1127_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1179_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1193_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1207_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln111_fu_1313_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln112_1_fu_1339_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln113_fu_1386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln111_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln111_fu_1374_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln111_fu_1392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_1404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln112_fu_1398_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_81_fu_1425_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal x_mid2_fu_1409_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_1429_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln114_fu_1437_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln119_fu_1526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln118_fu_1540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_1520_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln118_fu_1532_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln118_fu_1552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_83_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln119_fu_1566_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln119_1_fu_1610_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_1649_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln121_fu_1656_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln121_fu_1659_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln126_fu_1716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln125_fu_1706_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln125_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln125_fu_1710_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln127_fu_1742_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln125_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln_fu_1746_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal y_3_fu_1836_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_1854_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal x_3_fu_1826_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_9_fu_1945_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_10_fu_1967_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_17_fu_1980_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_18_fu_1993_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_5_fu_2006_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_11_fu_2018_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal or_ln192_fu_2031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_3_fu_2036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_1_fu_2042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_2_fu_2047_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_4_fu_2052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_5_fu_2057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_2068_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_fu_2081_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln150_fu_2102_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_2_fu_2108_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_1_fu_2112_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_1_fu_2098_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_fu_2136_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_27_fu_2152_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln150_fu_2163_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_4_fu_2168_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_2_fu_2172_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_3_fu_2160_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_1_fu_2178_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_fu_2152_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_29_fu_2189_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_2_fu_2198_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_3_fu_2206_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_6_fu_2211_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1157_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_4_fu_2215_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_5_fu_2202_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_2_fu_2221_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_29_fu_2189_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_31_fu_2233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_3_fu_2242_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_5_fu_2250_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_8_fu_2255_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1171_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_6_fu_2259_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_7_fu_2246_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_4_fu_2273_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_7_fu_2281_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_10_fu_2286_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1185_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_8_fu_2290_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_9_fu_2277_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_5_fu_2304_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_9_fu_2312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_12_fu_2317_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1199_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_10_fu_2321_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_11_fu_2308_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_6_fu_2335_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_11_fu_2343_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_14_fu_2348_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1213_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_12_fu_2352_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_13_fu_2339_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_7_fu_2366_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_13_fu_2374_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_16_fu_2379_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1227_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_14_fu_2383_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_15_fu_2370_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_6_fu_2397_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_13_fu_2409_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_33_fu_2425_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_2425_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_35_fu_2436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_2436_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_37_fu_2448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln192_7_fu_2462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_8_fu_2466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_9_fu_2471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_10_fu_2457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_11_fu_2477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_12_fu_2483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_2494_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_39_fu_2510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_2510_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_41_fu_2521_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln150_15_fu_2538_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_18_fu_2544_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_16_fu_2548_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_17_fu_2534_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_2572_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_54_fu_2588_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln150_1_fu_2600_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_20_fu_2605_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_17_fu_2609_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_19_fu_2597_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_9_fu_2615_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_2588_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_56_fu_2626_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_10_fu_2635_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_18_fu_2643_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_22_fu_2648_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_19_fu_2652_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_21_fu_2639_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_10_fu_2658_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_56_fu_2626_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_58_fu_2670_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_11_fu_2679_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_20_fu_2687_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_24_fu_2692_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_21_fu_2696_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_23_fu_2683_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_12_fu_2710_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_22_fu_2718_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_26_fu_2723_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_23_fu_2727_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_25_fu_2714_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_fu_2741_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_60_fu_2757_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_2757_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_62_fu_2768_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_13_fu_2777_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_24_fu_2785_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_28_fu_2790_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_25_fu_2794_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_27_fu_2781_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_13_fu_2800_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_62_fu_2768_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_64_fu_2812_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_14_fu_2821_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_26_fu_2829_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_30_fu_2834_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_27_fu_2838_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_29_fu_2825_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_7_fu_2857_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_15_fu_2869_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_66_fu_2885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_15_fu_2893_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_32_fu_2901_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_29_fu_2904_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_31_fu_2897_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_15_fu_2910_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_66_fu_2885_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_68_fu_2922_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln192_14_fu_2936_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_15_fu_2940_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_16_fu_2945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_17_fu_2931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_18_fu_2951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_19_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_37_fu_2976_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_42_fu_2982_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_38_fu_2986_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_41_fu_2972_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_16_fu_3010_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_78_fu_3026_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln150_3_fu_3038_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_44_fu_3043_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_39_fu_3047_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_43_fu_3035_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_21_fu_3053_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_78_fu_3026_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_80_fu_3064_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_22_fu_3073_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_40_fu_3081_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_46_fu_3086_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_41_fu_3090_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_45_fu_3077_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_22_fu_3096_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_80_fu_3064_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_82_fu_3108_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_23_fu_3117_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_42_fu_3125_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_48_fu_3130_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_43_fu_3134_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_47_fu_3121_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_24_fu_3148_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_44_fu_3156_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_50_fu_3161_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_45_fu_3165_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_49_fu_3152_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_fu_3179_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_84_fu_3195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_3195_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_86_fu_3206_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_25_fu_3215_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_46_fu_3223_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_52_fu_3228_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_47_fu_3232_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_51_fu_3219_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_25_fu_3238_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_86_fu_3206_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_88_fu_3250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_26_fu_3259_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_48_fu_3267_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_54_fu_3272_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_49_fu_3276_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_53_fu_3263_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_3295_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_90_fu_3311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_27_fu_3319_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_56_fu_3327_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_51_fu_3330_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_55_fu_3323_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_27_fu_3336_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_90_fu_3311_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_92_fu_3348_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_3357_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln192_21_fu_3374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_22_fu_3378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_23_fu_3383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_24_fu_3369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_25_fu_3389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln192_26_fu_3395_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_32_fu_3406_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_59_fu_3414_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_66_fu_3420_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_60_fu_3424_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_65_fu_3410_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_32_fu_3430_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_103_fu_3442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_33_fu_3451_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln150_5_fu_3459_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_68_fu_3465_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_61_fu_3469_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_67_fu_3455_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_33_fu_3475_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_103_fu_3442_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_105_fu_3487_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln205_22_fu_3496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_34_fu_3510_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_62_fu_3518_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_70_fu_3524_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_106_fu_3502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_63_fu_3528_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_69_fu_3514_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_34_fu_3534_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_105_fu_3487_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_107_fu_3546_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln205_23_fu_3555_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_35_fu_3569_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_64_fu_3577_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_72_fu_3583_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_108_fu_3561_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_65_fu_3587_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_71_fu_3573_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_35_fu_3593_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_107_fu_3546_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_109_fu_3605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln205_24_fu_3615_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_36_fu_3629_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_66_fu_3637_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_74_fu_3643_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_110_fu_3621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_67_fu_3647_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_73_fu_3633_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_36_fu_3653_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_109_fu_3605_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_111_fu_3665_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln205_25_fu_3674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_37_fu_3688_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_68_fu_3696_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_76_fu_3702_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_112_fu_3680_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_69_fu_3706_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_75_fu_3692_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_37_fu_3712_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_111_fu_3665_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_113_fu_3724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln205_26_fu_3733_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_38_fu_3747_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_70_fu_3755_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_78_fu_3761_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_114_fu_3739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_71_fu_3765_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_77_fu_3751_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_38_fu_3771_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_113_fu_3724_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_115_fu_3783_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln205_27_fu_3792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_39_fu_3806_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_72_fu_3814_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_80_fu_3820_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_116_fu_3798_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_73_fu_3824_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_79_fu_3810_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_39_fu_3830_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_115_fu_3783_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_117_fu_3842_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_3886_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_46_fu_3899_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_3919_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_50_fu_3936_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln241_fu_3948_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_47_fu_3958_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln236_1_fu_3970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln236_fu_3975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_3986_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln150_16_fu_3998_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_30_fu_4006_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_34_fu_4012_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1091_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_31_fu_4016_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_33_fu_4002_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_17_fu_4030_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln150_2_fu_4038_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_36_fu_4044_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1105_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_32_fu_4048_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_35_fu_4034_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_18_fu_4062_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_33_fu_4070_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_38_fu_4076_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1119_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_34_fu_4080_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_37_fu_4066_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_19_fu_4094_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_35_fu_4102_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_40_fu_4108_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1133_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln150_36_fu_4112_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_39_fu_4098_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_51_fu_4132_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_70_fu_4147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_4147_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_72_fu_4158_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_4158_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_74_fu_4170_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_4179_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_76_fu_4194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_4202_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln236_4_fu_4218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln236_3_fu_4214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_28_fu_4230_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_52_fu_4238_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_58_fu_4244_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_53_fu_4248_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_57_fu_4234_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_28_fu_4254_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_95_fu_4266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln150_29_fu_4275_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal xor_ln150_4_fu_4283_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_60_fu_4289_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_54_fu_4293_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_59_fu_4279_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_30_fu_4307_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_55_fu_4315_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_62_fu_4321_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_56_fu_4325_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_61_fu_4311_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln150_31_fu_4339_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_57_fu_4347_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln150_64_fu_4353_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_58_fu_4357_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_63_fu_4343_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_97_fu_4380_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_fu_4380_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_99_fu_4391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_99_fu_4391_p4 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_101_fu_4403_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln256_fu_4469_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln255_fu_4485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln258_fu_4473_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln258_1_fu_4505_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln255_fu_4491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1_fu_4509_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln255_fu_4557_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal l2_complete_level_1_fu_4575_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln275_fu_4663_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln277_fu_4667_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln278_fu_4676_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln278_fu_4680_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln278_fu_4684_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln150_82_fu_4719_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln150_75_fu_4722_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln150_81_fu_4716_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal bit_offset_40_fu_4728_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_119_fu_4739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln286_1_fu_4769_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln286_fu_4763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln286_2_fu_4775_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln286_6_fu_4781_p6 : STD_LOGIC_VECTOR (159 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_2_preg : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_3_preg : STD_LOGIC_VECTOR (159 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_block_pp4_stage2_subdone : BOOLEAN;
    signal ap_block_pp4_stage3_subdone : BOOLEAN;
    signal ap_block_pp4_stage4_subdone : BOOLEAN;
    signal ap_block_pp4_stage5_subdone : BOOLEAN;
    signal ap_block_pp4_stage6_subdone : BOOLEAN;
    signal ap_block_pp4_stage7_subdone : BOOLEAN;
    signal ap_block_pp4_stage8_subdone : BOOLEAN;
    signal ap_block_pp4_stage9_subdone : BOOLEAN;
    signal ap_block_pp4_stage10_subdone : BOOLEAN;
    signal ap_block_pp4_stage11_subdone : BOOLEAN;
    signal ap_block_pp4_stage12_subdone : BOOLEAN;
    signal ap_block_pp4_stage13_subdone : BOOLEAN;
    signal ap_block_pp4_stage14_subdone : BOOLEAN;
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_block_pp5_stage1_subdone : BOOLEAN;
    signal ap_block_pp5_stage3_subdone : BOOLEAN;
    signal ap_block_pp5_stage4_subdone : BOOLEAN;
    signal ap_block_pp5_stage5_subdone : BOOLEAN;
    signal ap_block_pp5_stage6_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;
    signal ap_idle_pp7 : STD_LOGIC;
    signal ap_enable_pp7 : STD_LOGIC;
    signal ap_condition_4137 : BOOLEAN;
    signal ap_condition_4141 : BOOLEAN;
    signal ap_condition_4145 : BOOLEAN;
    signal ap_condition_4149 : BOOLEAN;
    signal ap_condition_645 : BOOLEAN;
    signal ap_condition_783 : BOOLEAN;
    signal tmp_27_fu_2152_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_29_fu_2189_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_31_fu_2233_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_33_fu_2425_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_35_fu_2436_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_37_fu_2448_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_39_fu_2510_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_41_fu_2521_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_54_fu_2588_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_56_fu_2626_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_58_fu_2670_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_60_fu_2757_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_62_fu_2768_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_64_fu_2812_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_66_fu_2885_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_68_fu_2922_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_78_fu_3026_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_80_fu_3064_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_82_fu_3108_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_84_fu_3195_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_86_fu_3206_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_88_fu_3250_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_90_fu_3311_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_92_fu_3348_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_103_fu_3442_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_105_fu_3487_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_107_fu_3546_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_109_fu_3605_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_111_fu_3665_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_113_fu_3724_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_115_fu_3783_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_117_fu_3842_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_70_fu_4147_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_72_fu_4158_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_74_fu_4170_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_76_fu_4194_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_95_fu_4266_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_97_fu_4380_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_99_fu_4391_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_101_fu_4403_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal l2_complete_level_1_fu_4575_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_119_fu_4739_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1 IS
    generic (
        DATAWIDTH : INTEGER;
        ADDRWIDTH : INTEGER );
    port (
        din : IN STD_LOGIC_VECTOR (511 downto 0);
        sel : IN STD_LOGIC_VECTOR (31 downto 0);
        value : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_bitset_64ns_64ns_32ns_1ns_64_1_1 IS
    generic (
        DATAWIDTH : INTEGER;
        ADDRWIDTH : INTEGER );
    port (
        din : IN STD_LOGIC_VECTOR (63 downto 0);
        sel : IN STD_LOGIC_VECTOR (31 downto 0);
        value : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streabkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streadEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_l2_temp_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_U : component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streabkb
    generic map (
        DataWidth => 1,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local,
        ce0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local,
        we0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local,
        d0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local,
        q0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);

    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_U : component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streabkb
    generic map (
        DataWidth => 1,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local,
        ce0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local,
        we0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local,
        d0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local,
        q0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);

    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_U : component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_streaming_bitmap_constructor_stream_stream_streadEe
    generic map (
        DataWidth => 1,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local,
        ce0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local,
        we0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local,
        d0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local,
        q0 => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0);

    l2_temp_buffer_U : component ocnn6_net_8_layer_pipeline_streaming_bitmap_constructor_l2_temp_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 1,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l2_temp_buffer_address0_local,
        ce0 => l2_temp_buffer_ce0_local,
        we0 => l2_temp_buffer_we0_local,
        d0 => l2_temp_buffer_d0_local,
        q0 => l2_temp_buffer_q0);

    bitset_512ns_512ns_32s_1ns_512_1_1_U7 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => L0_bitmap_0_load_reg_5075,
        sel => tmp_27_fu_2152_p2,
        value => voxel_bit_reg_5092,
        dout => tmp_27_fu_2152_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U8 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_27_fu_2152_p4,
        sel => tmp_29_fu_2189_p2,
        value => voxel_bit_25_reg_5104,
        dout => tmp_29_fu_2189_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U9 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_29_fu_2189_p4,
        sel => tmp_31_fu_2233_p2,
        value => voxel_bit_26_reg_5136,
        dout => tmp_31_fu_2233_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U10 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_31_reg_5252,
        sel => tmp_33_fu_2425_p2,
        value => voxel_bit_27_reg_5158,
        dout => tmp_33_fu_2425_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U11 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_33_fu_2425_p4,
        sel => tmp_35_fu_2436_p2,
        value => voxel_bit_28_reg_5098,
        dout => tmp_35_fu_2436_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U12 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_35_fu_2436_p4,
        sel => tmp_37_fu_2448_p2,
        value => voxel_bit_29_reg_5120,
        dout => tmp_37_fu_2448_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U13 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_37_reg_5304,
        sel => tmp_39_fu_2510_p2,
        value => voxel_bit_30_reg_5142,
        dout => tmp_39_fu_2510_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U14 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_39_fu_2510_p4,
        sel => tmp_41_fu_2521_p2,
        value => voxel_bit_31_reg_5163,
        dout => tmp_41_fu_2521_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U15 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949,
        sel => tmp_54_fu_2588_p2,
        value => voxel_bit_32_reg_5182,
        dout => tmp_54_fu_2588_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U16 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_54_fu_2588_p4,
        sel => tmp_56_fu_2626_p2,
        value => voxel_bit_33_reg_5230,
        dout => tmp_56_fu_2626_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U17 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_56_fu_2626_p4,
        sel => tmp_58_fu_2670_p2,
        value => voxel_bit_34_reg_5282,
        dout => tmp_58_fu_2670_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U18 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_58_reg_5386,
        sel => tmp_60_fu_2757_p2,
        value => voxel_bit_35_reg_5309,
        dout => tmp_60_fu_2757_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U19 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_60_fu_2757_p4,
        sel => tmp_62_fu_2768_p2,
        value => voxel_bit_36_reg_5188,
        dout => tmp_62_fu_2768_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U20 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_62_fu_2768_p4,
        sel => tmp_64_fu_2812_p2,
        value => voxel_bit_37_reg_5236,
        dout => tmp_64_fu_2812_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U21 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_64_reg_5423,
        sel => tmp_66_fu_2885_p2,
        value => voxel_bit_38_reg_5288,
        dout => tmp_66_fu_2885_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U22 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_66_fu_2885_p4,
        sel => tmp_68_fu_2922_p2,
        value => voxel_bit_39_reg_5314,
        dout => tmp_68_fu_2922_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U23 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959,
        sel => tmp_78_fu_3026_p2,
        value => voxel_bit_40_reg_5364,
        dout => tmp_78_fu_3026_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U24 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_78_fu_3026_p4,
        sel => tmp_80_fu_3064_p2,
        value => voxel_bit_41_reg_5401,
        dout => tmp_80_fu_3064_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U25 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_80_fu_3064_p4,
        sel => tmp_82_fu_3108_p2,
        value => voxel_bit_42_reg_5438,
        dout => tmp_82_fu_3108_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U26 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_82_reg_5515,
        sel => tmp_84_fu_3195_p2,
        value => voxel_bit_43_reg_5465,
        dout => tmp_84_fu_3195_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U27 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_84_fu_3195_p4,
        sel => tmp_86_fu_3206_p2,
        value => voxel_bit_44_reg_5370,
        dout => tmp_86_fu_3206_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U28 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_86_fu_3206_p4,
        sel => tmp_88_fu_3250_p2,
        value => voxel_bit_45_reg_5407,
        dout => tmp_88_fu_3250_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U29 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_88_reg_5552,
        sel => tmp_90_fu_3311_p2,
        value => voxel_bit_46_reg_5444,
        dout => tmp_90_fu_3311_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U30 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_90_fu_3311_p4,
        sel => tmp_92_fu_3348_p2,
        value => voxel_bit_47_reg_5470,
        dout => tmp_92_fu_3348_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U31 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970,
        sel => tmp_103_fu_3442_p2,
        value => voxel_bit_48_reg_5530,
        dout => tmp_103_fu_3442_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U32 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_103_fu_3442_p4,
        sel => tmp_105_fu_3487_p2,
        value => voxel_bit_49_reg_5567,
        dout => tmp_105_fu_3487_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U33 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_105_fu_3487_p4,
        sel => tmp_107_fu_3546_p2,
        value => voxel_bit_50_reg_5594,
        dout => tmp_107_fu_3546_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U34 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_107_fu_3546_p4,
        sel => tmp_109_fu_3605_p2,
        value => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0,
        dout => tmp_109_fu_3605_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U35 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_109_fu_3605_p4,
        sel => tmp_111_fu_3665_p2,
        value => voxel_bit_52_reg_5536,
        dout => tmp_111_fu_3665_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U36 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_111_fu_3665_p4,
        sel => tmp_113_fu_3724_p2,
        value => voxel_bit_53_reg_5573,
        dout => tmp_113_fu_3724_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U37 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_113_fu_3724_p4,
        sel => tmp_115_fu_3783_p2,
        value => voxel_bit_54_reg_5600,
        dout => tmp_115_fu_3783_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U38 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_115_fu_3783_p4,
        sel => tmp_117_fu_3842_p2,
        value => streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0,
        dout => tmp_117_fu_3842_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U39 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => L1_bitmap_0_load_reg_5661,
        sel => tmp_70_fu_4147_p2,
        value => l1_bit_reg_5655,
        dout => tmp_70_fu_4147_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U40 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_70_fu_4147_p4,
        sel => tmp_72_fu_4158_p2,
        value => l1_bit_5_reg_5668,
        dout => tmp_72_fu_4158_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U41 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_72_fu_4158_p4,
        sel => tmp_74_fu_4170_p2,
        value => l1_bit_6_reg_5684,
        dout => tmp_74_fu_4170_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U42 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_74_reg_5740,
        sel => tmp_76_fu_4194_p2,
        value => l1_bit_7_reg_5695,
        dout => tmp_76_fu_4194_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U43 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990,
        sel => tmp_95_fu_4266_p2,
        value => l1_bit_8_reg_5729,
        dout => tmp_95_fu_4266_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U44 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_95_reg_5776,
        sel => tmp_97_fu_4380_p2,
        value => l1_bit_9_reg_5745,
        dout => tmp_97_fu_4380_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U45 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_97_fu_4380_p4,
        sel => tmp_99_fu_4391_p2,
        value => l1_bit_10_reg_5761,
        dout => tmp_99_fu_4391_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U46 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => tmp_99_fu_4391_p4,
        sel => tmp_101_fu_4403_p2,
        value => l1_bit_11_reg_5767,
        dout => tmp_101_fu_4403_p4);

    bitset_64ns_64ns_32ns_1ns_64_1_1_U47 : component ocnn6_net_8_layer_pipeline_bitset_64ns_64ns_32ns_1ns_64_1_1
    generic map (
        DATAWIDTH => 64,
        ADDRWIDTH => 32)
    port map (
        din => l2_complete_level_fu_354,
        sel => l2_complete_level_1_fu_4575_p2,
        value => l2_temp_buffer_q0,
        dout => l2_complete_level_1_fu_4575_p4);

    bitset_512ns_512ns_32s_1ns_512_1_1_U48 : component ocnn6_net_8_layer_pipeline_bitset_512ns_512ns_32s_1ns_512_1_1
    generic map (
        DATAWIDTH => 512,
        ADDRWIDTH => 32)
    port map (
        din => empty_86_fu_386,
        sel => tmp_119_fu_4739_p2,
        value => bit_val_reg_5893,
        dout => tmp_119_fu_4739_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp3_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp3_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_block_pp3_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp0)) then 
                    ap_block_pp3_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp3_stage0_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp3_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_block_pp3_stage0_subdone_grp1_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1)) then 
                    ap_block_pp3_stage0_subdone_grp1_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp3_stage0_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp3_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_block_pp3_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2)) then 
                    ap_block_pp3_stage0_subdone_grp2_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp3_stage0_subdone_grp3_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp3_stage0_subdone_grp3_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_block_pp3_stage0_subdone_grp3_done_reg <= ap_const_boolean_0;
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3)) then 
                    ap_block_pp3_stage0_subdone_grp3_done_reg <= ap_const_boolean_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state11) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state11);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state15) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state15) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_subdone))) then 
                    ap_enable_reg_pp4_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp4_iter0_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15_subdone)))) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state34) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_subdone))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state34) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_subdone))) then 
                    ap_enable_reg_pp5_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    ap_enable_reg_pp5_iter0_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((((ap_enable_reg_pp5_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage7) and (ap_const_boolean_0 = ap_block_pp5_stage7_subdone)))) then 
                    ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state43) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state43) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then 
                    ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state43);
                elsif ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp7_exit_iter0_state46) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp7_exit_iter0_state46) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) then 
                    ap_enable_reg_pp7_iter1 <= (ap_const_logic_1 xor ap_condition_pp7_exit_iter0_state46);
                elsif ((ap_const_boolean_0 = ap_block_pp7_stage0_subdone)) then 
                    ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv512_lc_1;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
                    ap_return_0_preg <= tmp_93_reg_5870;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv512_lc_1;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
                    ap_return_1_preg <= L1_bitmap_0_load_reg_5661;
                end if; 
            end if;
        end if;
    end process;


    ap_return_2_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_2_preg <= ap_const_lv512_lc_1;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
                    ap_return_2_preg <= L0_bitmap_0_load_reg_5075;
                end if; 
            end if;
        end if;
    end process;


    ap_return_3_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_3_preg(0) <= '0';
                ap_return_3_preg(32) <= '0';
                ap_return_3_preg(33) <= '0';
                ap_return_3_preg(34) <= '0';
                ap_return_3_preg(35) <= '0';
                ap_return_3_preg(36) <= '0';
                ap_return_3_preg(37) <= '0';
                ap_return_3_preg(38) <= '0';
                ap_return_3_preg(39) <= '0';
                ap_return_3_preg(40) <= '0';
                ap_return_3_preg(41) <= '0';
                ap_return_3_preg(42) <= '0';
                ap_return_3_preg(43) <= '0';
                ap_return_3_preg(44) <= '0';
                ap_return_3_preg(45) <= '0';
                ap_return_3_preg(46) <= '0';
                ap_return_3_preg(47) <= '0';
                ap_return_3_preg(48) <= '0';
                ap_return_3_preg(49) <= '0';
                ap_return_3_preg(50) <= '0';
                ap_return_3_preg(51) <= '0';
                ap_return_3_preg(52) <= '0';
                ap_return_3_preg(53) <= '0';
                ap_return_3_preg(54) <= '0';
                ap_return_3_preg(55) <= '0';
                ap_return_3_preg(56) <= '0';
                ap_return_3_preg(57) <= '0';
                ap_return_3_preg(58) <= '0';
                ap_return_3_preg(59) <= '0';
                ap_return_3_preg(60) <= '0';
                ap_return_3_preg(61) <= '0';
                ap_return_3_preg(62) <= '0';
                ap_return_3_preg(63) <= '0';
                ap_return_3_preg(64) <= '0';
                ap_return_3_preg(65) <= '0';
                ap_return_3_preg(66) <= '0';
                ap_return_3_preg(67) <= '0';
                ap_return_3_preg(68) <= '0';
                ap_return_3_preg(69) <= '0';
                ap_return_3_preg(70) <= '0';
                ap_return_3_preg(71) <= '0';
                ap_return_3_preg(72) <= '0';
                ap_return_3_preg(73) <= '0';
                ap_return_3_preg(74) <= '0';
                ap_return_3_preg(75) <= '0';
                ap_return_3_preg(76) <= '0';
                ap_return_3_preg(77) <= '0';
                ap_return_3_preg(78) <= '0';
                ap_return_3_preg(79) <= '0';
                ap_return_3_preg(80) <= '0';
                ap_return_3_preg(81) <= '0';
                ap_return_3_preg(82) <= '0';
                ap_return_3_preg(83) <= '0';
                ap_return_3_preg(84) <= '0';
                ap_return_3_preg(85) <= '0';
                ap_return_3_preg(86) <= '0';
                ap_return_3_preg(87) <= '0';
                ap_return_3_preg(88) <= '0';
                ap_return_3_preg(89) <= '0';
                ap_return_3_preg(90) <= '0';
                ap_return_3_preg(91) <= '0';
                ap_return_3_preg(92) <= '0';
                ap_return_3_preg(93) <= '0';
                ap_return_3_preg(94) <= '0';
                ap_return_3_preg(95) <= '0';
                ap_return_3_preg(96) <= '0';
                ap_return_3_preg(97) <= '0';
                ap_return_3_preg(98) <= '0';
                ap_return_3_preg(99) <= '0';
                ap_return_3_preg(100) <= '0';
                ap_return_3_preg(101) <= '0';
                ap_return_3_preg(102) <= '0';
                ap_return_3_preg(103) <= '0';
                ap_return_3_preg(104) <= '0';
                ap_return_3_preg(105) <= '0';
                ap_return_3_preg(106) <= '0';
                ap_return_3_preg(107) <= '0';
                ap_return_3_preg(108) <= '0';
                ap_return_3_preg(109) <= '0';
                ap_return_3_preg(110) <= '0';
                ap_return_3_preg(111) <= '0';
                ap_return_3_preg(112) <= '0';
                ap_return_3_preg(113) <= '0';
                ap_return_3_preg(114) <= '0';
                ap_return_3_preg(115) <= '0';
                ap_return_3_preg(116) <= '0';
                ap_return_3_preg(117) <= '0';
                ap_return_3_preg(118) <= '0';
                ap_return_3_preg(119) <= '0';
                ap_return_3_preg(120) <= '0';
                ap_return_3_preg(121) <= '0';
                ap_return_3_preg(122) <= '0';
                ap_return_3_preg(123) <= '0';
                ap_return_3_preg(124) <= '0';
                ap_return_3_preg(125) <= '0';
                ap_return_3_preg(126) <= '0';
                ap_return_3_preg(127) <= '0';
                ap_return_3_preg(128) <= '0';
                ap_return_3_preg(129) <= '0';
                ap_return_3_preg(130) <= '0';
                ap_return_3_preg(131) <= '0';
                ap_return_3_preg(132) <= '0';
                ap_return_3_preg(133) <= '0';
                ap_return_3_preg(134) <= '0';
                ap_return_3_preg(135) <= '0';
                ap_return_3_preg(136) <= '0';
                ap_return_3_preg(137) <= '0';
                ap_return_3_preg(138) <= '0';
                ap_return_3_preg(139) <= '0';
                ap_return_3_preg(140) <= '0';
                ap_return_3_preg(141) <= '0';
                ap_return_3_preg(142) <= '0';
                ap_return_3_preg(143) <= '0';
                ap_return_3_preg(144) <= '0';
                ap_return_3_preg(145) <= '0';
                ap_return_3_preg(146) <= '0';
                ap_return_3_preg(147) <= '0';
                ap_return_3_preg(148) <= '0';
                ap_return_3_preg(149) <= '0';
                ap_return_3_preg(150) <= '0';
                ap_return_3_preg(151) <= '0';
                ap_return_3_preg(152) <= '0';
                ap_return_3_preg(153) <= '0';
                ap_return_3_preg(154) <= '0';
                ap_return_3_preg(155) <= '0';
                ap_return_3_preg(156) <= '0';
                ap_return_3_preg(157) <= '0';
                ap_return_3_preg(158) <= '0';
                ap_return_3_preg(159) <= '0';
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
                                        ap_return_3_preg(0) <= or_ln286_6_fu_4781_p6(0);                    ap_return_3_preg(159 downto 32) <= or_ln286_6_fu_4781_p6(159 downto 32);
                end if; 
            end if;
        end if;
    end process;


    L0_bitmap_0_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                L0_bitmap_0_fu_342 <= p_read2;
            elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                L0_bitmap_0_fu_342 <= ap_phi_mux_L0_bitmap_4_phi_fu_983_p4;
            end if; 
        end if;
    end process;

    L1_bitmap_0_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                L1_bitmap_0_fu_350 <= p_read1;
            elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001))) then 
                L1_bitmap_0_fu_350 <= ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_4141)) then 
                    ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949 <= L0_bitmap_0_load_reg_5075;
                elsif ((ap_const_boolean_1 = ap_condition_4137)) then 
                    ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949 <= tmp_41_fu_2521_p4;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_4149)) then 
                    ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959 <= ap_phi_reg_pp4_iter0_L0_bitmap_1_reg_949;
                elsif ((ap_const_boolean_1 = ap_condition_4145)) then 
                    ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959 <= tmp_68_fu_2922_p4;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_645)) then
                if (((l1_has_data_3_reg_5475 = ap_const_lv1_1) and (icmp_ln166_reg_5038 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970 <= tmp_92_fu_3348_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970 <= ap_phi_reg_pp4_iter0_L0_bitmap_3_reg_970;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_783)) then
                if (((l2_has_data_1_reg_5700 = ap_const_lv1_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990 <= tmp_76_fu_4194_p4;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990 <= ap_phi_reg_pp5_iter0_L1_bitmap_1_reg_990;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((l2_has_data_2_fu_4223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then 
                ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000 <= ap_phi_reg_pp5_iter1_L1_bitmap_1_reg_990;
            elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage7) and (ap_const_boolean_0 = ap_block_pp5_stage7_11001))) then 
                ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000 <= ap_phi_reg_pp5_iter0_L1_bitmap_2_reg_1000;
            end if; 
        end if;
    end process;

    empty_86_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_1))) then 
                empty_86_fu_386 <= L2_bitmap_read;
            elsif (((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001))) then 
                empty_86_fu_386 <= tmp_119_fu_4739_p4;
            end if; 
        end if;
    end process;

    i_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_1))) then 
                i_fu_382 <= ap_const_lv3_0;
            elsif (((icmp_ln275_fu_4651_p2 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001))) then 
                i_fu_382 <= add_ln275_fu_4657_p2;
            end if; 
        end if;
    end process;

    indvar_flatten13_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten13_fu_302 <= ap_const_lv8_0;
            elsif (((icmp_ln111_fu_1298_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten13_fu_302 <= add_ln111_1_fu_1304_p2;
            end if; 
        end if;
    end process;

    indvar_flatten20_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten20_fu_314 <= ap_const_lv6_0;
            elsif (((icmp_ln118_fu_1499_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten20_fu_314 <= select_ln119_1_fu_1616_p3;
            end if; 
        end if;
    end process;

    indvar_flatten33_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten33_fu_322 <= ap_const_lv6_0;
            elsif (((icmp_ln118_fu_1499_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten33_fu_322 <= add_ln118_1_fu_1505_p2;
            end if; 
        end if;
    end process;

    indvar_flatten40_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_flatten40_fu_334 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_1688_p2 = ap_const_lv1_0))) then 
                indvar_flatten40_fu_334 <= add_ln125_1_fu_1694_p2;
            end if; 
        end if;
    end process;

    indvar_flatten47_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                indvar_flatten47_fu_378 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (icmp_ln258_fu_4451_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                indvar_flatten47_fu_378 <= add_ln258_1_fu_4457_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_294 <= ap_const_lv8_0;
            elsif (((icmp_ln111_fu_1298_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_fu_294 <= select_ln112_1_fu_1345_p3;
            end if; 
        end if;
    end process;

    l0_write_pos_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                l0_write_pos <= ap_const_lv32_0;
            elsif ((((l1_has_data_3_fu_2962_p2 = ap_const_lv1_1) and (icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (l1_has_data_4_fu_3400_p2 = ap_const_lv1_1)) or ((l1_has_data_2_reg_5319 = ap_const_lv1_1) and (icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001)) or ((l1_has_data_1_reg_5168 = ap_const_lv1_1) and (icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6_11001)))) then 
                l0_write_pos <= grp_fu_1081_p2;
            end if; 
        end if;
    end process;

    l1_write_pos_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                l1_write_pos <= ap_const_lv32_0;
            elsif ((((l2_has_data_2_fu_4223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((l2_has_data_1_reg_5700 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage5) and (ap_const_boolean_0 = ap_block_pp5_stage5_11001)))) then 
                l1_write_pos <= grp_fu_1141_p2;
            end if; 
        end if;
    end process;

    l1_y_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                l1_y_fu_338 <= ap_const_lv3_0;
            elsif (((icmp_ln166_fu_1929_p2 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then 
                l1_y_fu_338 <= add_ln166_fu_1935_p2;
            end if; 
        end if;
    end process;

    l2_bit_pos_1_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                l2_bit_pos_1_fu_358 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln258_reg_5845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                l2_bit_pos_1_fu_358 <= l2_bit_pos_3_fu_4591_p2;
            end if; 
        end if;
    end process;

    l2_bit_pos_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                l2_bit_pos_fu_370 <= ap_const_lv3_0;
            elsif (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln258_reg_5845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                l2_bit_pos_fu_370 <= select_ln258_1_fu_4564_p3;
            end if; 
        end if;
    end process;

    l2_complete_level_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                l2_complete_level_fu_354 <= ap_const_lv64_0;
            elsif (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln258_reg_5845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                l2_complete_level_fu_354 <= l2_complete_level_1_fu_4575_p4;
            end if; 
        end if;
    end process;

    l2_write_pos_flag_0_reg_925_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((initialized_load_reg_4854 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                l2_write_pos_flag_0_reg_925 <= ap_const_lv1_1;
            elsif (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                l2_write_pos_flag_0_reg_925 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    l2_write_pos_flag_1_reg_1022_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_0))) then 
                l2_write_pos_flag_1_reg_1022 <= l2_write_pos_flag_0_reg_925;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                l2_write_pos_flag_1_reg_1022 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    l2_write_pos_loc_0_reg_938_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((initialized_load_reg_4854 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                l2_write_pos_loc_0_reg_938 <= ap_const_lv32_0;
            elsif (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                l2_write_pos_loc_0_reg_938 <= l2_write_pos;
            end if; 
        end if;
    end process;

    l2_write_pos_loc_1_reg_1045_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_0))) then 
                l2_write_pos_loc_1_reg_1045 <= l2_write_pos_loc_0_reg_938;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                l2_write_pos_loc_1_reg_1045 <= add_ln280_fu_4757_p2;
            end if; 
        end if;
    end process;

    l2_write_pos_new_1_reg_1034_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_0))) then 
                l2_write_pos_new_1_reg_1034 <= ap_const_lv32_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                l2_write_pos_new_1_reg_1034 <= add_ln280_fu_4757_p2;
            end if; 
        end if;
    end process;

    l2_x_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                l2_x_fu_362 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (icmp_ln258_fu_4451_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                l2_x_fu_362 <= select_ln260_fu_4522_p3;
            end if; 
        end if;
    end process;

    l2_y_1_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                l2_y_1_fu_374 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (icmp_ln258_fu_4451_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                l2_y_1_fu_374 <= select_ln258_fu_4497_p3;
            end if; 
        end if;
    end process;

    l2_y_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                l2_y_fu_346 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001))) then 
                l2_y_fu_346 <= add_ln213_fu_3914_p2;
            end if; 
        end if;
    end process;

    l3_has_data_1_reg_1010_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                l3_has_data_1_reg_1010 <= ap_const_lv1_0;
            elsif (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln258_reg_5845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then 
                l3_has_data_1_reg_1010 <= l3_has_data_fu_4585_p2;
            end if; 
        end if;
    end process;

    retained_block_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                retained_block_count <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp3))) then 
                retained_block_count <= add_ln161_fu_1905_p2;
            end if; 
        end if;
    end process;

    voxel_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                voxel_count <= ap_const_lv10_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_nbreadreq_fu_414_p3 = ap_const_lv1_1) and (tmp_2_fu_1792_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
                voxel_count <= add_ln141_fu_1814_p2;
            end if; 
        end if;
    end process;

    x_1_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                x_1_fu_326 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_1688_p2 = ap_const_lv1_0))) then 
                x_1_fu_326 <= select_ln126_fu_1759_p3;
            end if; 
        end if;
    end process;

    x_2_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                x_2_fu_306 <= ap_const_lv3_0;
            elsif (((icmp_ln118_fu_1499_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                x_2_fu_306 <= add_ln120_fu_1604_p2;
            end if; 
        end if;
    end process;

    x_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                x_fu_286 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                x_fu_286 <= add_ln113_fu_1447_p2;
            end if; 
        end if;
    end process;

    y_1_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                y_1_fu_330 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_1688_p2 = ap_const_lv1_0))) then 
                y_1_fu_330 <= select_ln125_fu_1734_p3;
            end if; 
        end if;
    end process;

    y_2_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                y_2_fu_310 <= ap_const_lv3_0;
            elsif (((icmp_ln118_fu_1499_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                y_2_fu_310 <= select_ln119_fu_1586_p3;
            end if; 
        end if;
    end process;

    y_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_fu_290 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                y_fu_290 <= select_ln112_fu_1417_p3;
            end if; 
        end if;
    end process;

    z_1_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                z_1_fu_318 <= ap_const_lv2_0;
            elsif (((icmp_ln118_fu_1499_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                z_1_fu_318 <= select_ln118_1_fu_1558_p3;
            end if; 
        end if;
    end process;

    z_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                z_fu_298 <= ap_const_lv2_0;
            elsif (((icmp_ln111_fu_1298_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                z_fu_298 <= select_ln111_1_fu_1325_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001))) then
                L0_bitmap_0_load_reg_5075 <= L0_bitmap_0_fu_342;
                voxel_bit_28_reg_5098 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
                voxel_bit_reg_5092 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001))) then
                L1_bitmap_0_load_reg_5661 <= L1_bitmap_0_fu_350;
                l1_bit_5_reg_5668 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln114_reg_4910 <= add_ln114_fu_1441_p2;
                cond388_i_reg_4906 <= cond388_i_fu_1333_p2;
                cond388_i_reg_4906_pp0_iter1_reg <= cond388_i_reg_4906;
                icmp_ln112_reg_4899 <= icmp_ln112_fu_1319_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                add_ln150_reg_5014 <= add_ln150_fu_1862_p2;
                tmp_25_reg_5019 <= input_voxel_stream_dout(1084 downto 1);
                tmp_3_reg_5010 <= input_voxel_stream_dout(1037 downto 1037);
                voxel_morton_addr_reg_5004 <= input_voxel_stream_dout(1084 downto 1025);
                voxel_occupancy_reg_4998 <= voxel_occupancy_fu_1800_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (icmp_ln258_reg_5845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                add_ln2601_fu_366 <= add_ln260_fu_4597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((l1_has_data_3_reg_5475 = ap_const_lv1_0) and (icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13_11001))) then
                ap_phi_reg_pp4_iter0_L0_bitmap_3_reg_970 <= ap_phi_reg_pp4_iter0_L0_bitmap_2_reg_959;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((l2_has_data_1_fu_3980_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4_11001))) then
                ap_phi_reg_pp5_iter0_L1_bitmap_1_reg_990 <= L1_bitmap_0_load_reg_5661;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10_11001))) then
                bit_offset_11_reg_5391 <= bit_offset_11_fu_2702_p3;
                bit_offset_12_reg_5396 <= bit_offset_12_fu_2733_p3;
                tmp_58_reg_5386 <= tmp_58_fu_2670_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage11) and (ap_const_boolean_0 = ap_block_pp4_stage11_11001))) then
                bit_offset_14_reg_5428 <= bit_offset_14_fu_2844_p3;
                sub_ln150_28_reg_5433 <= sub_ln150_28_fu_2852_p2;
                tmp_64_reg_5423 <= tmp_64_fu_2812_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage5) and (ap_const_boolean_0 = ap_block_pp5_stage5_11001))) then
                bit_offset_16_reg_5709 <= bit_offset_16_fu_4022_p3;
                bit_offset_17_reg_5714 <= bit_offset_17_fu_4054_p3;
                bit_offset_18_reg_5719 <= bit_offset_18_fu_4086_p3;
                bit_offset_19_reg_5724 <= bit_offset_19_fu_4118_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001))) then
                bit_offset_20_reg_5490 <= bit_offset_20_fu_2992_p3;
                l1_has_data_3_reg_5475 <= l1_has_data_3_fu_2962_p2;
                trunc_ln150_20_reg_5479 <= trunc_ln150_20_fu_2968_p1;
                trunc_ln150_21_reg_5500 <= trunc_ln150_21_fu_3000_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13_11001))) then
                bit_offset_23_reg_5520 <= bit_offset_23_fu_3140_p3;
                bit_offset_24_reg_5525 <= bit_offset_24_fu_3171_p3;
                tmp_82_reg_5515 <= tmp_82_fu_3108_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage14) and (ap_const_boolean_0 = ap_block_pp4_stage14_11001))) then
                bit_offset_26_reg_5557 <= bit_offset_26_fu_3282_p3;
                sub_ln150_50_reg_5562 <= sub_ln150_50_fu_3290_p2;
                tmp_88_reg_5552 <= tmp_88_fu_3250_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                bit_offset_29_reg_5781 <= bit_offset_29_fu_4299_p3;
                bit_offset_30_reg_5786 <= bit_offset_30_fu_4331_p3;
                bit_offset_31_reg_5791 <= bit_offset_31_fu_4363_p3;
                icmp_ln213_reg_5629 <= icmp_ln213_fu_3876_p2;
                icmp_ln213_reg_5629_pp5_iter1_reg <= icmp_ln213_reg_5629;
                l2_has_data_2_reg_5772 <= l2_has_data_2_fu_4223_p2;
                l2_y_2_reg_5623 <= l2_y_fu_346;
                tmp_95_reg_5776 <= tmp_95_fu_4266_p4;
                trunc_ln213_reg_5633 <= trunc_ln213_fu_3882_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage7) and (ap_const_boolean_0 = ap_block_pp4_stage7_11001))) then
                bit_offset_3_reg_5257 <= bit_offset_3_fu_2265_p3;
                bit_offset_4_reg_5262 <= bit_offset_4_fu_2296_p3;
                bit_offset_5_reg_5267 <= bit_offset_5_fu_2327_p3;
                bit_offset_6_reg_5272 <= bit_offset_6_fu_2358_p3;
                bit_offset_7_reg_5277 <= bit_offset_7_fu_2389_p3;
                tmp_31_reg_5252 <= tmp_31_fu_2233_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001))) then
                bit_offset_8_reg_5349 <= bit_offset_8_fu_2554_p3;
                trunc_ln150_8_reg_5338 <= trunc_ln150_8_fu_2530_p1;
                trunc_ln150_9_reg_5359 <= trunc_ln150_9_fu_2562_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6_11001))) then
                bit_offset_reg_5215 <= bit_offset_fu_2118_p3;
                trunc_ln150_1_reg_5225 <= trunc_ln150_1_fu_2126_p1;
                trunc_ln150_reg_5204 <= trunc_ln150_fu_2094_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0_11001))) then
                bit_val_reg_5893 <= bit_val_fu_4672_p1;
                sub_ln150_74_reg_5908 <= sub_ln150_74_fu_4702_p2;
                tmp_118_reg_5898 <= add_ln278_fu_4684_p2(31 downto 31);
                trunc_ln150_40_reg_5903 <= trunc_ln150_40_fu_4698_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                cond389_i_reg_4963 <= cond389_i_fu_1598_p2;
                empty_84_reg_4958 <= empty_84_fu_1594_p1;
                x_2_mid2_reg_4953 <= x_2_mid2_fu_1578_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001))) then
                icmp_ln166_reg_5038 <= icmp_ln166_fu_1929_p2;
                trunc_ln166_reg_5042 <= trunc_ln166_fu_1941_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001))) then
                icmp_ln258_reg_5845 <= icmp_ln258_fu_4451_p2;
                icmp_ln260_reg_5849 <= icmp_ln260_fu_4479_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((initialized_load_reg_4854 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                initialized <= ap_const_lv1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                initialized_load_reg_4854 <= initialized;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage7) and (ap_const_boolean_0 = ap_block_pp5_stage7_11001))) then
                l1_bit_10_reg_5761 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001))) then
                l1_bit_11_reg_5767 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001))) then
                l1_bit_6_reg_5684 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4_11001))) then
                l1_bit_7_reg_5695 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage5) and (ap_const_boolean_0 = ap_block_pp5_stage5_11001))) then
                l1_bit_8_reg_5729 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage6) and (ap_const_boolean_0 = ap_block_pp5_stage6_11001))) then
                l1_bit_9_reg_5745 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1_11001))) then
                l1_bit_reg_5655 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001))) then
                l1_has_data_1_reg_5168 <= l1_has_data_1_fu_2062_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001))) then
                l1_has_data_2_reg_5319 <= l1_has_data_2_fu_2488_p2;
                tmp_37_reg_5304 <= tmp_37_fu_2448_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4_11001))) then
                l2_has_data_1_reg_5700 <= l2_has_data_1_fu_3980_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49) and (ap_phi_mux_l2_write_pos_flag_1_phi_fu_1026_p4 = ap_const_lv1_1))) then
                l2_write_pos <= l2_write_pos_new_1_reg_1034;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6_11001)))) then
                reg_1147 <= l0_write_pos;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6_11001))) then
                tmp_28_reg_5220 <= grp_fu_1067_p2(31 downto 31);
                voxel_bit_33_reg_5230 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_37_reg_5236 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then
                tmp_2_reg_4991 <= voxel_count(9 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001))) then
                tmp_55_reg_5354 <= grp_fu_1067_p2(31 downto 31);
                voxel_bit_40_reg_5364 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_44_reg_5370 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage6) and (ap_const_boolean_0 = ap_block_pp5_stage6_11001))) then
                tmp_74_reg_5740 <= tmp_74_fu_4170_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001))) then
                tmp_79_reg_5495 <= grp_fu_1067_p2(31 downto 31);
                voxel_bit_43_reg_5465 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_47_reg_5470 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                tmp_93_reg_5870 <= tmp_93_fu_4630_p4;
                trunc_ln258_reg_5865 <= trunc_ln258_fu_4626_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001))) then
                voxel_bit_25_reg_5104 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_29_reg_5120 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001))) then
                voxel_bit_26_reg_5136 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_30_reg_5142 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001))) then
                voxel_bit_27_reg_5158 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_31_reg_5163 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage5) and (ap_const_boolean_0 = ap_block_pp4_stage5_11001))) then
                voxel_bit_32_reg_5182 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_36_reg_5188 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage7) and (ap_const_boolean_0 = ap_block_pp4_stage7_11001))) then
                voxel_bit_34_reg_5282 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_38_reg_5288 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001))) then
                voxel_bit_35_reg_5309 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_39_reg_5314 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10_11001))) then
                voxel_bit_41_reg_5401 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_45_reg_5407 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage11) and (ap_const_boolean_0 = ap_block_pp4_stage11_11001))) then
                voxel_bit_42_reg_5438 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_46_reg_5444 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13_11001))) then
                voxel_bit_48_reg_5530 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_52_reg_5536 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage14) and (ap_const_boolean_0 = ap_block_pp4_stage14_11001))) then
                voxel_bit_49_reg_5567 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_53_reg_5573 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15_11001))) then
                voxel_bit_50_reg_5594 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0;
                voxel_bit_54_reg_5600 <= streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0;
            end if;
        end if;
    end process;
    ap_return_3_preg(31 downto 1) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone, l3_has_data_1_reg_1010, ap_enable_reg_pp4_iter0, initialized_load_load_fu_1235_p1, ap_CS_fsm_pp1_stage0, icmp_ln166_reg_5038, icmp_ln213_reg_5629, ap_enable_reg_pp5_iter0, icmp_ln258_fu_4451_p2, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter1, ap_CS_fsm_state45, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln111_fu_1298_p2, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_subdone, icmp_ln118_fu_1499_p2, ap_enable_reg_pp1_iter1, ap_predicate_tran11to13_state11, ap_block_pp4_stage1_subdone, ap_block_pp4_stage15_subdone, ap_block_pp5_stage2_subdone, ap_block_pp5_stage7_subdone, ap_enable_reg_pp6_iter0, ap_block_pp6_stage0_subdone, ap_enable_reg_pp7_iter0, ap_block_pp7_stage0_subdone, icmp_ln275_fu_4651_p2, ap_enable_reg_pp7_iter1, ap_CS_fsm_state9, icmp_ln125_fu_1688_p2, ap_CS_fsm_state49, ap_block_state49, ap_block_pp4_stage0_subdone, ap_block_pp4_stage2_subdone, ap_block_pp4_stage3_subdone, ap_block_pp4_stage4_subdone, ap_block_pp4_stage5_subdone, ap_block_pp4_stage6_subdone, ap_block_pp4_stage7_subdone, ap_block_pp4_stage8_subdone, ap_block_pp4_stage9_subdone, ap_block_pp4_stage10_subdone, ap_block_pp4_stage11_subdone, ap_block_pp4_stage12_subdone, ap_block_pp4_stage13_subdone, ap_block_pp4_stage14_subdone, ap_block_pp5_stage0_subdone, ap_block_pp5_stage1_subdone, ap_block_pp5_stage3_subdone, ap_block_pp5_stage4_subdone, ap_block_pp5_stage5_subdone, ap_block_pp5_stage6_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_start = ap_const_logic_1) and (initialized_load_load_fu_1235_p1 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln111_fu_1298_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (icmp_ln111_fu_1298_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((icmp_ln118_fu_1499_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) and not(((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((icmp_ln118_fu_1499_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_1688_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_predicate_tran11to13_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_predicate_tran11to13_state11 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_pp4_stage1 => 
                if ((not(((icmp_ln166_reg_5038 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp4_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                elsif (((icmp_ln166_reg_5038 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage1;
                end if;
            when ap_ST_fsm_pp4_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage2;
                end if;
            when ap_ST_fsm_pp4_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage3;
                end if;
            when ap_ST_fsm_pp4_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage4;
                end if;
            when ap_ST_fsm_pp4_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage5;
                end if;
            when ap_ST_fsm_pp4_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage6;
                end if;
            when ap_ST_fsm_pp4_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage7;
                end if;
            when ap_ST_fsm_pp4_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage8;
                end if;
            when ap_ST_fsm_pp4_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage9;
                end if;
            when ap_ST_fsm_pp4_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage10;
                end if;
            when ap_ST_fsm_pp4_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage11;
                end if;
            when ap_ST_fsm_pp4_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage12;
                end if;
            when ap_ST_fsm_pp4_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage13;
                end if;
            when ap_ST_fsm_pp4_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage14;
                end if;
            when ap_ST_fsm_pp4_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp4_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage15;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_pp5_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage1;
                end if;
            when ap_ST_fsm_pp5_stage2 => 
                if ((not(((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp5_stage2_subdone))) and (ap_const_boolean_0 = ap_block_pp5_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
                elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp5_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage2;
                end if;
            when ap_ST_fsm_pp5_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage3;
                end if;
            when ap_ST_fsm_pp5_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage4;
                end if;
            when ap_ST_fsm_pp5_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage5;
                end if;
            when ap_ST_fsm_pp5_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage6;
                end if;
            when ap_ST_fsm_pp5_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp5_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage7;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
            when ap_ST_fsm_pp6_stage0 => 
                if ((not(((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (icmp_ln258_fu_4451_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) and not(((ap_enable_reg_pp6_iter0 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif ((((ap_enable_reg_pp6_iter0 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) or ((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (icmp_ln258_fu_4451_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (l3_has_data_1_reg_1010 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_pp7_stage0 => 
                if ((not(((icmp_ln275_fu_4651_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) and not(((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                elsif ((((icmp_ln275_fu_4651_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone)) or ((ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    L2_bitmap <= empty_86_fu_386;

    L2_bitmap_ap_vld_assign_proc : process(ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            L2_bitmap_ap_vld <= ap_const_logic_1;
        else 
            L2_bitmap_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln111_1_fu_1304_p2 <= std_logic_vector(unsigned(indvar_flatten13_fu_302) + unsigned(ap_const_lv8_1));
    add_ln111_fu_1313_p2 <= std_logic_vector(unsigned(z_fu_298) + unsigned(ap_const_lv2_1));
    add_ln112_1_fu_1339_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_294) + unsigned(ap_const_lv8_1));
    add_ln112_fu_1398_p2 <= std_logic_vector(unsigned(select_ln111_fu_1374_p3) + unsigned(ap_const_lv4_1));
    add_ln113_fu_1447_p2 <= std_logic_vector(unsigned(x_mid2_fu_1409_p3) + unsigned(ap_const_lv4_1));
    add_ln114_fu_1441_p2 <= std_logic_vector(unsigned(tmp_1_fu_1429_p3) + unsigned(zext_ln114_fu_1437_p1));
    add_ln118_1_fu_1505_p2 <= std_logic_vector(unsigned(indvar_flatten33_fu_322) + unsigned(ap_const_lv6_1));
    add_ln118_fu_1520_p2 <= std_logic_vector(unsigned(z_1_fu_318) + unsigned(ap_const_lv2_1));
    add_ln119_1_fu_1610_p2 <= std_logic_vector(unsigned(indvar_flatten20_fu_314) + unsigned(ap_const_lv6_1));
    add_ln119_fu_1566_p2 <= std_logic_vector(unsigned(select_ln118_fu_1532_p3) + unsigned(ap_const_lv3_1));
    add_ln120_fu_1604_p2 <= std_logic_vector(unsigned(x_2_mid2_fu_1578_p3) + unsigned(ap_const_lv3_1));
    add_ln121_fu_1659_p2 <= std_logic_vector(unsigned(tmp_s_fu_1649_p3) + unsigned(zext_ln121_fu_1656_p1));
    add_ln125_1_fu_1694_p2 <= std_logic_vector(unsigned(indvar_flatten40_fu_334) + unsigned(ap_const_lv3_1));
    add_ln125_fu_1710_p2 <= std_logic_vector(unsigned(y_1_fu_330) + unsigned(ap_const_lv2_1));
    add_ln141_fu_1814_p2 <= std_logic_vector(unsigned(voxel_count) + unsigned(ap_const_lv10_1));
    add_ln150_fu_1862_p2 <= std_logic_vector(unsigned(tmp_4_fu_1854_p3) + unsigned(x_3_fu_1826_p4));
    add_ln161_fu_1905_p2 <= std_logic_vector(unsigned(retained_block_count) + unsigned(ap_const_lv32_1));
    add_ln166_fu_1935_p2 <= std_logic_vector(unsigned(l1_y_fu_338) + unsigned(ap_const_lv3_1));
    add_ln1_fu_4509_p3 <= (trunc_ln258_1_fu_4505_p1 & and_ln255_fu_4491_p2);
    add_ln205_22_fu_3496_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_2));
    add_ln205_23_fu_3555_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_3));
    add_ln205_24_fu_3615_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_4));
    add_ln205_25_fu_3674_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_5));
    add_ln205_26_fu_3733_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_6));
    add_ln205_27_fu_3792_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_7));
    add_ln213_fu_3914_p2 <= std_logic_vector(unsigned(l2_y_2_reg_5623) + unsigned(ap_const_lv2_1));
    add_ln258_1_fu_4457_p2 <= std_logic_vector(unsigned(indvar_flatten47_fu_378) + unsigned(ap_const_lv3_1));
    add_ln258_fu_4473_p2 <= std_logic_vector(unsigned(l2_y_1_fu_374) + unsigned(ap_const_lv2_1));
    add_ln260_fu_4597_p2 <= std_logic_vector(unsigned(select_ln258_1_fu_4564_p3) + unsigned(ap_const_lv3_2));
    add_ln275_fu_4657_p2 <= std_logic_vector(unsigned(i_fu_382) + unsigned(ap_const_lv3_1));
    add_ln278_fu_4684_p2 <= std_logic_vector(unsigned(l2_write_pos_loc_0_reg_938) + unsigned(zext_ln278_fu_4680_p1));
    add_ln280_fu_4757_p2 <= std_logic_vector(unsigned(l2_write_pos_loc_0_reg_938) + unsigned(ap_const_lv32_4));
    add_ln286_1_fu_4769_p2 <= std_logic_vector(unsigned(l2_write_pos_loc_1_reg_1045) + unsigned(ap_const_lv32_1));
    add_ln286_2_fu_4775_p2 <= std_logic_vector(unsigned(add_ln286_1_fu_4769_p2) + unsigned(add_ln286_fu_4763_p2));
    add_ln286_fu_4763_p2 <= std_logic_vector(unsigned(l1_write_pos) + unsigned(l0_write_pos));
    add_ln_fu_1746_p3 <= (trunc_ln127_fu_1742_p1 & and_ln125_fu_1728_p2);
    and_ln111_fu_1392_p2 <= (xor_ln111_fu_1381_p2 and icmp_ln113_fu_1386_p2);
    and_ln118_fu_1552_p2 <= (xor_ln118_fu_1540_p2 and icmp_ln120_fu_1546_p2);
    and_ln125_fu_1728_p2 <= (xor_ln125_fu_1722_p2 and trunc_ln125_fu_1706_p1);
    and_ln255_fu_4491_p2 <= (xor_ln255_fu_4485_p2 and trunc_ln256_fu_4469_p1);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(9);
    ap_CS_fsm_pp4_stage1 <= ap_CS_fsm(10);
    ap_CS_fsm_pp4_stage10 <= ap_CS_fsm(19);
    ap_CS_fsm_pp4_stage11 <= ap_CS_fsm(20);
    ap_CS_fsm_pp4_stage12 <= ap_CS_fsm(21);
    ap_CS_fsm_pp4_stage13 <= ap_CS_fsm(22);
    ap_CS_fsm_pp4_stage14 <= ap_CS_fsm(23);
    ap_CS_fsm_pp4_stage15 <= ap_CS_fsm(24);
    ap_CS_fsm_pp4_stage2 <= ap_CS_fsm(11);
    ap_CS_fsm_pp4_stage3 <= ap_CS_fsm(12);
    ap_CS_fsm_pp4_stage4 <= ap_CS_fsm(13);
    ap_CS_fsm_pp4_stage5 <= ap_CS_fsm(14);
    ap_CS_fsm_pp4_stage6 <= ap_CS_fsm(15);
    ap_CS_fsm_pp4_stage7 <= ap_CS_fsm(16);
    ap_CS_fsm_pp4_stage8 <= ap_CS_fsm(17);
    ap_CS_fsm_pp4_stage9 <= ap_CS_fsm(18);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(26);
    ap_CS_fsm_pp5_stage1 <= ap_CS_fsm(27);
    ap_CS_fsm_pp5_stage2 <= ap_CS_fsm(28);
    ap_CS_fsm_pp5_stage3 <= ap_CS_fsm(29);
    ap_CS_fsm_pp5_stage4 <= ap_CS_fsm(30);
    ap_CS_fsm_pp5_stage5 <= ap_CS_fsm(31);
    ap_CS_fsm_pp5_stage6 <= ap_CS_fsm(32);
    ap_CS_fsm_pp5_stage7 <= ap_CS_fsm(33);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(35);
    ap_CS_fsm_pp7_stage0 <= ap_CS_fsm(37);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(6);
    ap_CS_fsm_state13 <= ap_CS_fsm(8);
    ap_CS_fsm_state31 <= ap_CS_fsm(25);
    ap_CS_fsm_state42 <= ap_CS_fsm(34);
    ap_CS_fsm_state45 <= ap_CS_fsm(36);
    ap_CS_fsm_state48 <= ap_CS_fsm(38);
    ap_CS_fsm_state49 <= ap_CS_fsm(39);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state8 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;

    ap_ST_fsm_state49_blk_assign_proc : process(ap_block_state49)
    begin
        if ((ap_const_boolean_1 = ap_block_state49)) then 
            ap_ST_fsm_state49_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state49_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_grp1_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp1_done_reg, ap_block_state12_pp3_stage0_iter1_grp1)
    begin
                ap_block_pp3_stage0_01001_grp1 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg));
    end process;


    ap_block_pp3_stage0_01001_grp2_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp2_done_reg, ap_block_state12_pp3_stage0_iter1_grp2)
    begin
                ap_block_pp3_stage0_01001_grp2 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg));
    end process;


    ap_block_pp3_stage0_01001_grp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_state12_pp3_stage0_iter1_grp3, ap_block_pp3_stage0_subdone_grp3_done_reg)
    begin
                ap_block_pp3_stage0_01001_grp3 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3_done_reg));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp1_done_reg, ap_block_pp3_stage0_subdone_grp2_done_reg, ap_block_state11_pp3_stage0_iter0, ap_block_state12_pp3_stage0_iter1_grp1, ap_block_state12_pp3_stage0_iter1_grp2, ap_block_state12_pp3_stage0_iter1_grp3, ap_block_pp3_stage0_subdone_grp3_done_reg)
    begin
                ap_block_pp3_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state11_pp3_stage0_iter0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp3) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3_done_reg)) or ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp2) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg)) or ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg)))));
    end process;

        ap_block_pp3_stage0_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp1_done_reg, ap_block_state12_pp3_stage0_iter1_grp1)
    begin
                ap_block_pp3_stage0_11001_grp1 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg));
    end process;


    ap_block_pp3_stage0_11001_grp2_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp2_done_reg, ap_block_state12_pp3_stage0_iter1_grp2)
    begin
                ap_block_pp3_stage0_11001_grp2 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg));
    end process;


    ap_block_pp3_stage0_11001_grp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_state12_pp3_stage0_iter1_grp3, ap_block_pp3_stage0_subdone_grp3_done_reg)
    begin
                ap_block_pp3_stage0_11001_grp3 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3_done_reg));
    end process;

        ap_block_pp3_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_subdone_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp1_done_reg, ap_block_pp3_stage0_subdone_grp2_done_reg, ap_block_state11_pp3_stage0_iter0, ap_block_state12_pp3_stage0_iter1_grp1, ap_block_state12_pp3_stage0_iter1_grp2, ap_block_state12_pp3_stage0_iter1_grp3, ap_block_pp3_stage0_subdone_grp3_done_reg)
    begin
                ap_block_pp3_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state11_pp3_stage0_iter0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp3) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3_done_reg)) or ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp2) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg)) or ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg)))));
    end process;

        ap_block_pp3_stage0_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_subdone_grp1_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp1_done_reg, ap_block_state12_pp3_stage0_iter1_grp1)
    begin
                ap_block_pp3_stage0_subdone_grp1 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg));
    end process;


    ap_block_pp3_stage0_subdone_grp2_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_subdone_grp2_done_reg, ap_block_state12_pp3_stage0_iter1_grp2)
    begin
                ap_block_pp3_stage0_subdone_grp2 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp2) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg));
    end process;


    ap_block_pp3_stage0_subdone_grp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_block_state12_pp3_stage0_iter1_grp3, ap_block_pp3_stage0_subdone_grp3_done_reg)
    begin
                ap_block_pp3_stage0_subdone_grp3 <= ((ap_const_boolean_1 = ap_block_state12_pp3_stage0_iter1_grp3) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp3_done_reg));
    end process;

        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage14_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage14_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage15_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage15_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp3_stage0_iter0_assign_proc : process(input_voxel_stream_empty_n, ap_predicate_op223_read_state11)
    begin
                ap_block_state11_pp3_stage0_iter0 <= ((input_voxel_stream_empty_n = ap_const_logic_0) and (ap_predicate_op223_read_state11 = ap_const_boolean_1));
    end process;


    ap_block_state12_pp3_stage0_iter1_grp1_assign_proc : process(feature_data_stream_full_n, voxel_occupancy_reg_4998)
    begin
                ap_block_state12_pp3_stage0_iter1_grp1 <= ((feature_data_stream_full_n = ap_const_logic_0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1));
    end process;


    ap_block_state12_pp3_stage0_iter1_grp2_assign_proc : process(write_addr_stream_full_n, voxel_occupancy_reg_4998)
    begin
                ap_block_state12_pp3_stage0_iter1_grp2 <= ((write_addr_stream_full_n = ap_const_logic_0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1));
    end process;


    ap_block_state12_pp3_stage0_iter1_grp3_assign_proc : process(retained_blocks_stream_full_n, voxel_occupancy_reg_4998)
    begin
                ap_block_state12_pp3_stage0_iter1_grp3 <= ((voxel_occupancy_reg_4998 = ap_const_lv1_1) and (retained_blocks_stream_full_n = ap_const_logic_0));
    end process;


    ap_block_state49_assign_proc : process(retained_blocks_stream_full_n, ap_predicate_op1053_write_state49, early_trigger_stream_full_n, ap_predicate_op1057_write_state49)
    begin
                ap_block_state49 <= (((retained_blocks_stream_full_n = ap_const_logic_0) and (ap_predicate_op1053_write_state49 = ap_const_boolean_1)) or ((ap_predicate_op1057_write_state49 = ap_const_boolean_1) and (early_trigger_stream_full_n = ap_const_logic_0)));
    end process;


    ap_condition_4137_assign_proc : process(ap_CS_fsm_pp4_stage9, ap_block_pp4_stage9_11001, l1_has_data_1_reg_5168)
    begin
                ap_condition_4137 <= ((l1_has_data_1_reg_5168 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001));
    end process;


    ap_condition_4141_assign_proc : process(ap_CS_fsm_pp4_stage4, ap_block_pp4_stage4_11001, l1_has_data_1_fu_2062_p2)
    begin
                ap_condition_4141 <= ((l1_has_data_1_fu_2062_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001));
    end process;


    ap_condition_4145_assign_proc : process(ap_CS_fsm_pp4_stage12, ap_block_pp4_stage12_11001, l1_has_data_2_reg_5319)
    begin
                ap_condition_4145 <= ((l1_has_data_2_reg_5319 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001));
    end process;


    ap_condition_4149_assign_proc : process(l1_has_data_2_reg_5319, ap_CS_fsm_pp4_stage10, ap_block_pp4_stage10_11001)
    begin
                ap_condition_4149 <= ((l1_has_data_2_reg_5319 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10_11001));
    end process;


    ap_condition_645_assign_proc : process(ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage15, ap_block_pp4_stage15_11001)
    begin
                ap_condition_645 <= ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15_11001));
    end process;


    ap_condition_783_assign_proc : process(ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage7, ap_block_pp5_stage7_11001)
    begin
                ap_condition_783 <= ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage7) and (ap_const_boolean_0 = ap_block_pp5_stage7_11001));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln111_fu_1298_p2)
    begin
        if ((icmp_ln111_fu_1298_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln118_fu_1499_p2)
    begin
        if ((icmp_ln118_fu_1499_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state11_assign_proc : process(ap_predicate_tran11to13_state11)
    begin
        if ((ap_predicate_tran11to13_state11 = ap_const_boolean_1)) then 
            ap_condition_pp3_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state15_assign_proc : process(icmp_ln166_reg_5038)
    begin
        if ((icmp_ln166_reg_5038 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state34_assign_proc : process(icmp_ln213_reg_5629)
    begin
        if ((icmp_ln213_reg_5629 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state34 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state43_assign_proc : process(icmp_ln258_fu_4451_p2)
    begin
        if ((icmp_ln258_fu_4451_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state43 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state43 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp7_exit_iter0_state46_assign_proc : process(icmp_ln275_fu_4651_p2)
    begin
        if ((icmp_ln275_fu_4651_p2 = ap_const_lv1_1)) then 
            ap_condition_pp7_exit_iter0_state46 <= ap_const_logic_1;
        else 
            ap_condition_pp7_exit_iter0_state46 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state49, ap_block_state49)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);
    ap_enable_pp7 <= (ap_idle_pp7 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter0)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp7_assign_proc : process(ap_enable_reg_pp7_iter0, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter1 = ap_const_logic_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_0))) then 
            ap_idle_pp7 <= ap_const_logic_1;
        else 
            ap_idle_pp7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_L0_bitmap_4_phi_fu_983_p4_assign_proc : process(icmp_ln166_reg_5038, ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970, tmp_117_fu_3842_p4, ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980, l1_has_data_4_fu_3400_p2)
    begin
        if ((icmp_ln166_reg_5038 = ap_const_lv1_0)) then
            if ((l1_has_data_4_fu_3400_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 <= ap_phi_reg_pp4_iter1_L0_bitmap_3_reg_970;
            elsif ((l1_has_data_4_fu_3400_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 <= tmp_117_fu_3842_p4;
            else 
                ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 <= ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980;
            end if;
        else 
            ap_phi_mux_L0_bitmap_4_phi_fu_983_p4 <= ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980;
        end if; 
    end process;


    ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4_assign_proc : process(icmp_ln213_reg_5629_pp5_iter1_reg, l2_has_data_2_reg_5772, tmp_101_fu_4403_p4, ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000)
    begin
        if (((l2_has_data_2_reg_5772 = ap_const_lv1_1) and (icmp_ln213_reg_5629_pp5_iter1_reg = ap_const_lv1_0))) then 
            ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4 <= tmp_101_fu_4403_p4;
        else 
            ap_phi_mux_L1_bitmap_2_phi_fu_1003_p4 <= ap_phi_reg_pp5_iter1_L1_bitmap_2_reg_1000;
        end if; 
    end process;

    ap_phi_mux_l2_write_pos_flag_1_phi_fu_1026_p4 <= l2_write_pos_flag_1_reg_1022;
    ap_phi_reg_pp4_iter1_L0_bitmap_4_reg_980 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp5_iter0_L1_bitmap_2_reg_1000 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op1053_write_state49_assign_proc : process(tmp_2_reg_4991, tmp_43_nbwritereq_fu_455_p3)
    begin
                ap_predicate_op1053_write_state49 <= ((tmp_2_reg_4991 = ap_const_lv1_1) and (tmp_43_nbwritereq_fu_455_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op1057_write_state49_assign_proc : process(tmp_2_reg_4991, tmp_44_nbwritereq_fu_463_p3)
    begin
                ap_predicate_op1057_write_state49 <= ((tmp_2_reg_4991 = ap_const_lv1_1) and (tmp_44_nbwritereq_fu_463_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op223_read_state11_assign_proc : process(tmp_2_fu_1792_p3, tmp_nbreadreq_fu_414_p3)
    begin
                ap_predicate_op223_read_state11 <= ((tmp_nbreadreq_fu_414_p3 = ap_const_lv1_1) and (tmp_2_fu_1792_p3 = ap_const_lv1_0));
    end process;


    ap_predicate_tran11to13_state11_assign_proc : process(tmp_2_fu_1792_p3, tmp_nbreadreq_fu_414_p3)
    begin
                ap_predicate_tran11to13_state11 <= ((tmp_nbreadreq_fu_414_p3 = ap_const_lv1_0) or (tmp_2_fu_1792_p3 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state49, ap_block_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(tmp_93_reg_5870, ap_CS_fsm_state49, ap_block_state49, ap_return_0_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
            ap_return_0 <= tmp_93_reg_5870;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(L1_bitmap_0_load_reg_5661, ap_CS_fsm_state49, ap_block_state49, ap_return_1_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
            ap_return_1 <= L1_bitmap_0_load_reg_5661;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;


    ap_return_2_assign_proc : process(L0_bitmap_0_load_reg_5075, ap_CS_fsm_state49, ap_block_state49, ap_return_2_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
            ap_return_2 <= L0_bitmap_0_load_reg_5075;
        else 
            ap_return_2 <= ap_return_2_preg;
        end if; 
    end process;


    ap_return_3_assign_proc : process(ap_CS_fsm_state49, ap_block_state49, or_ln286_6_fu_4781_p6, ap_return_3_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (ap_const_boolean_0 = ap_block_state49))) then 
            ap_return_3 <= or_ln286_6_fu_4781_p6;
        else 
            ap_return_3 <= ap_return_3_preg;
        end if; 
    end process;

    bit_offset_10_fu_2658_p3 <= 
        sub_ln150_19_fu_2652_p2 when (grp_fu_1157_p3(0) = '1') else 
        zext_ln150_21_fu_2639_p1;
    bit_offset_11_fu_2702_p3 <= 
        sub_ln150_21_fu_2696_p2 when (grp_fu_1171_p3(0) = '1') else 
        zext_ln150_23_fu_2683_p1;
    bit_offset_12_fu_2733_p3 <= 
        sub_ln150_23_fu_2727_p2 when (grp_fu_1185_p3(0) = '1') else 
        zext_ln150_25_fu_2714_p1;
    bit_offset_13_fu_2800_p3 <= 
        sub_ln150_25_fu_2794_p2 when (grp_fu_1199_p3(0) = '1') else 
        zext_ln150_27_fu_2781_p1;
    bit_offset_14_fu_2844_p3 <= 
        sub_ln150_27_fu_2838_p2 when (grp_fu_1213_p3(0) = '1') else 
        zext_ln150_29_fu_2825_p1;
    bit_offset_15_fu_2910_p3 <= 
        sub_ln150_29_fu_2904_p2 when (grp_fu_1227_p3(0) = '1') else 
        zext_ln150_31_fu_2897_p1;
    bit_offset_16_fu_4022_p3 <= 
        sub_ln150_31_fu_4016_p2 when (grp_fu_1091_p3(0) = '1') else 
        zext_ln150_33_fu_4002_p1;
    bit_offset_17_fu_4054_p3 <= 
        sub_ln150_32_fu_4048_p2 when (grp_fu_1105_p3(0) = '1') else 
        zext_ln150_35_fu_4034_p1;
    bit_offset_18_fu_4086_p3 <= 
        sub_ln150_34_fu_4080_p2 when (grp_fu_1119_p3(0) = '1') else 
        zext_ln150_37_fu_4066_p1;
    bit_offset_19_fu_4118_p3 <= 
        sub_ln150_36_fu_4112_p2 when (grp_fu_1133_p3(0) = '1') else 
        zext_ln150_39_fu_4098_p1;
    bit_offset_1_fu_2178_p3 <= 
        sub_ln150_2_fu_2172_p2 when (tmp_28_reg_5220(0) = '1') else 
        zext_ln150_3_fu_2160_p1;
    bit_offset_20_fu_2992_p3 <= 
        sub_ln150_38_fu_2986_p2 when (grp_fu_1059_p3(0) = '1') else 
        zext_ln150_41_fu_2972_p1;
    bit_offset_21_fu_3053_p3 <= 
        sub_ln150_39_fu_3047_p2 when (tmp_79_reg_5495(0) = '1') else 
        zext_ln150_43_fu_3035_p1;
    bit_offset_22_fu_3096_p3 <= 
        sub_ln150_41_fu_3090_p2 when (grp_fu_1157_p3(0) = '1') else 
        zext_ln150_45_fu_3077_p1;
    bit_offset_23_fu_3140_p3 <= 
        sub_ln150_43_fu_3134_p2 when (grp_fu_1171_p3(0) = '1') else 
        zext_ln150_47_fu_3121_p1;
    bit_offset_24_fu_3171_p3 <= 
        sub_ln150_45_fu_3165_p2 when (grp_fu_1185_p3(0) = '1') else 
        zext_ln150_49_fu_3152_p1;
    bit_offset_25_fu_3238_p3 <= 
        sub_ln150_47_fu_3232_p2 when (grp_fu_1199_p3(0) = '1') else 
        zext_ln150_51_fu_3219_p1;
    bit_offset_26_fu_3282_p3 <= 
        sub_ln150_49_fu_3276_p2 when (grp_fu_1213_p3(0) = '1') else 
        zext_ln150_53_fu_3263_p1;
    bit_offset_27_fu_3336_p3 <= 
        sub_ln150_51_fu_3330_p2 when (grp_fu_1227_p3(0) = '1') else 
        zext_ln150_55_fu_3323_p1;
    bit_offset_28_fu_4254_p3 <= 
        sub_ln150_53_fu_4248_p2 when (grp_fu_1091_p3(0) = '1') else 
        zext_ln150_57_fu_4234_p1;
    bit_offset_29_fu_4299_p3 <= 
        sub_ln150_54_fu_4293_p2 when (grp_fu_1105_p3(0) = '1') else 
        zext_ln150_59_fu_4279_p1;
    bit_offset_2_fu_2221_p3 <= 
        sub_ln150_4_fu_2215_p2 when (grp_fu_1157_p3(0) = '1') else 
        zext_ln150_5_fu_2202_p1;
    bit_offset_30_fu_4331_p3 <= 
        sub_ln150_56_fu_4325_p2 when (grp_fu_1119_p3(0) = '1') else 
        zext_ln150_61_fu_4311_p1;
    bit_offset_31_fu_4363_p3 <= 
        sub_ln150_58_fu_4357_p2 when (grp_fu_1133_p3(0) = '1') else 
        zext_ln150_63_fu_4343_p1;
    bit_offset_32_fu_3430_p3 <= 
        sub_ln150_60_fu_3424_p2 when (grp_fu_1059_p3(0) = '1') else 
        zext_ln150_65_fu_3410_p1;
    bit_offset_33_fu_3475_p3 <= 
        sub_ln150_61_fu_3469_p2 when (grp_fu_1073_p3(0) = '1') else 
        zext_ln150_67_fu_3455_p1;
    bit_offset_34_fu_3534_p3 <= 
        sub_ln150_63_fu_3528_p2 when (tmp_106_fu_3502_p3(0) = '1') else 
        zext_ln150_69_fu_3514_p1;
    bit_offset_35_fu_3593_p3 <= 
        sub_ln150_65_fu_3587_p2 when (tmp_108_fu_3561_p3(0) = '1') else 
        zext_ln150_71_fu_3573_p1;
    bit_offset_36_fu_3653_p3 <= 
        sub_ln150_67_fu_3647_p2 when (tmp_110_fu_3621_p3(0) = '1') else 
        zext_ln150_73_fu_3633_p1;
    bit_offset_37_fu_3712_p3 <= 
        sub_ln150_69_fu_3706_p2 when (tmp_112_fu_3680_p3(0) = '1') else 
        zext_ln150_75_fu_3692_p1;
    bit_offset_38_fu_3771_p3 <= 
        sub_ln150_71_fu_3765_p2 when (tmp_114_fu_3739_p3(0) = '1') else 
        zext_ln150_77_fu_3751_p1;
    bit_offset_39_fu_3830_p3 <= 
        sub_ln150_73_fu_3824_p2 when (tmp_116_fu_3798_p3(0) = '1') else 
        zext_ln150_79_fu_3810_p1;
    bit_offset_3_fu_2265_p3 <= 
        sub_ln150_6_fu_2259_p2 when (grp_fu_1171_p3(0) = '1') else 
        zext_ln150_7_fu_2246_p1;
    bit_offset_40_fu_4728_p3 <= 
        sub_ln150_75_fu_4722_p2 when (tmp_118_reg_5898(0) = '1') else 
        zext_ln150_81_fu_4716_p1;
    bit_offset_4_fu_2296_p3 <= 
        sub_ln150_8_fu_2290_p2 when (grp_fu_1185_p3(0) = '1') else 
        zext_ln150_9_fu_2277_p1;
    bit_offset_5_fu_2327_p3 <= 
        sub_ln150_10_fu_2321_p2 when (grp_fu_1199_p3(0) = '1') else 
        zext_ln150_11_fu_2308_p1;
    bit_offset_6_fu_2358_p3 <= 
        sub_ln150_12_fu_2352_p2 when (grp_fu_1213_p3(0) = '1') else 
        zext_ln150_13_fu_2339_p1;
    bit_offset_7_fu_2389_p3 <= 
        sub_ln150_14_fu_2383_p2 when (grp_fu_1227_p3(0) = '1') else 
        zext_ln150_15_fu_2370_p1;
    bit_offset_8_fu_2554_p3 <= 
        sub_ln150_16_fu_2548_p2 when (grp_fu_1059_p3(0) = '1') else 
        zext_ln150_17_fu_2534_p1;
    bit_offset_9_fu_2615_p3 <= 
        sub_ln150_17_fu_2609_p2 when (tmp_55_reg_5354(0) = '1') else 
        zext_ln150_19_fu_2597_p1;
    bit_offset_fu_2118_p3 <= 
        sub_ln150_1_fu_2112_p2 when (grp_fu_1059_p3(0) = '1') else 
        zext_ln150_1_fu_2098_p1;
    bit_val_fu_4672_p1 <= lshr_ln277_fu_4667_p2(1 - 1 downto 0);
    cond388_i_fu_1333_p2 <= "1" when (select_ln111_1_fu_1325_p3 = ap_const_lv2_0) else "0";
    cond389_i_fu_1598_p2 <= "1" when (select_ln118_1_fu_1558_p3 = ap_const_lv2_0) else "0";
    early_trigger_stream_full_n <= ap_const_logic_1;
    empty_81_fu_1425_p1 <= select_ln112_fu_1417_p3(3 - 1 downto 0);
    empty_83_fu_1572_p2 <= (icmp_ln119_fu_1526_p2 or and_ln118_fu_1552_p2);
    empty_84_fu_1594_p1 <= select_ln119_fu_1586_p3(2 - 1 downto 0);
    empty_fu_1404_p2 <= (icmp_ln112_reg_4899 or and_ln111_fu_1392_p2);

    feature_data_stream_blk_n_assign_proc : process(feature_data_stream_full_n, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0_grp1, voxel_occupancy_reg_4998, ap_block_pp3_stage0_subdone_grp1_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_grp1))) then 
            feature_data_stream_blk_n <= feature_data_stream_full_n;
        else 
            feature_data_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    feature_data_stream_din <= (tmp_25_reg_5019 & ap_const_lv1_1);

    feature_data_stream_write_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, voxel_occupancy_reg_4998, ap_block_pp3_stage0_subdone_grp1_done_reg, ap_block_pp3_stage0_11001_grp1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp1_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp1))) then 
            feature_data_stream_write <= ap_const_logic_1;
        else 
            feature_data_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1059_p3 <= l0_write_pos(31 downto 31);
    grp_fu_1067_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_1));
    grp_fu_1073_p3 <= grp_fu_1067_p2(31 downto 31);
    grp_fu_1081_p2 <= std_logic_vector(unsigned(l0_write_pos) + unsigned(ap_const_lv32_8));
    grp_fu_1091_p3 <= l1_write_pos(31 downto 31);
    grp_fu_1099_p2 <= std_logic_vector(unsigned(l1_write_pos) + unsigned(ap_const_lv32_1));
    grp_fu_1105_p3 <= grp_fu_1099_p2(31 downto 31);
    grp_fu_1113_p2 <= std_logic_vector(unsigned(l1_write_pos) + unsigned(ap_const_lv32_2));
    grp_fu_1119_p3 <= grp_fu_1113_p2(31 downto 31);
    grp_fu_1127_p2 <= std_logic_vector(unsigned(l1_write_pos) + unsigned(ap_const_lv32_3));
    grp_fu_1133_p3 <= grp_fu_1127_p2(31 downto 31);
    grp_fu_1141_p2 <= std_logic_vector(unsigned(l1_write_pos) + unsigned(ap_const_lv32_4));
    grp_fu_1151_p2 <= std_logic_vector(unsigned(reg_1147) + unsigned(ap_const_lv32_2));
    grp_fu_1157_p3 <= grp_fu_1151_p2(31 downto 31);
    grp_fu_1165_p2 <= std_logic_vector(unsigned(reg_1147) + unsigned(ap_const_lv32_3));
    grp_fu_1171_p3 <= grp_fu_1165_p2(31 downto 31);
    grp_fu_1179_p2 <= std_logic_vector(unsigned(reg_1147) + unsigned(ap_const_lv32_4));
    grp_fu_1185_p3 <= grp_fu_1179_p2(31 downto 31);
    grp_fu_1193_p2 <= std_logic_vector(unsigned(reg_1147) + unsigned(ap_const_lv32_5));
    grp_fu_1199_p3 <= grp_fu_1193_p2(31 downto 31);
    grp_fu_1207_p2 <= std_logic_vector(unsigned(reg_1147) + unsigned(ap_const_lv32_6));
    grp_fu_1213_p3 <= grp_fu_1207_p2(31 downto 31);
    grp_fu_1221_p2 <= std_logic_vector(unsigned(reg_1147) + unsigned(ap_const_lv32_7));
    grp_fu_1227_p3 <= grp_fu_1221_p2(31 downto 31);
    icmp_ln111_fu_1298_p2 <= "1" when (indvar_flatten13_fu_302 = ap_const_lv8_80) else "0";
    icmp_ln112_fu_1319_p2 <= "1" when (indvar_flatten_fu_294 = ap_const_lv8_40) else "0";
    icmp_ln113_fu_1386_p2 <= "1" when (x_fu_286 = ap_const_lv4_8) else "0";
    icmp_ln118_fu_1499_p2 <= "1" when (indvar_flatten33_fu_322 = ap_const_lv6_20) else "0";
    icmp_ln119_fu_1526_p2 <= "1" when (indvar_flatten20_fu_314 = ap_const_lv6_10) else "0";
    icmp_ln120_fu_1546_p2 <= "1" when (x_2_fu_306 = ap_const_lv3_4) else "0";
    icmp_ln125_fu_1688_p2 <= "1" when (indvar_flatten40_fu_334 = ap_const_lv3_4) else "0";
    icmp_ln126_fu_1716_p2 <= "1" when (x_1_fu_326 = ap_const_lv2_2) else "0";
    icmp_ln166_fu_1929_p2 <= "1" when (l1_y_fu_338 = ap_const_lv3_4) else "0";
    icmp_ln213_fu_3876_p2 <= "1" when (l2_y_fu_346 = ap_const_lv2_2) else "0";
    icmp_ln258_fu_4451_p2 <= "1" when (indvar_flatten47_fu_378 = ap_const_lv3_4) else "0";
    icmp_ln260_fu_4479_p2 <= "1" when (l2_x_fu_362 = ap_const_lv2_2) else "0";
    icmp_ln275_fu_4651_p2 <= "1" when (i_fu_382 = ap_const_lv3_4) else "0";
    initialized_load_load_fu_1235_p1 <= initialized;

    input_voxel_stream_blk_n_assign_proc : process(input_voxel_stream_empty_n, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0, tmp_2_fu_1792_p3, tmp_nbreadreq_fu_414_p3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (tmp_nbreadreq_fu_414_p3 = ap_const_lv1_1) and (tmp_2_fu_1792_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            input_voxel_stream_blk_n <= input_voxel_stream_empty_n;
        else 
            input_voxel_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_voxel_stream_read_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_predicate_op223_read_state11, ap_block_pp3_stage0_11001)
    begin
        if (((ap_predicate_op223_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) then 
            input_voxel_stream_read <= ap_const_logic_1;
        else 
            input_voxel_stream_read <= ap_const_logic_0;
        end if; 
    end process;

    l1_has_data_1_fu_2062_p2 <= (voxel_bit_reg_5092 or or_ln192_5_fu_2057_p2);
    l1_has_data_2_fu_2488_p2 <= (voxel_bit_32_reg_5182 or or_ln192_12_fu_2483_p2);
    l1_has_data_3_fu_2962_p2 <= (voxel_bit_40_reg_5364 or or_ln192_19_fu_2957_p2);
    l1_has_data_4_fu_3400_p2 <= (voxel_bit_48_reg_5530 or or_ln192_26_fu_3395_p2);
    l2_bit_pos_3_fu_4591_p2 <= std_logic_vector(unsigned(select_ln255_fu_4557_p3) + unsigned(ap_const_lv3_1));
    l2_complete_level_1_fu_4575_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln255_fu_4557_p3),32));
    l2_has_data_1_fu_3980_p2 <= (or_ln236_fu_3975_p2 or l1_bit_reg_5655);
    l2_has_data_2_fu_4223_p2 <= (or_ln236_4_fu_4218_p2 or or_ln236_3_fu_4214_p2);

    l2_temp_buffer_address0_local_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage4, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, zext_ln127_fu_1754_p1, ap_CS_fsm_state9, ap_block_pp5_stage0, zext_ln241_fu_3953_p1, ap_block_pp5_stage4, zext_ln241_1_fu_4209_p1, zext_ln262_fu_4517_p1, ap_block_pp6_stage0)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            l2_temp_buffer_address0_local <= zext_ln262_fu_4517_p1(2 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            l2_temp_buffer_address0_local <= zext_ln241_1_fu_4209_p1(2 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4))) then 
            l2_temp_buffer_address0_local <= zext_ln241_fu_3953_p1(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            l2_temp_buffer_address0_local <= zext_ln127_fu_1754_p1(2 - 1 downto 0);
        else 
            l2_temp_buffer_address0_local <= "XX";
        end if; 
    end process;


    l2_temp_buffer_ce0_local_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage4, ap_block_pp5_stage4_11001, ap_enable_reg_pp5_iter1, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4_11001)) or ((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0_11001)))) then 
            l2_temp_buffer_ce0_local <= ap_const_logic_1;
        else 
            l2_temp_buffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    l2_temp_buffer_d0_local_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage4, l2_has_data_1_fu_3980_p2, ap_enable_reg_pp5_iter1, l2_has_data_2_fu_4223_p2, ap_CS_fsm_state9, ap_block_pp5_stage0, ap_block_pp5_stage4)
    begin
        if (((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            l2_temp_buffer_d0_local <= l2_has_data_2_fu_4223_p2;
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4))) then 
            l2_temp_buffer_d0_local <= l2_has_data_1_fu_3980_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            l2_temp_buffer_d0_local <= ap_const_lv1_0;
        else 
            l2_temp_buffer_d0_local <= "X";
        end if; 
    end process;


    l2_temp_buffer_we0_local_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln213_reg_5629, ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage4, ap_block_pp5_stage4_11001, ap_enable_reg_pp5_iter1, ap_CS_fsm_state9, icmp_ln125_fu_1688_p2)
    begin
        if ((((ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (icmp_ln213_reg_5629 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_1688_p2 = ap_const_lv1_0)))) then 
            l2_temp_buffer_we0_local <= ap_const_logic_1;
        else 
            l2_temp_buffer_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    l3_has_data_fu_4585_p2 <= (l3_has_data_1_reg_1010 or l2_temp_buffer_q0);
    lshr_ln277_fu_4667_p2 <= std_logic_vector(shift_right(unsigned(trunc_ln258_reg_5865),to_integer(unsigned('0' & zext_ln275_fu_4663_p1(4-1 downto 0)))));
    or_ln192_10_fu_2457_p2 <= (voxel_bit_34_reg_5282 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);
    or_ln192_11_fu_2477_p2 <= (or_ln192_9_fu_2471_p2 or or_ln192_10_fu_2457_p2);
    or_ln192_12_fu_2483_p2 <= (voxel_bit_33_reg_5230 or or_ln192_11_fu_2477_p2);
    or_ln192_14_fu_2936_p2 <= (voxel_bit_46_reg_5444 or voxel_bit_45_reg_5407);
    or_ln192_15_fu_2940_p2 <= (voxel_bit_44_reg_5370 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);
    or_ln192_16_fu_2945_p2 <= (or_ln192_15_fu_2940_p2 or or_ln192_14_fu_2936_p2);
    or_ln192_17_fu_2931_p2 <= (voxel_bit_42_reg_5438 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);
    or_ln192_18_fu_2951_p2 <= (or_ln192_17_fu_2931_p2 or or_ln192_16_fu_2945_p2);
    or_ln192_19_fu_2957_p2 <= (voxel_bit_41_reg_5401 or or_ln192_18_fu_2951_p2);
    or_ln192_1_fu_2042_p2 <= (voxel_bit_26_reg_5136 or or_ln192_3_fu_2036_p2);
    or_ln192_21_fu_3374_p2 <= (voxel_bit_54_reg_5600 or voxel_bit_53_reg_5573);
    or_ln192_22_fu_3378_p2 <= (voxel_bit_52_reg_5536 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);
    or_ln192_23_fu_3383_p2 <= (or_ln192_22_fu_3378_p2 or or_ln192_21_fu_3374_p2);
    or_ln192_24_fu_3369_p2 <= (voxel_bit_50_reg_5594 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);
    or_ln192_25_fu_3389_p2 <= (or_ln192_24_fu_3369_p2 or or_ln192_23_fu_3383_p2);
    or_ln192_26_fu_3395_p2 <= (voxel_bit_49_reg_5567 or or_ln192_25_fu_3389_p2);
    or_ln192_2_fu_2047_p2 <= (voxel_bit_29_reg_5120 or or_ln192_1_fu_2042_p2);
    or_ln192_3_fu_2036_p2 <= (streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0 or or_ln192_fu_2031_p2);
    or_ln192_4_fu_2052_p2 <= (voxel_bit_28_reg_5098 or or_ln192_2_fu_2047_p2);
    or_ln192_5_fu_2057_p2 <= (voxel_bit_25_reg_5104 or or_ln192_4_fu_2052_p2);
    or_ln192_7_fu_2462_p2 <= (voxel_bit_38_reg_5288 or voxel_bit_37_reg_5236);
    or_ln192_8_fu_2466_p2 <= (voxel_bit_36_reg_5188 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_q0);
    or_ln192_9_fu_2471_p2 <= (or_ln192_8_fu_2466_p2 or or_ln192_7_fu_2462_p2);
    or_ln192_fu_2031_p2 <= (voxel_bit_30_reg_5142 or streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_q0);
    or_ln236_1_fu_3970_p2 <= (streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0 or l1_bit_6_reg_5684);
    or_ln236_3_fu_4214_p2 <= (l1_bit_8_reg_5729 or l1_bit_10_reg_5761);
    or_ln236_4_fu_4218_p2 <= (streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_q0 or l1_bit_9_reg_5745);
    or_ln236_fu_3975_p2 <= (or_ln236_1_fu_3970_p2 or l1_bit_5_reg_5668);
    or_ln286_6_fu_4781_p6 <= ((((add_ln286_2_fu_4775_p2 & l0_write_pos) & l1_write_pos) & l2_write_pos_loc_1_reg_1045) & ap_const_lv32_1);
    retained_blocks_stream_full_n <= ap_const_logic_1;
    select_ln111_1_fu_1325_p3 <= 
        add_ln111_fu_1313_p2 when (icmp_ln112_fu_1319_p2(0) = '1') else 
        z_fu_298;
    select_ln111_fu_1374_p3 <= 
        ap_const_lv4_0 when (icmp_ln112_reg_4899(0) = '1') else 
        y_fu_290;
    select_ln112_1_fu_1345_p3 <= 
        ap_const_lv8_1 when (icmp_ln112_fu_1319_p2(0) = '1') else 
        add_ln112_1_fu_1339_p2;
    select_ln112_fu_1417_p3 <= 
        add_ln112_fu_1398_p2 when (and_ln111_fu_1392_p2(0) = '1') else 
        select_ln111_fu_1374_p3;
    select_ln118_1_fu_1558_p3 <= 
        add_ln118_fu_1520_p2 when (icmp_ln119_fu_1526_p2(0) = '1') else 
        z_1_fu_318;
    select_ln118_fu_1532_p3 <= 
        ap_const_lv3_0 when (icmp_ln119_fu_1526_p2(0) = '1') else 
        y_2_fu_310;
    select_ln119_1_fu_1616_p3 <= 
        ap_const_lv6_1 when (icmp_ln119_fu_1526_p2(0) = '1') else 
        add_ln119_1_fu_1610_p2;
    select_ln119_fu_1586_p3 <= 
        add_ln119_fu_1566_p2 when (and_ln118_fu_1552_p2(0) = '1') else 
        select_ln118_fu_1532_p3;
    select_ln125_fu_1734_p3 <= 
        add_ln125_fu_1710_p2 when (icmp_ln126_fu_1716_p2(0) = '1') else 
        y_1_fu_330;
    select_ln126_fu_1759_p3 <= 
        ap_const_lv2_2 when (and_ln125_fu_1728_p2(0) = '1') else 
        ap_const_lv2_1;
    select_ln255_fu_4557_p3 <= 
        add_ln2601_fu_366 when (icmp_ln260_reg_5849(0) = '1') else 
        l2_bit_pos_1_fu_358;
    select_ln258_1_fu_4564_p3 <= 
        add_ln2601_fu_366 when (icmp_ln260_reg_5849(0) = '1') else 
        l2_bit_pos_fu_370;
    select_ln258_fu_4497_p3 <= 
        add_ln258_fu_4473_p2 when (icmp_ln260_fu_4479_p2(0) = '1') else 
        l2_y_1_fu_374;
    select_ln260_fu_4522_p3 <= 
        ap_const_lv2_2 when (and_ln255_fu_4491_p2(0) = '1') else 
        ap_const_lv2_1;
    shl_ln241_fu_3948_p2 <= std_logic_vector(shift_left(unsigned(l2_y_2_reg_5623),to_integer(unsigned('0' & ap_const_lv2_1(2-1 downto 0)))));

    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage6, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage9, ap_CS_fsm_pp4_stage12, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage4, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage10, ap_CS_fsm_pp4_stage11, ap_CS_fsm_pp4_stage13, ap_CS_fsm_pp4_stage14, ap_CS_fsm_pp4_stage15, ap_enable_reg_pp0_iter2, zext_ln114_1_fu_1463_p1, ap_block_pp0_stage0, zext_ln150_fu_1878_p1, ap_block_pp3_stage0_grp0, zext_ln188_fu_1953_p1, ap_block_pp4_stage0, zext_ln188_1_fu_1974_p1, ap_block_pp4_stage1, zext_ln188_8_fu_1987_p1, ap_block_pp4_stage2, zext_ln188_9_fu_2000_p1, ap_block_pp4_stage3, ap_block_pp4_stage4, zext_ln188_2_fu_2025_p1, zext_ln188_3_fu_2075_p1, ap_block_pp4_stage5, zext_ln188_10_fu_2088_p1, ap_block_pp4_stage6, zext_ln188_11_fu_2143_p1, ap_block_pp4_stage7, ap_block_pp4_stage8, zext_ln188_4_fu_2416_p1, zext_ln188_5_fu_2501_p1, ap_block_pp4_stage9, zext_ln188_12_fu_2579_p1, ap_block_pp4_stage10, zext_ln188_13_fu_2748_p1, ap_block_pp4_stage11, ap_block_pp4_stage12, zext_ln188_6_fu_2876_p1, zext_ln188_7_fu_3017_p1, ap_block_pp4_stage13, zext_ln188_14_fu_3186_p1, ap_block_pp4_stage14, zext_ln188_15_fu_3302_p1, ap_block_pp4_stage15)
    begin
        if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_15_fu_3302_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage14) and (ap_const_boolean_0 = ap_block_pp4_stage14))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_14_fu_3186_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_7_fu_3017_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_6_fu_2876_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage11) and (ap_const_boolean_0 = ap_block_pp4_stage11))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_13_fu_2748_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_12_fu_2579_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_5_fu_2501_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_4_fu_2416_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage7) and (ap_const_boolean_0 = ap_block_pp4_stage7))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_11_fu_2143_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_10_fu_2088_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage5) and (ap_const_boolean_0 = ap_block_pp4_stage5))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_3_fu_2075_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_2_fu_2025_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_9_fu_2000_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_8_fu_1987_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_1_fu_1974_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln188_fu_1953_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_grp0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln150_fu_1878_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= zext_ln114_1_fu_1463_p1(6 - 1 downto 0);
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_address0_local <= "XXXXXX";
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage6, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter0_reg, ap_block_pp4_stage6_11001, ap_CS_fsm_pp4_stage9, ap_block_pp4_stage9_11001, ap_CS_fsm_pp4_stage12, ap_block_pp4_stage12_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage2_11001, ap_CS_fsm_pp4_stage3, ap_block_pp4_stage3_11001, ap_CS_fsm_pp4_stage4, ap_block_pp4_stage4_11001, ap_CS_fsm_pp4_stage5, ap_block_pp4_stage5_11001, ap_CS_fsm_pp4_stage7, ap_block_pp4_stage7_11001, ap_CS_fsm_pp4_stage8, ap_block_pp4_stage8_11001, ap_CS_fsm_pp4_stage10, ap_block_pp4_stage10_11001, ap_CS_fsm_pp4_stage11, ap_block_pp4_stage11_11001, ap_CS_fsm_pp4_stage13, ap_block_pp4_stage13_11001, ap_CS_fsm_pp4_stage14, ap_block_pp4_stage14_11001, ap_CS_fsm_pp4_stage15, ap_block_pp4_stage15_11001, ap_enable_reg_pp0_iter2, ap_block_pp3_stage0_11001_grp0, ap_block_pp3_stage0_subdone_grp0_done_reg)
    begin
        if ((((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage14) and (ap_const_boolean_0 = ap_block_pp4_stage14_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage11) and (ap_const_boolean_0 = ap_block_pp4_stage11_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage7) 
    and (ap_const_boolean_0 = ap_block_pp4_stage7_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage5) and (ap_const_boolean_0 = ap_block_pp4_stage5_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp0)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local <= ap_const_logic_1;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, voxel_occupancy_reg_4998, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp3_stage0_grp0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_grp0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local <= voxel_occupancy_reg_4998;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local <= ap_const_lv1_0;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_d0_local <= "X";
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0_11001, cond388_i_reg_4906_pp0_iter1_reg, tmp_3_reg_5010, ap_enable_reg_pp0_iter2, ap_block_pp3_stage0_11001_grp0, ap_block_pp3_stage0_subdone_grp0_done_reg)
    begin
        if ((((tmp_3_reg_5010 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (cond388_i_reg_4906_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local <= ap_const_logic_1;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage6, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage9, ap_CS_fsm_pp4_stage12, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage1, ap_CS_fsm_pp4_stage2, ap_CS_fsm_pp4_stage3, ap_CS_fsm_pp4_stage4, ap_CS_fsm_pp4_stage5, ap_CS_fsm_pp4_stage7, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp4_stage10, ap_CS_fsm_pp4_stage11, ap_CS_fsm_pp4_stage13, ap_CS_fsm_pp4_stage14, ap_CS_fsm_pp4_stage15, ap_enable_reg_pp0_iter2, zext_ln114_1_fu_1463_p1, ap_block_pp0_stage0, zext_ln150_fu_1878_p1, ap_block_pp3_stage0_grp0, zext_ln188_fu_1953_p1, ap_block_pp4_stage0, zext_ln188_1_fu_1974_p1, ap_block_pp4_stage1, zext_ln188_8_fu_1987_p1, ap_block_pp4_stage2, zext_ln188_9_fu_2000_p1, ap_block_pp4_stage3, ap_block_pp4_stage4, zext_ln188_2_fu_2025_p1, zext_ln188_3_fu_2075_p1, ap_block_pp4_stage5, zext_ln188_10_fu_2088_p1, ap_block_pp4_stage6, zext_ln188_11_fu_2143_p1, ap_block_pp4_stage7, ap_block_pp4_stage8, zext_ln188_4_fu_2416_p1, zext_ln188_5_fu_2501_p1, ap_block_pp4_stage9, zext_ln188_12_fu_2579_p1, ap_block_pp4_stage10, zext_ln188_13_fu_2748_p1, ap_block_pp4_stage11, ap_block_pp4_stage12, zext_ln188_6_fu_2876_p1, zext_ln188_7_fu_3017_p1, ap_block_pp4_stage13, zext_ln188_14_fu_3186_p1, ap_block_pp4_stage14, zext_ln188_15_fu_3302_p1, ap_block_pp4_stage15)
    begin
        if (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_15_fu_3302_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage14) and (ap_const_boolean_0 = ap_block_pp4_stage14))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_14_fu_3186_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_7_fu_3017_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_6_fu_2876_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage11) and (ap_const_boolean_0 = ap_block_pp4_stage11))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_13_fu_2748_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_12_fu_2579_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_5_fu_2501_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_4_fu_2416_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage7) and (ap_const_boolean_0 = ap_block_pp4_stage7))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_11_fu_2143_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_10_fu_2088_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage5) and (ap_const_boolean_0 = ap_block_pp4_stage5))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_3_fu_2075_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_2_fu_2025_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_9_fu_2000_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_8_fu_1987_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_1_fu_1974_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln188_fu_1953_p1(6 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_grp0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln150_fu_1878_p1(6 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= zext_ln114_1_fu_1463_p1(6 - 1 downto 0);
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_address0_local <= "XXXXXX";
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_CS_fsm_pp4_stage6, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter0_reg, ap_block_pp4_stage6_11001, ap_CS_fsm_pp4_stage9, ap_block_pp4_stage9_11001, ap_CS_fsm_pp4_stage12, ap_block_pp4_stage12_11001, ap_block_pp0_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage1, ap_block_pp4_stage1_11001, ap_CS_fsm_pp4_stage2, ap_block_pp4_stage2_11001, ap_CS_fsm_pp4_stage3, ap_block_pp4_stage3_11001, ap_CS_fsm_pp4_stage4, ap_block_pp4_stage4_11001, ap_CS_fsm_pp4_stage5, ap_block_pp4_stage5_11001, ap_CS_fsm_pp4_stage7, ap_block_pp4_stage7_11001, ap_CS_fsm_pp4_stage8, ap_block_pp4_stage8_11001, ap_CS_fsm_pp4_stage10, ap_block_pp4_stage10_11001, ap_CS_fsm_pp4_stage11, ap_block_pp4_stage11_11001, ap_CS_fsm_pp4_stage13, ap_block_pp4_stage13_11001, ap_CS_fsm_pp4_stage14, ap_block_pp4_stage14_11001, ap_CS_fsm_pp4_stage15, ap_block_pp4_stage15_11001, ap_enable_reg_pp0_iter2, ap_block_pp3_stage0_11001_grp0, ap_block_pp3_stage0_subdone_grp0_done_reg)
    begin
        if ((((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage15) and (ap_const_boolean_0 = ap_block_pp4_stage15_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage14) and (ap_const_boolean_0 = ap_block_pp4_stage14_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage13) and (ap_const_boolean_0 = ap_block_pp4_stage13_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage11) and (ap_const_boolean_0 = ap_block_pp4_stage11_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage10) and (ap_const_boolean_0 = ap_block_pp4_stage10_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage7) 
    and (ap_const_boolean_0 = ap_block_pp4_stage7_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage5) and (ap_const_boolean_0 = ap_block_pp4_stage5_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage3) and (ap_const_boolean_0 = ap_block_pp4_stage3_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage2) and (ap_const_boolean_0 = ap_block_pp4_stage2_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage1) and (ap_const_boolean_0 = ap_block_pp4_stage1_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp4_stage9) and (ap_const_boolean_0 = ap_block_pp4_stage9_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage6) and (ap_const_boolean_0 = ap_block_pp4_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp0)) or ((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local <= ap_const_logic_1;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, voxel_occupancy_reg_4998, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, ap_block_pp3_stage0_grp0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_grp0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local <= voxel_occupancy_reg_4998;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local <= ap_const_lv1_0;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_d0_local <= "X";
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0_11001, cond388_i_reg_4906_pp0_iter1_reg, tmp_3_reg_5010, ap_enable_reg_pp0_iter2, ap_block_pp3_stage0_11001_grp0, ap_block_pp3_stage0_subdone_grp0_done_reg)
    begin
        if ((((tmp_3_reg_5010 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (cond388_i_reg_4906_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local <= ap_const_logic_1;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local_assign_proc : process(ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage12, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage4, ap_CS_fsm_pp4_stage8, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp5_stage1, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage2, ap_CS_fsm_pp5_stage3, ap_CS_fsm_pp5_stage4, ap_CS_fsm_pp5_stage5, ap_CS_fsm_pp5_stage6, ap_CS_fsm_pp5_stage7, ap_enable_reg_pp1_iter1, ap_enable_reg_pp4_iter1, zext_ln121_1_fu_1665_p1, ap_block_pp1_stage0, ap_block_pp4_stage0, zext_ln198_fu_2013_p1, ap_block_pp4_stage4, zext_ln198_1_fu_2404_p1, ap_block_pp4_stage8, zext_ln198_2_fu_2864_p1, ap_block_pp4_stage12, zext_ln198_3_fu_3364_p1, zext_ln232_fu_3894_p1, ap_block_pp5_stage0, zext_ln232_1_fu_3906_p1, ap_block_pp5_stage1, zext_ln232_4_fu_3926_p1, ap_block_pp5_stage2, zext_ln232_5_fu_3943_p1, ap_block_pp5_stage3, ap_block_pp5_stage4, zext_ln232_2_fu_3965_p1, zext_ln232_3_fu_3993_p1, ap_block_pp5_stage5, zext_ln232_6_fu_4139_p1, ap_block_pp5_stage6, zext_ln232_7_fu_4186_p1, ap_block_pp5_stage7)
    begin
        if (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage7) and (ap_const_boolean_0 = ap_block_pp5_stage7))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_7_fu_4186_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage6) and (ap_const_boolean_0 = ap_block_pp5_stage6))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_6_fu_4139_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage5) and (ap_const_boolean_0 = ap_block_pp5_stage5))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_3_fu_3993_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_2_fu_3965_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_5_fu_3943_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_4_fu_3926_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 = ap_block_pp5_stage1))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_1_fu_3906_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln232_fu_3894_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln198_3_fu_3364_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln198_2_fu_2864_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln198_1_fu_2404_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln198_fu_2013_p1(4 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= zext_ln121_1_fu_1665_p1(4 - 1 downto 0);
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_address0_local <= "XXXX";
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local_assign_proc : process(ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage12, ap_block_pp4_stage12_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage4, ap_block_pp4_stage4_11001, ap_CS_fsm_pp4_stage8, ap_block_pp4_stage8_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp5_stage1, ap_block_pp5_stage1_11001, ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter0_reg, ap_CS_fsm_pp5_stage2, ap_block_pp5_stage2_11001, ap_CS_fsm_pp5_stage3, ap_block_pp5_stage3_11001, ap_CS_fsm_pp5_stage4, ap_block_pp5_stage4_11001, ap_CS_fsm_pp5_stage5, ap_block_pp5_stage5_11001, ap_CS_fsm_pp5_stage6, ap_block_pp5_stage6_11001, ap_CS_fsm_pp5_stage7, ap_block_pp5_stage7_11001, ap_enable_reg_pp1_iter1, ap_enable_reg_pp4_iter1)
    begin
        if ((((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage7) and (ap_const_boolean_0 = ap_block_pp5_stage7_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage6) and (ap_const_boolean_0 = ap_block_pp5_stage6_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage5) and (ap_const_boolean_0 = ap_block_pp5_stage5_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage4) and (ap_const_boolean_0 = ap_block_pp5_stage4_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage3) and (ap_const_boolean_0 = ap_block_pp5_stage3_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage2) and (ap_const_boolean_0 = ap_block_pp5_stage2_11001)) or ((ap_enable_reg_pp5_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage1) and (ap_const_boolean_0 
    = ap_block_pp5_stage1_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001)) or ((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001)) or ((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0_11001)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local <= ap_const_logic_1;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local_assign_proc : process(ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage12, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp4_stage4, l1_has_data_1_fu_2062_p2, ap_CS_fsm_pp4_stage8, l1_has_data_2_fu_2488_p2, l1_has_data_3_fu_2962_p2, ap_enable_reg_pp1_iter1, ap_enable_reg_pp4_iter1, l1_has_data_4_fu_3400_p2, ap_block_pp1_stage0, ap_block_pp4_stage0, ap_block_pp4_stage4, ap_block_pp4_stage8, ap_block_pp4_stage12)
    begin
        if (((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local <= l1_has_data_4_fu_3400_p2;
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local <= l1_has_data_3_fu_2962_p2;
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local <= l1_has_data_2_fu_2488_p2;
        elsif (((ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local <= l1_has_data_1_fu_2062_p2;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local <= ap_const_lv1_0;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_d0_local <= "X";
        end if; 
    end process;


    streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local_assign_proc : process(ap_enable_reg_pp4_iter0_reg, ap_CS_fsm_pp4_stage12, ap_block_pp4_stage12_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, cond389_i_reg_4963, icmp_ln166_reg_5038, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp4_stage4, ap_block_pp4_stage4_11001, ap_CS_fsm_pp4_stage8, ap_block_pp4_stage8_11001, ap_enable_reg_pp1_iter1, ap_enable_reg_pp4_iter1)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (cond389_i_reg_4963 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_11001)) or ((icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage8) and (ap_const_boolean_0 = ap_block_pp4_stage8_11001)) or ((icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage4) and (ap_const_boolean_0 = ap_block_pp4_stage4_11001)) or ((icmp_ln166_reg_5038 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter0_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage12) and (ap_const_boolean_0 = ap_block_pp4_stage12_11001)))) then 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local <= ap_const_logic_1;
        else 
            streaming_bitmap_constructor_stream_stream_stream_stream_stream_ap_uint_ap_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln150_10_fu_2321_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_12_fu_2317_p1));
    sub_ln150_11_fu_2343_p2 <= std_logic_vector(signed(ap_const_lv9_1FA) - signed(trunc_ln150_reg_5204));
    sub_ln150_12_fu_2352_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_14_fu_2348_p1));
    sub_ln150_13_fu_2374_p2 <= std_logic_vector(signed(ap_const_lv9_1F9) - signed(trunc_ln150_reg_5204));
    sub_ln150_14_fu_2383_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_16_fu_2379_p1));
    sub_ln150_15_fu_2538_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_8_fu_2530_p1));
    sub_ln150_16_fu_2548_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_18_fu_2544_p1));
    sub_ln150_17_fu_2609_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_20_fu_2605_p1));
    sub_ln150_18_fu_2643_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) - signed(trunc_ln150_8_reg_5338));
    sub_ln150_19_fu_2652_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_22_fu_2648_p1));
    sub_ln150_1_fu_2112_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_2_fu_2108_p1));
    sub_ln150_20_fu_2687_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) - signed(trunc_ln150_8_reg_5338));
    sub_ln150_21_fu_2696_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_24_fu_2692_p1));
    sub_ln150_22_fu_2718_p2 <= std_logic_vector(signed(ap_const_lv9_1FC) - signed(trunc_ln150_8_reg_5338));
    sub_ln150_23_fu_2727_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_26_fu_2723_p1));
    sub_ln150_24_fu_2785_p2 <= std_logic_vector(signed(ap_const_lv9_1FB) - signed(trunc_ln150_8_reg_5338));
    sub_ln150_25_fu_2794_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_28_fu_2790_p1));
    sub_ln150_26_fu_2829_p2 <= std_logic_vector(signed(ap_const_lv9_1FA) - signed(trunc_ln150_8_reg_5338));
    sub_ln150_27_fu_2838_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_30_fu_2834_p1));
    sub_ln150_28_fu_2852_p2 <= std_logic_vector(signed(ap_const_lv9_1F9) - signed(trunc_ln150_8_reg_5338));
    sub_ln150_29_fu_2904_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_32_fu_2901_p1));
    sub_ln150_2_fu_2172_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_4_fu_2168_p1));
    sub_ln150_30_fu_4006_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_16_fu_3998_p1));
    sub_ln150_31_fu_4016_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_34_fu_4012_p1));
    sub_ln150_32_fu_4048_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_36_fu_4044_p1));
    sub_ln150_33_fu_4070_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) - signed(trunc_ln150_16_fu_3998_p1));
    sub_ln150_34_fu_4080_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_38_fu_4076_p1));
    sub_ln150_35_fu_4102_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) - signed(trunc_ln150_16_fu_3998_p1));
    sub_ln150_36_fu_4112_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_40_fu_4108_p1));
    sub_ln150_37_fu_2976_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_20_fu_2968_p1));
    sub_ln150_38_fu_2986_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_42_fu_2982_p1));
    sub_ln150_39_fu_3047_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_44_fu_3043_p1));
    sub_ln150_3_fu_2206_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) - signed(trunc_ln150_reg_5204));
    sub_ln150_40_fu_3081_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) - signed(trunc_ln150_20_reg_5479));
    sub_ln150_41_fu_3090_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_46_fu_3086_p1));
    sub_ln150_42_fu_3125_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) - signed(trunc_ln150_20_reg_5479));
    sub_ln150_43_fu_3134_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_48_fu_3130_p1));
    sub_ln150_44_fu_3156_p2 <= std_logic_vector(signed(ap_const_lv9_1FC) - signed(trunc_ln150_20_reg_5479));
    sub_ln150_45_fu_3165_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_50_fu_3161_p1));
    sub_ln150_46_fu_3223_p2 <= std_logic_vector(signed(ap_const_lv9_1FB) - signed(trunc_ln150_20_reg_5479));
    sub_ln150_47_fu_3232_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_52_fu_3228_p1));
    sub_ln150_48_fu_3267_p2 <= std_logic_vector(signed(ap_const_lv9_1FA) - signed(trunc_ln150_20_reg_5479));
    sub_ln150_49_fu_3276_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_54_fu_3272_p1));
    sub_ln150_4_fu_2215_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_6_fu_2211_p1));
    sub_ln150_50_fu_3290_p2 <= std_logic_vector(signed(ap_const_lv9_1F9) - signed(trunc_ln150_20_reg_5479));
    sub_ln150_51_fu_3330_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_56_fu_3327_p1));
    sub_ln150_52_fu_4238_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_28_fu_4230_p1));
    sub_ln150_53_fu_4248_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_58_fu_4244_p1));
    sub_ln150_54_fu_4293_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_60_fu_4289_p1));
    sub_ln150_55_fu_4315_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) - signed(trunc_ln150_28_fu_4230_p1));
    sub_ln150_56_fu_4325_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_62_fu_4321_p1));
    sub_ln150_57_fu_4347_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) - signed(trunc_ln150_28_fu_4230_p1));
    sub_ln150_58_fu_4357_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_64_fu_4353_p1));
    sub_ln150_59_fu_3414_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_32_fu_3406_p1));
    sub_ln150_5_fu_2250_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) - signed(trunc_ln150_reg_5204));
    sub_ln150_60_fu_3424_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_66_fu_3420_p1));
    sub_ln150_61_fu_3469_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_68_fu_3465_p1));
    sub_ln150_62_fu_3518_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) - signed(trunc_ln150_32_fu_3406_p1));
    sub_ln150_63_fu_3528_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_70_fu_3524_p1));
    sub_ln150_64_fu_3577_p2 <= std_logic_vector(signed(ap_const_lv9_1FD) - signed(trunc_ln150_32_fu_3406_p1));
    sub_ln150_65_fu_3587_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_72_fu_3583_p1));
    sub_ln150_66_fu_3637_p2 <= std_logic_vector(signed(ap_const_lv9_1FC) - signed(trunc_ln150_32_fu_3406_p1));
    sub_ln150_67_fu_3647_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_74_fu_3643_p1));
    sub_ln150_68_fu_3696_p2 <= std_logic_vector(signed(ap_const_lv9_1FB) - signed(trunc_ln150_32_fu_3406_p1));
    sub_ln150_69_fu_3706_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_76_fu_3702_p1));
    sub_ln150_6_fu_2259_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_8_fu_2255_p1));
    sub_ln150_70_fu_3755_p2 <= std_logic_vector(signed(ap_const_lv9_1FA) - signed(trunc_ln150_32_fu_3406_p1));
    sub_ln150_71_fu_3765_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_78_fu_3761_p1));
    sub_ln150_72_fu_3814_p2 <= std_logic_vector(signed(ap_const_lv9_1F9) - signed(trunc_ln150_32_fu_3406_p1));
    sub_ln150_73_fu_3824_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_80_fu_3820_p1));
    sub_ln150_74_fu_4702_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_40_fu_4698_p1));
    sub_ln150_75_fu_4722_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_82_fu_4719_p1));
    sub_ln150_7_fu_2281_p2 <= std_logic_vector(signed(ap_const_lv9_1FC) - signed(trunc_ln150_reg_5204));
    sub_ln150_8_fu_2290_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(zext_ln150_10_fu_2286_p1));
    sub_ln150_9_fu_2312_p2 <= std_logic_vector(signed(ap_const_lv9_1FB) - signed(trunc_ln150_reg_5204));
    sub_ln150_fu_2102_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln150_fu_2094_p1));
        tmp_101_fu_4403_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_31_reg_5791),32));

        tmp_103_fu_3442_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_32_fu_3430_p3),32));

        tmp_105_fu_3487_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_33_fu_3475_p3),32));

    tmp_106_fu_3502_p3 <= add_ln205_22_fu_3496_p2(31 downto 31);
        tmp_107_fu_3546_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_34_fu_3534_p3),32));

    tmp_108_fu_3561_p3 <= add_ln205_23_fu_3555_p2(31 downto 31);
        tmp_109_fu_3605_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_35_fu_3593_p3),32));

    tmp_10_fu_1967_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_1);
    tmp_110_fu_3621_p3 <= add_ln205_24_fu_3615_p2(31 downto 31);
        tmp_111_fu_3665_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_36_fu_3653_p3),32));

    tmp_112_fu_3680_p3 <= add_ln205_25_fu_3674_p2(31 downto 31);
        tmp_113_fu_3724_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_37_fu_3712_p3),32));

    tmp_114_fu_3739_p3 <= add_ln205_26_fu_3733_p2(31 downto 31);
        tmp_115_fu_3783_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_38_fu_3771_p3),32));

    tmp_116_fu_3798_p3 <= add_ln205_27_fu_3792_p2(31 downto 31);
        tmp_117_fu_3842_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_39_fu_3830_p3),32));

        tmp_119_fu_4739_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_40_fu_4728_p3),32));

    tmp_11_fu_2018_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_2);
    tmp_12_fu_2068_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_3);
    tmp_13_fu_2409_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_4);
    tmp_14_fu_2494_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_5);
    tmp_15_fu_2869_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_6);
    tmp_16_fu_3010_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_7);
    tmp_17_fu_1980_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_8);
    tmp_18_fu_1993_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_9);
    tmp_19_fu_2081_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_A);
    tmp_1_fu_1429_p3 <= (empty_81_fu_1425_p1 & ap_const_lv3_0);
    tmp_20_fu_2136_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_B);
    tmp_21_fu_2572_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_C);
    tmp_22_fu_2741_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_D);
    tmp_23_fu_3179_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_E);
    tmp_24_fu_3295_p3 <= (trunc_ln166_reg_5042 & ap_const_lv4_F);
        tmp_27_fu_2152_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_reg_5215),32));

        tmp_29_fu_2189_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_1_fu_2178_p3),32));

    tmp_2_fu_1792_p3 <= voxel_count(9 downto 9);
        tmp_31_fu_2233_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_2_fu_2221_p3),32));

        tmp_33_fu_2425_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_3_reg_5257),32));

        tmp_35_fu_2436_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_4_reg_5262),32));

        tmp_37_fu_2448_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_5_reg_5267),32));

        tmp_39_fu_2510_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_6_reg_5272),32));

        tmp_41_fu_2521_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_7_reg_5277),32));

    tmp_42_fu_4202_p3 <= (trunc_ln213_reg_5633 & ap_const_lv1_1);
    tmp_43_nbwritereq_fu_455_p3 <= (0=>ap_const_logic_1, others=>'-');
    tmp_44_nbwritereq_fu_463_p3 <= (0=>ap_const_logic_1, others=>'-');
    tmp_45_fu_3886_p3 <= (trunc_ln213_fu_3882_p1 & ap_const_lv3_0);
    tmp_46_fu_3899_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_1);
    tmp_47_fu_3958_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_2);
    tmp_48_fu_3986_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_3);
    tmp_49_fu_3919_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_4);
    tmp_4_fu_1854_p3 <= (y_3_fu_1836_p4 & ap_const_lv3_0);
    tmp_50_fu_3936_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_5);
    tmp_51_fu_4132_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_6);
    tmp_52_fu_4179_p3 <= (trunc_ln213_reg_5633 & ap_const_lv3_7);
        tmp_54_fu_2588_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_8_reg_5349),32));

        tmp_56_fu_2626_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_9_fu_2615_p3),32));

        tmp_58_fu_2670_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_10_fu_2658_p3),32));

    tmp_5_fu_2006_p3 <= (trunc_ln166_reg_5042 & ap_const_lv2_0);
        tmp_60_fu_2757_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_11_reg_5391),32));

        tmp_62_fu_2768_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_12_reg_5396),32));

        tmp_64_fu_2812_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_13_fu_2800_p3),32));

        tmp_66_fu_2885_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_14_reg_5428),32));

        tmp_68_fu_2922_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_15_fu_2910_p3),32));

    tmp_6_fu_2397_p3 <= (trunc_ln166_reg_5042 & ap_const_lv2_1);
        tmp_70_fu_4147_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_16_reg_5709),32));

        tmp_72_fu_4158_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_17_reg_5714),32));

        tmp_74_fu_4170_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_18_reg_5719),32));

        tmp_76_fu_4194_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_19_reg_5724),32));

        tmp_78_fu_3026_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_20_reg_5490),32));

    tmp_7_fu_2857_p3 <= (trunc_ln166_reg_5042 & ap_const_lv2_2);
        tmp_80_fu_3064_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_21_fu_3053_p3),32));

        tmp_82_fu_3108_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_22_fu_3096_p3),32));

        tmp_84_fu_3195_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_23_reg_5520),32));

        tmp_86_fu_3206_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_24_reg_5525),32));

        tmp_88_fu_3250_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_25_fu_3238_p3),32));

    tmp_8_fu_3357_p3 <= (trunc_ln166_reg_5042 & ap_const_lv2_3);
        tmp_90_fu_3311_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_26_reg_5557),32));

        tmp_92_fu_3348_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_27_fu_3336_p3),32));

    
    tmp_93_fu_4630_p4_proc : process(p_read, l3_has_data_1_reg_1010)
    begin
        tmp_93_fu_4630_p4 <= p_read;
        tmp_93_fu_4630_p4(0) <= l3_has_data_1_reg_1010(0);
    end process;

        tmp_95_fu_4266_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_28_fu_4254_p3),32));

        tmp_97_fu_4380_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_29_reg_5781),32));

        tmp_99_fu_4391_p2 <= std_logic_vector(IEEE.numeric_std.resize(signed(bit_offset_30_reg_5786),32));

    tmp_9_fu_1945_p3 <= (trunc_ln166_fu_1941_p1 & ap_const_lv4_0);
    tmp_nbreadreq_fu_414_p3 <= (0=>(input_voxel_stream_empty_n), others=>'-');
    tmp_s_fu_1649_p3 <= (empty_84_reg_4958 & ap_const_lv2_0);
    trunc_ln125_fu_1706_p1 <= x_1_fu_326(1 - 1 downto 0);
    trunc_ln127_fu_1742_p1 <= select_ln125_fu_1734_p3(1 - 1 downto 0);
    trunc_ln150_10_fu_2635_p1 <= grp_fu_1151_p2(9 - 1 downto 0);
    trunc_ln150_11_fu_2679_p1 <= grp_fu_1165_p2(9 - 1 downto 0);
    trunc_ln150_12_fu_2710_p1 <= grp_fu_1179_p2(9 - 1 downto 0);
    trunc_ln150_13_fu_2777_p1 <= grp_fu_1193_p2(9 - 1 downto 0);
    trunc_ln150_14_fu_2821_p1 <= grp_fu_1207_p2(9 - 1 downto 0);
    trunc_ln150_15_fu_2893_p1 <= grp_fu_1221_p2(9 - 1 downto 0);
    trunc_ln150_16_fu_3998_p1 <= l1_write_pos(9 - 1 downto 0);
    trunc_ln150_17_fu_4030_p1 <= grp_fu_1099_p2(9 - 1 downto 0);
    trunc_ln150_18_fu_4062_p1 <= grp_fu_1113_p2(9 - 1 downto 0);
    trunc_ln150_19_fu_4094_p1 <= grp_fu_1127_p2(9 - 1 downto 0);
    trunc_ln150_1_fu_2126_p1 <= grp_fu_1067_p2(9 - 1 downto 0);
    trunc_ln150_20_fu_2968_p1 <= l0_write_pos(9 - 1 downto 0);
    trunc_ln150_21_fu_3000_p1 <= grp_fu_1067_p2(9 - 1 downto 0);
    trunc_ln150_22_fu_3073_p1 <= grp_fu_1151_p2(9 - 1 downto 0);
    trunc_ln150_23_fu_3117_p1 <= grp_fu_1165_p2(9 - 1 downto 0);
    trunc_ln150_24_fu_3148_p1 <= grp_fu_1179_p2(9 - 1 downto 0);
    trunc_ln150_25_fu_3215_p1 <= grp_fu_1193_p2(9 - 1 downto 0);
    trunc_ln150_26_fu_3259_p1 <= grp_fu_1207_p2(9 - 1 downto 0);
    trunc_ln150_27_fu_3319_p1 <= grp_fu_1221_p2(9 - 1 downto 0);
    trunc_ln150_28_fu_4230_p1 <= l1_write_pos(9 - 1 downto 0);
    trunc_ln150_29_fu_4275_p1 <= grp_fu_1099_p2(9 - 1 downto 0);
    trunc_ln150_2_fu_2198_p1 <= grp_fu_1151_p2(9 - 1 downto 0);
    trunc_ln150_30_fu_4307_p1 <= grp_fu_1113_p2(9 - 1 downto 0);
    trunc_ln150_31_fu_4339_p1 <= grp_fu_1127_p2(9 - 1 downto 0);
    trunc_ln150_32_fu_3406_p1 <= l0_write_pos(9 - 1 downto 0);
    trunc_ln150_33_fu_3451_p1 <= grp_fu_1067_p2(9 - 1 downto 0);
    trunc_ln150_34_fu_3510_p1 <= add_ln205_22_fu_3496_p2(9 - 1 downto 0);
    trunc_ln150_35_fu_3569_p1 <= add_ln205_23_fu_3555_p2(9 - 1 downto 0);
    trunc_ln150_36_fu_3629_p1 <= add_ln205_24_fu_3615_p2(9 - 1 downto 0);
    trunc_ln150_37_fu_3688_p1 <= add_ln205_25_fu_3674_p2(9 - 1 downto 0);
    trunc_ln150_38_fu_3747_p1 <= add_ln205_26_fu_3733_p2(9 - 1 downto 0);
    trunc_ln150_39_fu_3806_p1 <= add_ln205_27_fu_3792_p2(9 - 1 downto 0);
    trunc_ln150_3_fu_2242_p1 <= grp_fu_1165_p2(9 - 1 downto 0);
    trunc_ln150_40_fu_4698_p1 <= add_ln278_fu_4684_p2(9 - 1 downto 0);
    trunc_ln150_4_fu_2273_p1 <= grp_fu_1179_p2(9 - 1 downto 0);
    trunc_ln150_5_fu_2304_p1 <= grp_fu_1193_p2(9 - 1 downto 0);
    trunc_ln150_6_fu_2335_p1 <= grp_fu_1207_p2(9 - 1 downto 0);
    trunc_ln150_7_fu_2366_p1 <= grp_fu_1221_p2(9 - 1 downto 0);
    trunc_ln150_8_fu_2530_p1 <= l0_write_pos(9 - 1 downto 0);
    trunc_ln150_9_fu_2562_p1 <= grp_fu_1067_p2(9 - 1 downto 0);
    trunc_ln150_fu_2094_p1 <= l0_write_pos(9 - 1 downto 0);
    trunc_ln166_fu_1941_p1 <= l1_y_fu_338(2 - 1 downto 0);
    trunc_ln213_fu_3882_p1 <= l2_y_fu_346(1 - 1 downto 0);
    trunc_ln256_fu_4469_p1 <= l2_x_fu_362(1 - 1 downto 0);
    trunc_ln258_1_fu_4505_p1 <= select_ln258_fu_4497_p3(1 - 1 downto 0);
    trunc_ln258_fu_4626_p1 <= l2_complete_level_fu_354(4 - 1 downto 0);
    trunc_ln278_fu_4676_p1 <= i_fu_382(2 - 1 downto 0);
    voxel_occupancy_fu_1800_p1 <= input_voxel_stream_dout(1 - 1 downto 0);

    write_addr_stream_blk_n_assign_proc : process(write_addr_stream_full_n, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, voxel_occupancy_reg_4998, ap_block_pp3_stage0_grp2, ap_block_pp3_stage0_subdone_grp2_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_grp2))) then 
            write_addr_stream_blk_n <= write_addr_stream_full_n;
        else 
            write_addr_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    write_addr_stream_din <= voxel_morton_addr_reg_5004;

    write_addr_stream_write_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, voxel_occupancy_reg_4998, ap_block_pp3_stage0_subdone_grp2_done_reg, ap_block_pp3_stage0_11001_grp2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (voxel_occupancy_reg_4998 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001_grp2))) then 
            write_addr_stream_write <= ap_const_logic_1;
        else 
            write_addr_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    x_2_mid2_fu_1578_p3 <= 
        ap_const_lv3_0 when (empty_83_fu_1572_p2(0) = '1') else 
        x_2_fu_306;
    x_3_fu_1826_p4 <= input_voxel_stream_dout(1030 downto 1025);
    x_mid2_fu_1409_p3 <= 
        ap_const_lv4_0 when (empty_fu_1404_p2(0) = '1') else 
        x_fu_286;
    xor_ln111_fu_1381_p2 <= (icmp_ln112_reg_4899 xor ap_const_lv1_1);
    xor_ln118_fu_1540_p2 <= (icmp_ln119_fu_1526_p2 xor ap_const_lv1_1);
    xor_ln125_fu_1722_p2 <= (icmp_ln126_fu_1716_p2 xor ap_const_lv1_1);
    xor_ln150_1_fu_2600_p2 <= (trunc_ln150_8_reg_5338 xor ap_const_lv9_1FF);
    xor_ln150_2_fu_4038_p2 <= (trunc_ln150_16_fu_3998_p1 xor ap_const_lv9_1FF);
    xor_ln150_3_fu_3038_p2 <= (trunc_ln150_20_reg_5479 xor ap_const_lv9_1FF);
    xor_ln150_4_fu_4283_p2 <= (trunc_ln150_28_fu_4230_p1 xor ap_const_lv9_1FF);
    xor_ln150_5_fu_3459_p2 <= (trunc_ln150_32_fu_3406_p1 xor ap_const_lv9_1FF);
    xor_ln150_fu_2163_p2 <= (trunc_ln150_reg_5204 xor ap_const_lv9_1FF);
    xor_ln255_fu_4485_p2 <= (icmp_ln260_fu_4479_p2 xor ap_const_lv1_1);
    y_3_fu_1836_p4 <= input_voxel_stream_dout(1033 downto 1031);
    zext_ln114_1_fu_1463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln114_reg_4910),64));
    zext_ln114_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_mid2_fu_1409_p3),6));
    zext_ln121_1_fu_1665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_fu_1659_p2),64));
    zext_ln121_fu_1656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_2_mid2_reg_4953),4));
    zext_ln127_fu_1754_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_fu_1746_p3),64));
    zext_ln150_10_fu_2286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_7_fu_2281_p2),10));
    zext_ln150_11_fu_2308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_5_fu_2304_p1),10));
    zext_ln150_12_fu_2317_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_9_fu_2312_p2),10));
    zext_ln150_13_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_6_fu_2335_p1),10));
    zext_ln150_14_fu_2348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_11_fu_2343_p2),10));
    zext_ln150_15_fu_2370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_7_fu_2366_p1),10));
    zext_ln150_16_fu_2379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_13_fu_2374_p2),10));
    zext_ln150_17_fu_2534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_8_fu_2530_p1),10));
    zext_ln150_18_fu_2544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_15_fu_2538_p2),10));
    zext_ln150_19_fu_2597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_9_reg_5359),10));
    zext_ln150_1_fu_2098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_fu_2094_p1),10));
    zext_ln150_20_fu_2605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_1_fu_2600_p2),10));
    zext_ln150_21_fu_2639_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_10_fu_2635_p1),10));
    zext_ln150_22_fu_2648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_18_fu_2643_p2),10));
    zext_ln150_23_fu_2683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_11_fu_2679_p1),10));
    zext_ln150_24_fu_2692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_20_fu_2687_p2),10));
    zext_ln150_25_fu_2714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_12_fu_2710_p1),10));
    zext_ln150_26_fu_2723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_22_fu_2718_p2),10));
    zext_ln150_27_fu_2781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_13_fu_2777_p1),10));
    zext_ln150_28_fu_2790_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_24_fu_2785_p2),10));
    zext_ln150_29_fu_2825_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_14_fu_2821_p1),10));
    zext_ln150_2_fu_2108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_fu_2102_p2),10));
    zext_ln150_30_fu_2834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_26_fu_2829_p2),10));
    zext_ln150_31_fu_2897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_15_fu_2893_p1),10));
    zext_ln150_32_fu_2901_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_28_reg_5433),10));
    zext_ln150_33_fu_4002_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_16_fu_3998_p1),10));
    zext_ln150_34_fu_4012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_30_fu_4006_p2),10));
    zext_ln150_35_fu_4034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_17_fu_4030_p1),10));
    zext_ln150_36_fu_4044_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_2_fu_4038_p2),10));
    zext_ln150_37_fu_4066_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_18_fu_4062_p1),10));
    zext_ln150_38_fu_4076_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_33_fu_4070_p2),10));
    zext_ln150_39_fu_4098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_19_fu_4094_p1),10));
    zext_ln150_3_fu_2160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_1_reg_5225),10));
    zext_ln150_40_fu_4108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_35_fu_4102_p2),10));
    zext_ln150_41_fu_2972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_20_fu_2968_p1),10));
    zext_ln150_42_fu_2982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_37_fu_2976_p2),10));
    zext_ln150_43_fu_3035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_21_reg_5500),10));
    zext_ln150_44_fu_3043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_3_fu_3038_p2),10));
    zext_ln150_45_fu_3077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_22_fu_3073_p1),10));
    zext_ln150_46_fu_3086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_40_fu_3081_p2),10));
    zext_ln150_47_fu_3121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_23_fu_3117_p1),10));
    zext_ln150_48_fu_3130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_42_fu_3125_p2),10));
    zext_ln150_49_fu_3152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_24_fu_3148_p1),10));
    zext_ln150_4_fu_2168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_fu_2163_p2),10));
    zext_ln150_50_fu_3161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_44_fu_3156_p2),10));
    zext_ln150_51_fu_3219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_25_fu_3215_p1),10));
    zext_ln150_52_fu_3228_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_46_fu_3223_p2),10));
    zext_ln150_53_fu_3263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_26_fu_3259_p1),10));
    zext_ln150_54_fu_3272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_48_fu_3267_p2),10));
    zext_ln150_55_fu_3323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_27_fu_3319_p1),10));
    zext_ln150_56_fu_3327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_50_reg_5562),10));
    zext_ln150_57_fu_4234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_28_fu_4230_p1),10));
    zext_ln150_58_fu_4244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_52_fu_4238_p2),10));
    zext_ln150_59_fu_4279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_29_fu_4275_p1),10));
    zext_ln150_5_fu_2202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_2_fu_2198_p1),10));
    zext_ln150_60_fu_4289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_4_fu_4283_p2),10));
    zext_ln150_61_fu_4311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_30_fu_4307_p1),10));
    zext_ln150_62_fu_4321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_55_fu_4315_p2),10));
    zext_ln150_63_fu_4343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_31_fu_4339_p1),10));
    zext_ln150_64_fu_4353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_57_fu_4347_p2),10));
    zext_ln150_65_fu_3410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_32_fu_3406_p1),10));
    zext_ln150_66_fu_3420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_59_fu_3414_p2),10));
    zext_ln150_67_fu_3455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_33_fu_3451_p1),10));
    zext_ln150_68_fu_3465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln150_5_fu_3459_p2),10));
    zext_ln150_69_fu_3514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_34_fu_3510_p1),10));
    zext_ln150_6_fu_2211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_3_fu_2206_p2),10));
    zext_ln150_70_fu_3524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_62_fu_3518_p2),10));
    zext_ln150_71_fu_3573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_35_fu_3569_p1),10));
    zext_ln150_72_fu_3583_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_64_fu_3577_p2),10));
    zext_ln150_73_fu_3633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_36_fu_3629_p1),10));
    zext_ln150_74_fu_3643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_66_fu_3637_p2),10));
    zext_ln150_75_fu_3692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_37_fu_3688_p1),10));
    zext_ln150_76_fu_3702_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_68_fu_3696_p2),10));
    zext_ln150_77_fu_3751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_38_fu_3747_p1),10));
    zext_ln150_78_fu_3761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_70_fu_3755_p2),10));
    zext_ln150_79_fu_3810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_39_fu_3806_p1),10));
    zext_ln150_7_fu_2246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_3_fu_2242_p1),10));
    zext_ln150_80_fu_3820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_72_fu_3814_p2),10));
    zext_ln150_81_fu_4716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_40_reg_5903),10));
    zext_ln150_82_fu_4719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_74_reg_5908),10));
    zext_ln150_8_fu_2255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln150_5_fu_2250_p2),10));
    zext_ln150_9_fu_2277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln150_4_fu_2273_p1),10));
    zext_ln150_fu_1878_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln150_reg_5014),64));
    zext_ln188_10_fu_2088_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_2081_p3),64));
    zext_ln188_11_fu_2143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_2136_p3),64));
    zext_ln188_12_fu_2579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_2572_p3),64));
    zext_ln188_13_fu_2748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_22_fu_2741_p3),64));
    zext_ln188_14_fu_3186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_3179_p3),64));
    zext_ln188_15_fu_3302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_3295_p3),64));
    zext_ln188_1_fu_1974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_1967_p3),64));
    zext_ln188_2_fu_2025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_2018_p3),64));
    zext_ln188_3_fu_2075_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_2068_p3),64));
    zext_ln188_4_fu_2416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_2409_p3),64));
    zext_ln188_5_fu_2501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_2494_p3),64));
    zext_ln188_6_fu_2876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_2869_p3),64));
    zext_ln188_7_fu_3017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_3010_p3),64));
    zext_ln188_8_fu_1987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1980_p3),64));
    zext_ln188_9_fu_2000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_1993_p3),64));
    zext_ln188_fu_1953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1945_p3),64));
    zext_ln198_1_fu_2404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_2397_p3),64));
    zext_ln198_2_fu_2864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_2857_p3),64));
    zext_ln198_3_fu_3364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_3357_p3),64));
    zext_ln198_fu_2013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_2006_p3),64));
    zext_ln232_1_fu_3906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_3899_p3),64));
    zext_ln232_2_fu_3965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_3958_p3),64));
    zext_ln232_3_fu_3993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_fu_3986_p3),64));
    zext_ln232_4_fu_3926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_3919_p3),64));
    zext_ln232_5_fu_3943_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_50_fu_3936_p3),64));
    zext_ln232_6_fu_4139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_51_fu_4132_p3),64));
    zext_ln232_7_fu_4186_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_52_fu_4179_p3),64));
    zext_ln232_fu_3894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_45_fu_3886_p3),64));
    zext_ln241_1_fu_4209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_4202_p3),64));
    zext_ln241_fu_3953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln241_fu_3948_p2),64));
    zext_ln262_fu_4517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1_fu_4509_p3),64));
    zext_ln275_fu_4663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_382),4));
    zext_ln278_fu_4680_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln278_fu_4676_p1),32));
end behav;
