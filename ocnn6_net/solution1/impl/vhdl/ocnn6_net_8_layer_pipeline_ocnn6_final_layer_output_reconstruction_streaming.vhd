-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ocnn6_net_8_layer_pipeline_ocnn6_final_layer_output_reconstruction_streaming is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer_pipeline_streams_8_dout : IN STD_LOGIC_VECTOR (1084 downto 0);
    layer_pipeline_streams_8_empty_n : IN STD_LOGIC;
    layer_pipeline_streams_8_read : OUT STD_LOGIC;
    layer_pipeline_streams_8_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    layer_pipeline_streams_8_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_gmem_output_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_output_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem_output_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_output_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_output_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem_output_0_WREADY : IN STD_LOGIC;
    m_axi_gmem_output_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_output_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem_output_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_output_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem_output_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_output_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_output_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_output_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_output_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_RVALID : IN STD_LOGIC;
    m_axi_gmem_output_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem_output_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_output_0_RLAST : IN STD_LOGIC;
    m_axi_gmem_output_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_output_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_0_BVALID : IN STD_LOGIC;
    m_axi_gmem_output_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem_output_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_output_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_output_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    full_cubic_output_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    full_cubic_output_empty_n : IN STD_LOGIC;
    full_cubic_output_read : OUT STD_LOGIC;
    full_cubic_output_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    full_cubic_output_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0) );
end;


architecture behav of ocnn6_net_8_layer_pipeline_ocnn6_final_layer_output_reconstruction_streaming is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000010000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100000000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000001000000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000010000000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000100000000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000001000000000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000010000000000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000100000000000000";
    constant ap_ST_fsm_pp1_stage7 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000001000000000000000";
    constant ap_ST_fsm_pp1_stage8 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000010000000000000000";
    constant ap_ST_fsm_pp1_stage9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000100000000000000000";
    constant ap_ST_fsm_pp1_stage10 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000001000000000000000000";
    constant ap_ST_fsm_pp1_stage11 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000010000000000000000000";
    constant ap_ST_fsm_pp1_stage12 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000100000000000000000000";
    constant ap_ST_fsm_pp1_stage13 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000001000000000000000000000";
    constant ap_ST_fsm_pp1_stage14 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000010000000000000000000000";
    constant ap_ST_fsm_pp1_stage15 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000100000000000000000000000";
    constant ap_ST_fsm_pp1_stage16 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000001000000000000000000000000";
    constant ap_ST_fsm_pp1_stage17 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000010000000000000000000000000";
    constant ap_ST_fsm_pp1_stage18 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000100000000000000000000000000";
    constant ap_ST_fsm_pp1_stage19 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000001000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage20 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000010000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage21 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000100000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage22 : STD_LOGIC_VECTOR (40 downto 0) := "00000000001000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage23 : STD_LOGIC_VECTOR (40 downto 0) := "00000000010000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage24 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage25 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage26 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage27 : STD_LOGIC_VECTOR (40 downto 0) := "00000100000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage28 : STD_LOGIC_VECTOR (40 downto 0) := "00001000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage29 : STD_LOGIC_VECTOR (40 downto 0) := "00010000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage30 : STD_LOGIC_VECTOR (40 downto 0) := "00100000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage31 : STD_LOGIC_VECTOR (40 downto 0) := "01000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (40 downto 0) := "10000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_A00000 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000101000000000000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv24_A00000 : STD_LOGIC_VECTOR (23 downto 0) := "101000000000000000000000";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv14_2710 : STD_LOGIC_VECTOR (13 downto 0) := "10011100010000";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000001";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100001";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_101 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000001";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_121 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100001";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_141 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000001";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_161 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100001";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_181 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000001";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100001";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000001";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100001";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_201 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000001";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_221 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100001";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_241 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000001";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_261 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100001";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_281 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000001";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100001";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000001";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100001";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";
    constant ap_const_lv32_301 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000001";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_321 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100001";
    constant ap_const_lv32_340 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000000";
    constant ap_const_lv32_341 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101000001";
    constant ap_const_lv32_360 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101100000";
    constant ap_const_lv32_361 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001101100001";
    constant ap_const_lv32_380 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000000";
    constant ap_const_lv32_381 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110000001";
    constant ap_const_lv32_3A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110100000";
    constant ap_const_lv32_3A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001110100001";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3C1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000001";
    constant ap_const_lv32_3E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100000";
    constant ap_const_lv32_3E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100001";
    constant ap_const_lv32_400 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_const_lv32_401 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000001";
    constant ap_const_lv32_412 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000010010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal layer_pipeline_streams_8_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp1_stage1_grp2 : BOOLEAN;
    signal icmp_ln609_reg_1034 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1038 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_output_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem_output_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal gmem_output_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_block_pp1_stage3_grp3 : BOOLEAN;
    signal ap_block_pp1_stage3_subdone_grp3_done_reg : BOOLEAN := false;
    signal ap_block_pp1_stage3_subdone_grp3 : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_pp1_stage4_grp4 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_pp1_stage5_grp5 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_block_pp1_stage6_grp6 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage7 : signal is "none";
    signal ap_block_pp1_stage7_grp7 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage8 : signal is "none";
    signal ap_block_pp1_stage8_grp8 : BOOLEAN;
    signal ap_block_pp1_stage8_subdone_grp8_done_reg : BOOLEAN := false;
    signal ap_block_pp1_stage8_subdone_grp8 : BOOLEAN;
    signal ap_block_pp1_stage8_subdone : BOOLEAN;
    signal ap_CS_fsm_pp1_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage9 : signal is "none";
    signal ap_block_pp1_stage9_grp9 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage10 : signal is "none";
    signal ap_block_pp1_stage10_grp10 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage11 : signal is "none";
    signal ap_block_pp1_stage11_grp11 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage12 : signal is "none";
    signal ap_block_pp1_stage12_grp12 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage13 : signal is "none";
    signal ap_block_pp1_stage13_grp13 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage14 : signal is "none";
    signal ap_block_pp1_stage14_grp14 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage15 : signal is "none";
    signal ap_block_pp1_stage15_grp15 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage16 : signal is "none";
    signal ap_block_pp1_stage16_grp16 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage17 : signal is "none";
    signal ap_block_pp1_stage17_grp17 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage18 : signal is "none";
    signal ap_block_pp1_stage18_grp18 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage19 : signal is "none";
    signal ap_block_pp1_stage19_grp19 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage20 : signal is "none";
    signal ap_block_pp1_stage20_grp20 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage21 : signal is "none";
    signal ap_block_pp1_stage21_grp21 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage22 : signal is "none";
    signal ap_block_pp1_stage22_grp22 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage23 : signal is "none";
    signal ap_block_pp1_stage23_grp23 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage24 : signal is "none";
    signal ap_block_pp1_stage24_grp24 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage25 : signal is "none";
    signal ap_block_pp1_stage25_grp25 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage26 : signal is "none";
    signal ap_block_pp1_stage26_grp26 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage27 : signal is "none";
    signal ap_block_pp1_stage27_grp27 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage28 : signal is "none";
    signal ap_block_pp1_stage28_grp28 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage29 : signal is "none";
    signal ap_block_pp1_stage29_grp29 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage30 : signal is "none";
    signal ap_block_pp1_stage30_grp30 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage31 : signal is "none";
    signal ap_block_pp1_stage31_grp31 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_grp32 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_pp1_stage2_grp34 : BOOLEAN;
    signal ap_block_pp1_stage3_grp35 : BOOLEAN;
    signal ap_block_pp1_stage3_subdone_grp35_done_reg : BOOLEAN := false;
    signal ap_block_pp1_stage3_subdone_grp35 : BOOLEAN;
    signal ap_block_pp1_stage8_grp36 : BOOLEAN;
    signal ap_block_pp1_stage8_subdone_grp36_done_reg : BOOLEAN := false;
    signal ap_block_pp1_stage8_subdone_grp36 : BOOLEAN;
    signal full_cubic_output_blk_n : STD_LOGIC;
    signal full_cubic_output_1_reg_1013 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal gmem_output_addr_reg_1018 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln609_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal tmp_nbreadreq_fu_263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_voxel_features_reg_1042 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op91_read_state11 : BOOLEAN;
    signal ap_block_state11_pp1_stage1_iter0_grp2 : BOOLEAN;
    signal ap_block_pp1_stage1_11001_grp2 : BOOLEAN;
    signal output_voxel_features_9_reg_1047 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_3_reg_1052 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_4_reg_1057 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_5_reg_1062 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_6_reg_1067 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_7_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_8_reg_1077 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_9_reg_1082 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_s_reg_1087 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_1_reg_1092 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_2_reg_1097 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_10_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_11_reg_1107 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_12_reg_1112 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_13_reg_1117 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_14_reg_1122 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_15_reg_1127 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_16_reg_1132 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_17_reg_1137 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_18_reg_1142 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_19_reg_1147 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_20_reg_1152 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_21_reg_1157 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_22_reg_1162 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_23_reg_1167 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_24_reg_1172 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_25_reg_1177 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_26_reg_1182 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_27_reg_1187 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_28_reg_1192 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_28_reg_1192_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_29_reg_1197 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln615_29_reg_1197_pp1_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_644_reg_1202 : STD_LOGIC_VECTOR (17 downto 0);
    signal gmem_output_addr_1_reg_1208 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage2_11001_grp34 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln600_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_predicate_tran10to51_state10 : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_predicate_op164_write_state41 : BOOLEAN;
    signal ap_block_state41_io_grp31 : BOOLEAN;
    signal ap_block_pp1_stage31_subdone : BOOLEAN;
    signal ap_predicate_op141_write_state18 : BOOLEAN;
    signal ap_block_state18_io_grp8 : BOOLEAN;
    signal sext_ln600_fu_551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln626_fu_996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_01001_grp1 : BOOLEAN;
    signal ap_predicate_op136_writereq_state13 : BOOLEAN;
    signal ap_block_state13_io_grp3 : BOOLEAN;
    signal ap_block_pp1_stage3_11001_grp3 : BOOLEAN;
    signal ap_block_pp1_stage8_11001_grp36 : BOOLEAN;
    signal ap_predicate_op137_write_state14 : BOOLEAN;
    signal ap_block_state14_io_grp4 : BOOLEAN;
    signal ap_block_pp1_stage4_11001_grp4 : BOOLEAN;
    signal ap_block_pp1_stage4_01001_grp4 : BOOLEAN;
    signal ap_predicate_op138_write_state15 : BOOLEAN;
    signal ap_block_state15_io_grp5 : BOOLEAN;
    signal ap_block_pp1_stage5_11001_grp5 : BOOLEAN;
    signal ap_block_pp1_stage5_01001_grp5 : BOOLEAN;
    signal ap_predicate_op139_write_state16 : BOOLEAN;
    signal ap_block_state16_io_grp6 : BOOLEAN;
    signal ap_block_pp1_stage6_11001_grp6 : BOOLEAN;
    signal ap_block_pp1_stage6_01001_grp6 : BOOLEAN;
    signal ap_predicate_op140_write_state17 : BOOLEAN;
    signal ap_block_state17_io_grp7 : BOOLEAN;
    signal ap_block_pp1_stage7_11001_grp7 : BOOLEAN;
    signal ap_block_pp1_stage7_01001_grp7 : BOOLEAN;
    signal ap_block_pp1_stage8_11001_grp8 : BOOLEAN;
    signal ap_block_pp1_stage8_01001_grp8 : BOOLEAN;
    signal ap_predicate_op142_write_state19 : BOOLEAN;
    signal ap_block_state19_io_grp9 : BOOLEAN;
    signal ap_block_pp1_stage9_11001_grp9 : BOOLEAN;
    signal ap_block_pp1_stage9_01001_grp9 : BOOLEAN;
    signal ap_predicate_op143_write_state20 : BOOLEAN;
    signal ap_block_state20_io_grp10 : BOOLEAN;
    signal ap_block_pp1_stage10_11001_grp10 : BOOLEAN;
    signal ap_block_pp1_stage10_01001_grp10 : BOOLEAN;
    signal ap_predicate_op144_write_state21 : BOOLEAN;
    signal ap_block_state21_io_grp11 : BOOLEAN;
    signal ap_block_pp1_stage11_11001_grp11 : BOOLEAN;
    signal ap_block_pp1_stage11_01001_grp11 : BOOLEAN;
    signal ap_predicate_op145_write_state22 : BOOLEAN;
    signal ap_block_state22_io_grp12 : BOOLEAN;
    signal ap_block_pp1_stage12_11001_grp12 : BOOLEAN;
    signal ap_block_pp1_stage12_01001_grp12 : BOOLEAN;
    signal ap_predicate_op146_write_state23 : BOOLEAN;
    signal ap_block_state23_io_grp13 : BOOLEAN;
    signal ap_block_pp1_stage13_11001_grp13 : BOOLEAN;
    signal ap_block_pp1_stage13_01001_grp13 : BOOLEAN;
    signal ap_predicate_op147_write_state24 : BOOLEAN;
    signal ap_block_state24_io_grp14 : BOOLEAN;
    signal ap_block_pp1_stage14_11001_grp14 : BOOLEAN;
    signal ap_block_pp1_stage14_01001_grp14 : BOOLEAN;
    signal ap_predicate_op148_write_state25 : BOOLEAN;
    signal ap_block_state25_io_grp15 : BOOLEAN;
    signal ap_block_pp1_stage15_11001_grp15 : BOOLEAN;
    signal ap_block_pp1_stage15_01001_grp15 : BOOLEAN;
    signal ap_predicate_op149_write_state26 : BOOLEAN;
    signal ap_block_state26_io_grp16 : BOOLEAN;
    signal ap_block_pp1_stage16_11001_grp16 : BOOLEAN;
    signal ap_block_pp1_stage16_01001_grp16 : BOOLEAN;
    signal ap_predicate_op150_write_state27 : BOOLEAN;
    signal ap_block_state27_io_grp17 : BOOLEAN;
    signal ap_block_pp1_stage17_11001_grp17 : BOOLEAN;
    signal ap_block_pp1_stage17_01001_grp17 : BOOLEAN;
    signal ap_predicate_op151_write_state28 : BOOLEAN;
    signal ap_block_state28_io_grp18 : BOOLEAN;
    signal ap_block_pp1_stage18_11001_grp18 : BOOLEAN;
    signal ap_block_pp1_stage18_01001_grp18 : BOOLEAN;
    signal ap_predicate_op152_write_state29 : BOOLEAN;
    signal ap_block_state29_io_grp19 : BOOLEAN;
    signal ap_block_pp1_stage19_11001_grp19 : BOOLEAN;
    signal ap_block_pp1_stage19_01001_grp19 : BOOLEAN;
    signal ap_predicate_op153_write_state30 : BOOLEAN;
    signal ap_block_state30_io_grp20 : BOOLEAN;
    signal ap_block_pp1_stage20_11001_grp20 : BOOLEAN;
    signal ap_block_pp1_stage20_01001_grp20 : BOOLEAN;
    signal ap_predicate_op154_write_state31 : BOOLEAN;
    signal ap_block_state31_io_grp21 : BOOLEAN;
    signal ap_block_pp1_stage21_11001_grp21 : BOOLEAN;
    signal ap_block_pp1_stage21_01001_grp21 : BOOLEAN;
    signal ap_predicate_op155_write_state32 : BOOLEAN;
    signal ap_block_state32_io_grp22 : BOOLEAN;
    signal ap_block_pp1_stage22_11001_grp22 : BOOLEAN;
    signal ap_block_pp1_stage22_01001_grp22 : BOOLEAN;
    signal ap_predicate_op156_write_state33 : BOOLEAN;
    signal ap_block_state33_io_grp23 : BOOLEAN;
    signal ap_block_pp1_stage23_11001_grp23 : BOOLEAN;
    signal ap_block_pp1_stage23_01001_grp23 : BOOLEAN;
    signal ap_predicate_op157_write_state34 : BOOLEAN;
    signal ap_block_state34_io_grp24 : BOOLEAN;
    signal ap_block_pp1_stage24_11001_grp24 : BOOLEAN;
    signal ap_block_pp1_stage24_01001_grp24 : BOOLEAN;
    signal ap_predicate_op158_write_state35 : BOOLEAN;
    signal ap_block_state35_io_grp25 : BOOLEAN;
    signal ap_block_pp1_stage25_11001_grp25 : BOOLEAN;
    signal ap_block_pp1_stage25_01001_grp25 : BOOLEAN;
    signal ap_predicate_op159_write_state36 : BOOLEAN;
    signal ap_block_state36_io_grp26 : BOOLEAN;
    signal ap_block_pp1_stage26_11001_grp26 : BOOLEAN;
    signal ap_block_pp1_stage26_01001_grp26 : BOOLEAN;
    signal ap_predicate_op160_write_state37 : BOOLEAN;
    signal ap_block_state37_io_grp27 : BOOLEAN;
    signal ap_block_pp1_stage27_11001_grp27 : BOOLEAN;
    signal ap_block_pp1_stage27_01001_grp27 : BOOLEAN;
    signal ap_predicate_op161_write_state38 : BOOLEAN;
    signal ap_block_state38_io_grp28 : BOOLEAN;
    signal ap_block_pp1_stage28_11001_grp28 : BOOLEAN;
    signal ap_block_pp1_stage28_01001_grp28 : BOOLEAN;
    signal ap_predicate_op162_write_state39 : BOOLEAN;
    signal ap_block_state39_io_grp29 : BOOLEAN;
    signal ap_block_pp1_stage29_11001_grp29 : BOOLEAN;
    signal ap_block_pp1_stage29_01001_grp29 : BOOLEAN;
    signal ap_predicate_op163_write_state40 : BOOLEAN;
    signal ap_block_state40_io_grp30 : BOOLEAN;
    signal ap_block_pp1_stage30_11001_grp30 : BOOLEAN;
    signal ap_block_pp1_stage30_01001_grp30 : BOOLEAN;
    signal ap_block_pp1_stage31_11001_grp31 : BOOLEAN;
    signal ap_block_pp1_stage31_01001_grp31 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_grp32 : BOOLEAN;
    signal ap_block_pp1_stage0_01001_grp32 : BOOLEAN;
    signal ap_block_pp1_stage1_01001_grp2 : BOOLEAN;
    signal ap_block_pp1_stage2_01001_grp34 : BOOLEAN;
    signal ap_block_pp1_stage3_11001_grp35 : BOOLEAN;
    signal ap_block_pp1_stage3_01001_grp35 : BOOLEAN;
    signal i_fu_232 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal add_ln600_fu_575_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal v_fu_236 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    signal v_2_fu_600_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal trunc_ln_fu_541_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_645_fu_941_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_646_fu_952_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl_fu_948_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_shl6_fu_959_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal full_cubic_addr_fu_963_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln_fu_969_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln628_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln628_fu_981_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_986_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_block_pp1_stage7_subdone : BOOLEAN;
    signal ap_block_pp1_stage9_subdone : BOOLEAN;
    signal ap_block_pp1_stage10_subdone : BOOLEAN;
    signal ap_block_pp1_stage11_subdone : BOOLEAN;
    signal ap_block_pp1_stage12_subdone : BOOLEAN;
    signal ap_block_pp1_stage13_subdone : BOOLEAN;
    signal ap_block_pp1_stage14_subdone : BOOLEAN;
    signal ap_block_pp1_stage15_subdone : BOOLEAN;
    signal ap_block_pp1_stage16_subdone : BOOLEAN;
    signal ap_block_pp1_stage17_subdone : BOOLEAN;
    signal ap_block_pp1_stage18_subdone : BOOLEAN;
    signal ap_block_pp1_stage19_subdone : BOOLEAN;
    signal ap_block_pp1_stage20_subdone : BOOLEAN;
    signal ap_block_pp1_stage21_subdone : BOOLEAN;
    signal ap_block_pp1_stage22_subdone : BOOLEAN;
    signal ap_block_pp1_stage23_subdone : BOOLEAN;
    signal ap_block_pp1_stage24_subdone : BOOLEAN;
    signal ap_block_pp1_stage25_subdone : BOOLEAN;
    signal ap_block_pp1_stage26_subdone : BOOLEAN;
    signal ap_block_pp1_stage27_subdone : BOOLEAN;
    signal ap_block_pp1_stage28_subdone : BOOLEAN;
    signal ap_block_pp1_stage29_subdone : BOOLEAN;
    signal ap_block_pp1_stage30_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp1_stage3_subdone_grp35_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp1_stage3_subdone_grp35_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) then
                    if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then 
                        ap_block_pp1_stage3_subdone_grp35_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35)) then 
                        ap_block_pp1_stage3_subdone_grp35_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp1_stage3_subdone_grp3_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp1_stage3_subdone_grp3_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) then
                    if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then 
                        ap_block_pp1_stage3_subdone_grp3_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3)) then 
                        ap_block_pp1_stage3_subdone_grp3_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp1_stage8_subdone_grp36_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp1_stage8_subdone_grp36_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8)) then
                    if ((ap_const_boolean_0 = ap_block_pp1_stage8_subdone)) then 
                        ap_block_pp1_stage8_subdone_grp36_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp36)) then 
                        ap_block_pp1_stage8_subdone_grp36_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp1_stage8_subdone_grp8_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp1_stage8_subdone_grp8_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8)) then
                    if ((ap_const_boolean_0 = ap_block_pp1_stage8_subdone)) then 
                        ap_block_pp1_stage8_subdone_grp8_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8)) then 
                        ap_block_pp1_stage8_subdone_grp8_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((m_axi_gmem_output_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((m_axi_gmem_output_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (m_axi_gmem_output_0_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (m_axi_gmem_output_0_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter0_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_const_boolean_0 = ap_block_pp1_stage31_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (m_axi_gmem_output_0_BVALID = ap_const_logic_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                i_fu_232 <= ap_const_lv24_0;
            elsif (((icmp_ln600_fu_569_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_fu_232 <= add_ln600_fu_575_p2;
            end if; 
        end if;
    end process;

    v_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                v_fu_236 <= ap_const_lv14_0;
            elsif (((tmp_nbreadreq_fu_263_p3 = ap_const_lv1_1) and (icmp_ln609_fu_594_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
                v_fu_236 <= v_2_fu_600_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                full_cubic_output_1_reg_1013 <= full_cubic_output_dout;
                gmem_output_addr_reg_1018 <= sext_ln600_fu_551_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001_grp34))) then
                gmem_output_addr_1_reg_1208 <= sext_ln626_fu_996_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln609_reg_1034 <= icmp_ln609_fu_594_p2;
                tmp_reg_1038 <= tmp_nbreadreq_fu_263_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001_grp2))) then
                output_voxel_features_9_reg_1047 <= layer_pipeline_streams_8_dout(64 downto 33);
                output_voxel_features_reg_1042 <= layer_pipeline_streams_8_dout(32 downto 1);
                tmp_644_reg_1202 <= layer_pipeline_streams_8_dout(1042 downto 1025);
                trunc_ln615_10_reg_1102 <= layer_pipeline_streams_8_dout(416 downto 385);
                trunc_ln615_11_reg_1107 <= layer_pipeline_streams_8_dout(448 downto 417);
                trunc_ln615_12_reg_1112 <= layer_pipeline_streams_8_dout(480 downto 449);
                trunc_ln615_13_reg_1117 <= layer_pipeline_streams_8_dout(512 downto 481);
                trunc_ln615_14_reg_1122 <= layer_pipeline_streams_8_dout(544 downto 513);
                trunc_ln615_15_reg_1127 <= layer_pipeline_streams_8_dout(576 downto 545);
                trunc_ln615_16_reg_1132 <= layer_pipeline_streams_8_dout(608 downto 577);
                trunc_ln615_17_reg_1137 <= layer_pipeline_streams_8_dout(640 downto 609);
                trunc_ln615_18_reg_1142 <= layer_pipeline_streams_8_dout(672 downto 641);
                trunc_ln615_19_reg_1147 <= layer_pipeline_streams_8_dout(704 downto 673);
                trunc_ln615_1_reg_1092 <= layer_pipeline_streams_8_dout(352 downto 321);
                trunc_ln615_20_reg_1152 <= layer_pipeline_streams_8_dout(736 downto 705);
                trunc_ln615_21_reg_1157 <= layer_pipeline_streams_8_dout(768 downto 737);
                trunc_ln615_22_reg_1162 <= layer_pipeline_streams_8_dout(800 downto 769);
                trunc_ln615_23_reg_1167 <= layer_pipeline_streams_8_dout(832 downto 801);
                trunc_ln615_24_reg_1172 <= layer_pipeline_streams_8_dout(864 downto 833);
                trunc_ln615_25_reg_1177 <= layer_pipeline_streams_8_dout(896 downto 865);
                trunc_ln615_26_reg_1182 <= layer_pipeline_streams_8_dout(928 downto 897);
                trunc_ln615_27_reg_1187 <= layer_pipeline_streams_8_dout(960 downto 929);
                trunc_ln615_28_reg_1192 <= layer_pipeline_streams_8_dout(992 downto 961);
                trunc_ln615_28_reg_1192_pp1_iter1_reg <= trunc_ln615_28_reg_1192;
                trunc_ln615_29_reg_1197 <= layer_pipeline_streams_8_dout(1024 downto 993);
                trunc_ln615_29_reg_1197_pp1_iter1_reg <= trunc_ln615_29_reg_1197;
                trunc_ln615_2_reg_1097 <= layer_pipeline_streams_8_dout(384 downto 353);
                trunc_ln615_3_reg_1052 <= layer_pipeline_streams_8_dout(96 downto 65);
                trunc_ln615_4_reg_1057 <= layer_pipeline_streams_8_dout(128 downto 97);
                trunc_ln615_5_reg_1062 <= layer_pipeline_streams_8_dout(160 downto 129);
                trunc_ln615_6_reg_1067 <= layer_pipeline_streams_8_dout(192 downto 161);
                trunc_ln615_7_reg_1072 <= layer_pipeline_streams_8_dout(224 downto 193);
                trunc_ln615_8_reg_1077 <= layer_pipeline_streams_8_dout(256 downto 225);
                trunc_ln615_9_reg_1082 <= layer_pipeline_streams_8_dout(288 downto 257);
                trunc_ln615_s_reg_1087 <= layer_pipeline_streams_8_dout(320 downto 289);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_output_0_AWREADY, m_axi_gmem_output_0_BVALID, ap_enable_reg_pp1_iter0, ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_state9, ap_block_pp1_stage3_subdone, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8_subdone, ap_enable_reg_pp1_iter1, ap_block_state1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln600_fu_569_p2, ap_block_pp1_stage0_subdone, ap_predicate_tran10to51_state10, ap_block_pp1_stage31_subdone, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone, ap_block_pp1_stage6_subdone, ap_block_pp1_stage7_subdone, ap_block_pp1_stage9_subdone, ap_block_pp1_stage10_subdone, ap_block_pp1_stage11_subdone, ap_block_pp1_stage12_subdone, ap_block_pp1_stage13_subdone, ap_block_pp1_stage14_subdone, ap_block_pp1_stage15_subdone, ap_block_pp1_stage16_subdone, ap_block_pp1_stage17_subdone, ap_block_pp1_stage18_subdone, ap_block_pp1_stage19_subdone, ap_block_pp1_stage20_subdone, ap_block_pp1_stage21_subdone, ap_block_pp1_stage22_subdone, ap_block_pp1_stage23_subdone, ap_block_pp1_stage24_subdone, ap_block_pp1_stage25_subdone, ap_block_pp1_stage26_subdone, ap_block_pp1_stage27_subdone, ap_block_pp1_stage28_subdone, ap_block_pp1_stage29_subdone, ap_block_pp1_stage30_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((m_axi_gmem_output_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln600_fu_569_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((icmp_ln600_fu_569_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (m_axi_gmem_output_0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_predicate_tran10to51_state10 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_predicate_tran10to51_state10 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_pp1_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                end if;
            when ap_ST_fsm_pp1_stage8 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage9;
                elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage8;
                end if;
            when ap_ST_fsm_pp1_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage9;
                end if;
            when ap_ST_fsm_pp1_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage10;
                end if;
            when ap_ST_fsm_pp1_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage11;
                end if;
            when ap_ST_fsm_pp1_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage12;
                end if;
            when ap_ST_fsm_pp1_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage13;
                end if;
            when ap_ST_fsm_pp1_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage14;
                end if;
            when ap_ST_fsm_pp1_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage15;
                end if;
            when ap_ST_fsm_pp1_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage16;
                end if;
            when ap_ST_fsm_pp1_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage17;
                end if;
            when ap_ST_fsm_pp1_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage18;
                end if;
            when ap_ST_fsm_pp1_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage19;
                end if;
            when ap_ST_fsm_pp1_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage20;
                end if;
            when ap_ST_fsm_pp1_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage21;
                end if;
            when ap_ST_fsm_pp1_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage22;
                end if;
            when ap_ST_fsm_pp1_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage23;
                end if;
            when ap_ST_fsm_pp1_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage24;
                end if;
            when ap_ST_fsm_pp1_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage25;
                end if;
            when ap_ST_fsm_pp1_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage26;
                end if;
            when ap_ST_fsm_pp1_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage27;
                end if;
            when ap_ST_fsm_pp1_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage28;
                end if;
            when ap_ST_fsm_pp1_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage29;
                end if;
            when ap_ST_fsm_pp1_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage30;
                end if;
            when ap_ST_fsm_pp1_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage31;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln600_fu_575_p2 <= std_logic_vector(unsigned(i_fu_232) + unsigned(ap_const_lv24_1));
    add_ln628_fu_981_p2 <= std_logic_vector(unsigned(full_cubic_output_1_reg_1013) + unsigned(zext_ln628_fu_977_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(9);
    ap_CS_fsm_pp1_stage10 <= ap_CS_fsm(18);
    ap_CS_fsm_pp1_stage11 <= ap_CS_fsm(19);
    ap_CS_fsm_pp1_stage12 <= ap_CS_fsm(20);
    ap_CS_fsm_pp1_stage13 <= ap_CS_fsm(21);
    ap_CS_fsm_pp1_stage14 <= ap_CS_fsm(22);
    ap_CS_fsm_pp1_stage15 <= ap_CS_fsm(23);
    ap_CS_fsm_pp1_stage16 <= ap_CS_fsm(24);
    ap_CS_fsm_pp1_stage17 <= ap_CS_fsm(25);
    ap_CS_fsm_pp1_stage18 <= ap_CS_fsm(26);
    ap_CS_fsm_pp1_stage19 <= ap_CS_fsm(27);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage20 <= ap_CS_fsm(28);
    ap_CS_fsm_pp1_stage21 <= ap_CS_fsm(29);
    ap_CS_fsm_pp1_stage22 <= ap_CS_fsm(30);
    ap_CS_fsm_pp1_stage23 <= ap_CS_fsm(31);
    ap_CS_fsm_pp1_stage24 <= ap_CS_fsm(32);
    ap_CS_fsm_pp1_stage25 <= ap_CS_fsm(33);
    ap_CS_fsm_pp1_stage26 <= ap_CS_fsm(34);
    ap_CS_fsm_pp1_stage27 <= ap_CS_fsm(35);
    ap_CS_fsm_pp1_stage28 <= ap_CS_fsm(36);
    ap_CS_fsm_pp1_stage29 <= ap_CS_fsm(37);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage30 <= ap_CS_fsm(38);
    ap_CS_fsm_pp1_stage31 <= ap_CS_fsm(39);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(12);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(13);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage7 <= ap_CS_fsm(15);
    ap_CS_fsm_pp1_stage8 <= ap_CS_fsm(16);
    ap_CS_fsm_pp1_stage9 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state51 <= ap_CS_fsm(40);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(m_axi_gmem_output_0_AWREADY)
    begin
        if ((m_axi_gmem_output_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(m_axi_gmem_output_0_BVALID)
    begin
        if ((m_axi_gmem_output_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_01001_grp32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_grp32_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001_grp32 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0_grp32 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_subdone_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage10_01001_grp10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage10_11001_grp10_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state20_io_grp10)
    begin
                ap_block_pp1_stage10_11001_grp10 <= ((ap_const_boolean_1 = ap_block_state20_io_grp10) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage10_grp10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage10_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state20_io_grp10)
    begin
                ap_block_pp1_stage10_subdone <= ((ap_const_boolean_1 = ap_block_state20_io_grp10) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage11_01001_grp11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage11_11001_grp11_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state21_io_grp11)
    begin
                ap_block_pp1_stage11_11001_grp11 <= ((ap_const_boolean_1 = ap_block_state21_io_grp11) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage11_grp11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage11_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state21_io_grp11)
    begin
                ap_block_pp1_stage11_subdone <= ((ap_const_boolean_1 = ap_block_state21_io_grp11) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage12_01001_grp12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage12_11001_grp12_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state22_io_grp12)
    begin
                ap_block_pp1_stage12_11001_grp12 <= ((ap_const_boolean_1 = ap_block_state22_io_grp12) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage12_grp12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage12_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state22_io_grp12)
    begin
                ap_block_pp1_stage12_subdone <= ((ap_const_boolean_1 = ap_block_state22_io_grp12) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage13_01001_grp13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage13_11001_grp13_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state23_io_grp13)
    begin
                ap_block_pp1_stage13_11001_grp13 <= ((ap_const_boolean_1 = ap_block_state23_io_grp13) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage13_grp13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage13_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state23_io_grp13)
    begin
                ap_block_pp1_stage13_subdone <= ((ap_const_boolean_1 = ap_block_state23_io_grp13) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage14_01001_grp14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage14_11001_grp14_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state24_io_grp14)
    begin
                ap_block_pp1_stage14_11001_grp14 <= ((ap_const_boolean_1 = ap_block_state24_io_grp14) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage14_grp14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage14_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state24_io_grp14)
    begin
                ap_block_pp1_stage14_subdone <= ((ap_const_boolean_1 = ap_block_state24_io_grp14) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage15_01001_grp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage15_11001_grp15_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state25_io_grp15)
    begin
                ap_block_pp1_stage15_11001_grp15 <= ((ap_const_boolean_1 = ap_block_state25_io_grp15) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage15_grp15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage15_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state25_io_grp15)
    begin
                ap_block_pp1_stage15_subdone <= ((ap_const_boolean_1 = ap_block_state25_io_grp15) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage16_01001_grp16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage16_11001_grp16_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state26_io_grp16)
    begin
                ap_block_pp1_stage16_11001_grp16 <= ((ap_const_boolean_1 = ap_block_state26_io_grp16) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage16_grp16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage16_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state26_io_grp16)
    begin
                ap_block_pp1_stage16_subdone <= ((ap_const_boolean_1 = ap_block_state26_io_grp16) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage17_01001_grp17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage17_11001_grp17_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state27_io_grp17)
    begin
                ap_block_pp1_stage17_11001_grp17 <= ((ap_const_boolean_1 = ap_block_state27_io_grp17) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage17_grp17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage17_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state27_io_grp17)
    begin
                ap_block_pp1_stage17_subdone <= ((ap_const_boolean_1 = ap_block_state27_io_grp17) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage18_01001_grp18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage18_11001_grp18_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state28_io_grp18)
    begin
                ap_block_pp1_stage18_11001_grp18 <= ((ap_const_boolean_1 = ap_block_state28_io_grp18) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage18_grp18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage18_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state28_io_grp18)
    begin
                ap_block_pp1_stage18_subdone <= ((ap_const_boolean_1 = ap_block_state28_io_grp18) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage19_01001_grp19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage19_11001_grp19_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state29_io_grp19)
    begin
                ap_block_pp1_stage19_11001_grp19 <= ((ap_const_boolean_1 = ap_block_state29_io_grp19) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage19_grp19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage19_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state29_io_grp19)
    begin
                ap_block_pp1_stage19_subdone <= ((ap_const_boolean_1 = ap_block_state29_io_grp19) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp1_stage1_01001_grp2_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state11_pp1_stage1_iter0_grp2)
    begin
                ap_block_pp1_stage1_01001_grp2 <= ((ap_const_boolean_1 = ap_block_state11_pp1_stage1_iter0_grp2) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp1_stage1_11001_grp2_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter0_reg, ap_enable_reg_pp1_iter1, ap_block_state11_pp1_stage1_iter0_grp2)
    begin
                ap_block_pp1_stage1_11001_grp2 <= (((ap_const_boolean_1 = ap_block_state11_pp1_stage1_iter0_grp2) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage1_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage1_subdone_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter0_reg, ap_enable_reg_pp1_iter1, ap_block_state11_pp1_stage1_iter0_grp2)
    begin
                ap_block_pp1_stage1_subdone <= (((ap_const_boolean_1 = ap_block_state11_pp1_stage1_iter0_grp2) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp1_stage20_01001_grp20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage20_11001_grp20_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state30_io_grp20)
    begin
                ap_block_pp1_stage20_11001_grp20 <= ((ap_const_boolean_1 = ap_block_state30_io_grp20) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage20_grp20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage20_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state30_io_grp20)
    begin
                ap_block_pp1_stage20_subdone <= ((ap_const_boolean_1 = ap_block_state30_io_grp20) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage21_01001_grp21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage21_11001_grp21_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state31_io_grp21)
    begin
                ap_block_pp1_stage21_11001_grp21 <= ((ap_const_boolean_1 = ap_block_state31_io_grp21) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage21_grp21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage21_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state31_io_grp21)
    begin
                ap_block_pp1_stage21_subdone <= ((ap_const_boolean_1 = ap_block_state31_io_grp21) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage22_01001_grp22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage22_11001_grp22_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state32_io_grp22)
    begin
                ap_block_pp1_stage22_11001_grp22 <= ((ap_const_boolean_1 = ap_block_state32_io_grp22) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage22_grp22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage22_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state32_io_grp22)
    begin
                ap_block_pp1_stage22_subdone <= ((ap_const_boolean_1 = ap_block_state32_io_grp22) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage23_01001_grp23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage23_11001_grp23_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state33_io_grp23)
    begin
                ap_block_pp1_stage23_11001_grp23 <= ((ap_const_boolean_1 = ap_block_state33_io_grp23) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage23_grp23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage23_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state33_io_grp23)
    begin
                ap_block_pp1_stage23_subdone <= ((ap_const_boolean_1 = ap_block_state33_io_grp23) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage24_01001_grp24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage24_11001_grp24_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state34_io_grp24)
    begin
                ap_block_pp1_stage24_11001_grp24 <= ((ap_const_boolean_1 = ap_block_state34_io_grp24) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage24_grp24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage24_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state34_io_grp24)
    begin
                ap_block_pp1_stage24_subdone <= ((ap_const_boolean_1 = ap_block_state34_io_grp24) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage25_01001_grp25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage25_11001_grp25_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state35_io_grp25)
    begin
                ap_block_pp1_stage25_11001_grp25 <= ((ap_const_boolean_1 = ap_block_state35_io_grp25) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage25_grp25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage25_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state35_io_grp25)
    begin
                ap_block_pp1_stage25_subdone <= ((ap_const_boolean_1 = ap_block_state35_io_grp25) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage26_01001_grp26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage26_11001_grp26_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state36_io_grp26)
    begin
                ap_block_pp1_stage26_11001_grp26 <= ((ap_const_boolean_1 = ap_block_state36_io_grp26) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage26_grp26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage26_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state36_io_grp26)
    begin
                ap_block_pp1_stage26_subdone <= ((ap_const_boolean_1 = ap_block_state36_io_grp26) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage27_01001_grp27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage27_11001_grp27_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state37_io_grp27)
    begin
                ap_block_pp1_stage27_11001_grp27 <= ((ap_const_boolean_1 = ap_block_state37_io_grp27) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage27_grp27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage27_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state37_io_grp27)
    begin
                ap_block_pp1_stage27_subdone <= ((ap_const_boolean_1 = ap_block_state37_io_grp27) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage28_01001_grp28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage28_11001_grp28_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state38_io_grp28)
    begin
                ap_block_pp1_stage28_11001_grp28 <= ((ap_const_boolean_1 = ap_block_state38_io_grp28) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage28_grp28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage28_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state38_io_grp28)
    begin
                ap_block_pp1_stage28_subdone <= ((ap_const_boolean_1 = ap_block_state38_io_grp28) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage29_01001_grp29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage29_11001_grp29_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state39_io_grp29)
    begin
                ap_block_pp1_stage29_11001_grp29 <= ((ap_const_boolean_1 = ap_block_state39_io_grp29) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage29_grp29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage29_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state39_io_grp29)
    begin
                ap_block_pp1_stage29_subdone <= ((ap_const_boolean_1 = ap_block_state39_io_grp29) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage2_01001_grp34 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage2_11001_grp34_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage2_11001_grp34 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage2_grp34 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage2_subdone_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage2_subdone <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage30_01001_grp30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage30_11001_grp30_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state40_io_grp30)
    begin
                ap_block_pp1_stage30_11001_grp30 <= ((ap_const_boolean_1 = ap_block_state40_io_grp30) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage30_grp30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage30_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state40_io_grp30)
    begin
                ap_block_pp1_stage30_subdone <= ((ap_const_boolean_1 = ap_block_state40_io_grp30) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage31_01001_grp31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage31_11001_grp31_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state41_io_grp31)
    begin
                ap_block_pp1_stage31_11001_grp31 <= ((ap_const_boolean_1 = ap_block_state41_io_grp31) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage31_grp31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage31_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state41_io_grp31)
    begin
                ap_block_pp1_stage31_subdone <= ((ap_const_boolean_1 = ap_block_state41_io_grp31) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage3_01001_grp35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage3_11001_grp3_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage3_subdone_grp3_done_reg, ap_block_state13_io_grp3)
    begin
                ap_block_pp1_stage3_11001_grp3 <= ((ap_const_boolean_1 = ap_block_state13_io_grp3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp1_stage3_11001_grp35_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1, ap_block_pp1_stage3_subdone_grp35_done_reg)
    begin
                ap_block_pp1_stage3_11001_grp35 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35_done_reg));
    end process;

        ap_block_pp1_stage3_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_grp35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage3_subdone_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage3_subdone_grp3_done_reg, ap_enable_reg_pp1_iter1, ap_block_pp1_stage3_subdone_grp35_done_reg, ap_block_state13_io_grp3)
    begin
                ap_block_pp1_stage3_subdone <= (((ap_const_boolean_1 = ap_block_state13_io_grp3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35_done_reg)));
    end process;


    ap_block_pp1_stage3_subdone_grp3_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage3_subdone_grp3_done_reg, ap_block_state13_io_grp3)
    begin
                ap_block_pp1_stage3_subdone_grp3 <= ((ap_const_boolean_1 = ap_block_state13_io_grp3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp1_stage3_subdone_grp35_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_enable_reg_pp1_iter1, ap_block_pp1_stage3_subdone_grp35_done_reg)
    begin
                ap_block_pp1_stage3_subdone_grp35 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35_done_reg));
    end process;

        ap_block_pp1_stage4_01001_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage4_11001_grp4_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state14_io_grp4)
    begin
                ap_block_pp1_stage4_11001_grp4 <= ((ap_const_boolean_1 = ap_block_state14_io_grp4) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage4_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage4_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state14_io_grp4)
    begin
                ap_block_pp1_stage4_subdone <= ((ap_const_boolean_1 = ap_block_state14_io_grp4) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage5_01001_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage5_11001_grp5_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state15_io_grp5)
    begin
                ap_block_pp1_stage5_11001_grp5 <= ((ap_const_boolean_1 = ap_block_state15_io_grp5) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage5_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage5_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state15_io_grp5)
    begin
                ap_block_pp1_stage5_subdone <= ((ap_const_boolean_1 = ap_block_state15_io_grp5) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage6_01001_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage6_11001_grp6_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state16_io_grp6)
    begin
                ap_block_pp1_stage6_11001_grp6 <= ((ap_const_boolean_1 = ap_block_state16_io_grp6) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage6_grp6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage6_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state16_io_grp6)
    begin
                ap_block_pp1_stage6_subdone <= ((ap_const_boolean_1 = ap_block_state16_io_grp6) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage7_01001_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage7_11001_grp7_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state17_io_grp7)
    begin
                ap_block_pp1_stage7_11001_grp7 <= ((ap_const_boolean_1 = ap_block_state17_io_grp7) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage7_grp7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage7_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state17_io_grp7)
    begin
                ap_block_pp1_stage7_subdone <= ((ap_const_boolean_1 = ap_block_state17_io_grp7) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage8_01001_grp8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage8_11001_grp36_assign_proc : process(m_axi_gmem_output_0_BVALID, ap_enable_reg_pp1_iter1, ap_block_pp1_stage8_subdone_grp36_done_reg)
    begin
                ap_block_pp1_stage8_11001_grp36 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp36_done_reg) and (m_axi_gmem_output_0_BVALID = ap_const_logic_0));
    end process;


    ap_block_pp1_stage8_11001_grp8_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage8_subdone_grp8_done_reg, ap_block_state18_io_grp8)
    begin
                ap_block_pp1_stage8_11001_grp8 <= ((ap_const_boolean_1 = ap_block_state18_io_grp8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage8_grp36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage8_grp8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage8_subdone_assign_proc : process(m_axi_gmem_output_0_BVALID, ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage8_subdone_grp8_done_reg, ap_enable_reg_pp1_iter1, ap_block_pp1_stage8_subdone_grp36_done_reg, ap_block_state18_io_grp8)
    begin
                ap_block_pp1_stage8_subdone <= (((ap_const_boolean_1 = ap_block_state18_io_grp8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp36_done_reg) and (m_axi_gmem_output_0_BVALID = ap_const_logic_0)));
    end process;


    ap_block_pp1_stage8_subdone_grp36_assign_proc : process(m_axi_gmem_output_0_BVALID, ap_enable_reg_pp1_iter1, ap_block_pp1_stage8_subdone_grp36_done_reg)
    begin
                ap_block_pp1_stage8_subdone_grp36 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp36_done_reg) and (m_axi_gmem_output_0_BVALID = ap_const_logic_0));
    end process;


    ap_block_pp1_stage8_subdone_grp8_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage8_subdone_grp8_done_reg, ap_block_state18_io_grp8)
    begin
                ap_block_pp1_stage8_subdone_grp8 <= ((ap_const_boolean_1 = ap_block_state18_io_grp8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage9_01001_grp9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage9_11001_grp9_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state19_io_grp9)
    begin
                ap_block_pp1_stage9_11001_grp9 <= ((ap_const_boolean_1 = ap_block_state19_io_grp9) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp1_stage9_grp9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage9_subdone_assign_proc : process(ap_enable_reg_pp1_iter0_reg, ap_block_state19_io_grp9)
    begin
                ap_block_pp1_stage9_subdone <= ((ap_const_boolean_1 = ap_block_state19_io_grp9) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, full_cubic_output_empty_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (full_cubic_output_empty_n = ap_const_logic_0));
    end process;


    ap_block_state11_pp1_stage1_iter0_grp2_assign_proc : process(layer_pipeline_streams_8_empty_n, ap_predicate_op91_read_state11)
    begin
                ap_block_state11_pp1_stage1_iter0_grp2 <= ((layer_pipeline_streams_8_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state11 = ap_const_boolean_1));
    end process;


    ap_block_state13_io_grp3_assign_proc : process(m_axi_gmem_output_0_AWREADY, ap_predicate_op136_writereq_state13)
    begin
                ap_block_state13_io_grp3 <= ((ap_predicate_op136_writereq_state13 = ap_const_boolean_1) and (m_axi_gmem_output_0_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state14_io_grp4_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op137_write_state14)
    begin
                ap_block_state14_io_grp4 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op137_write_state14 = ap_const_boolean_1));
    end process;


    ap_block_state15_io_grp5_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op138_write_state15)
    begin
                ap_block_state15_io_grp5 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op138_write_state15 = ap_const_boolean_1));
    end process;


    ap_block_state16_io_grp6_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op139_write_state16)
    begin
                ap_block_state16_io_grp6 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op139_write_state16 = ap_const_boolean_1));
    end process;


    ap_block_state17_io_grp7_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op140_write_state17)
    begin
                ap_block_state17_io_grp7 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op140_write_state17 = ap_const_boolean_1));
    end process;


    ap_block_state18_io_grp8_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op141_write_state18)
    begin
                ap_block_state18_io_grp8 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op141_write_state18 = ap_const_boolean_1));
    end process;


    ap_block_state19_io_grp9_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op142_write_state19)
    begin
                ap_block_state19_io_grp9 <= ((ap_predicate_op142_write_state19 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state20_io_grp10_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op143_write_state20)
    begin
                ap_block_state20_io_grp10 <= ((ap_predicate_op143_write_state20 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state21_io_grp11_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op144_write_state21)
    begin
                ap_block_state21_io_grp11 <= ((ap_predicate_op144_write_state21 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state22_io_grp12_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op145_write_state22)
    begin
                ap_block_state22_io_grp12 <= ((ap_predicate_op145_write_state22 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state23_io_grp13_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op146_write_state23)
    begin
                ap_block_state23_io_grp13 <= ((ap_predicate_op146_write_state23 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state24_io_grp14_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op147_write_state24)
    begin
                ap_block_state24_io_grp14 <= ((ap_predicate_op147_write_state24 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state25_io_grp15_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op148_write_state25)
    begin
                ap_block_state25_io_grp15 <= ((ap_predicate_op148_write_state25 = ap_const_boolean_1) and (m_axi_gmem_output_0_WREADY = ap_const_logic_0));
    end process;


    ap_block_state26_io_grp16_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op149_write_state26)
    begin
                ap_block_state26_io_grp16 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op149_write_state26 = ap_const_boolean_1));
    end process;


    ap_block_state27_io_grp17_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op150_write_state27)
    begin
                ap_block_state27_io_grp17 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op150_write_state27 = ap_const_boolean_1));
    end process;


    ap_block_state28_io_grp18_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op151_write_state28)
    begin
                ap_block_state28_io_grp18 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op151_write_state28 = ap_const_boolean_1));
    end process;


    ap_block_state29_io_grp19_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op152_write_state29)
    begin
                ap_block_state29_io_grp19 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op152_write_state29 = ap_const_boolean_1));
    end process;


    ap_block_state30_io_grp20_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op153_write_state30)
    begin
                ap_block_state30_io_grp20 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op153_write_state30 = ap_const_boolean_1));
    end process;


    ap_block_state31_io_grp21_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op154_write_state31)
    begin
                ap_block_state31_io_grp21 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op154_write_state31 = ap_const_boolean_1));
    end process;


    ap_block_state32_io_grp22_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op155_write_state32)
    begin
                ap_block_state32_io_grp22 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op155_write_state32 = ap_const_boolean_1));
    end process;


    ap_block_state33_io_grp23_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op156_write_state33)
    begin
                ap_block_state33_io_grp23 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op156_write_state33 = ap_const_boolean_1));
    end process;


    ap_block_state34_io_grp24_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op157_write_state34)
    begin
                ap_block_state34_io_grp24 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op157_write_state34 = ap_const_boolean_1));
    end process;


    ap_block_state35_io_grp25_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op158_write_state35)
    begin
                ap_block_state35_io_grp25 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op158_write_state35 = ap_const_boolean_1));
    end process;


    ap_block_state36_io_grp26_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op159_write_state36)
    begin
                ap_block_state36_io_grp26 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op159_write_state36 = ap_const_boolean_1));
    end process;


    ap_block_state37_io_grp27_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op160_write_state37)
    begin
                ap_block_state37_io_grp27 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op160_write_state37 = ap_const_boolean_1));
    end process;


    ap_block_state38_io_grp28_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op161_write_state38)
    begin
                ap_block_state38_io_grp28 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op161_write_state38 = ap_const_boolean_1));
    end process;


    ap_block_state39_io_grp29_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op162_write_state39)
    begin
                ap_block_state39_io_grp29 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op162_write_state39 = ap_const_boolean_1));
    end process;


    ap_block_state40_io_grp30_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op163_write_state40)
    begin
                ap_block_state40_io_grp30 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op163_write_state40 = ap_const_boolean_1));
    end process;


    ap_block_state41_io_grp31_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_predicate_op164_write_state41)
    begin
                ap_block_state41_io_grp31 <= ((m_axi_gmem_output_0_WREADY = ap_const_logic_0) and (ap_predicate_op164_write_state41 = ap_const_boolean_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln600_fu_569_p2)
    begin
        if ((icmp_ln600_fu_569_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(ap_predicate_tran10to51_state10)
    begin
        if ((ap_predicate_tran10to51_state10 = ap_const_boolean_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op136_writereq_state13_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op136_writereq_state13 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op137_write_state14_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op137_write_state14 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op138_write_state15_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op138_write_state15 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op139_write_state16_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op139_write_state16 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op140_write_state17_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op140_write_state17 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op141_write_state18_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op141_write_state18 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op142_write_state19_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op142_write_state19 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op143_write_state20_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op143_write_state20 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op144_write_state21_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op144_write_state21 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op145_write_state22_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op145_write_state22 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op146_write_state23_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op146_write_state23 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op147_write_state24_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op147_write_state24 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op148_write_state25_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op148_write_state25 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op149_write_state26_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op149_write_state26 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op150_write_state27_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op150_write_state27 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op151_write_state28_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op151_write_state28 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op152_write_state29_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op152_write_state29 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op153_write_state30_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op153_write_state30 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op154_write_state31_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op154_write_state31 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op155_write_state32_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op155_write_state32 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op156_write_state33_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op156_write_state33 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op157_write_state34_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op157_write_state34 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op158_write_state35_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op158_write_state35 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op159_write_state36_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op159_write_state36 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op160_write_state37_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op160_write_state37 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op161_write_state38_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op161_write_state38 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op162_write_state39_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op162_write_state39 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op163_write_state40_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op163_write_state40 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op164_write_state41_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op164_write_state41 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_op91_read_state11_assign_proc : process(icmp_ln609_reg_1034, tmp_reg_1038)
    begin
                ap_predicate_op91_read_state11 <= ((tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0));
    end process;


    ap_predicate_tran10to51_state10_assign_proc : process(icmp_ln609_fu_594_p2, tmp_nbreadreq_fu_263_p3)
    begin
                ap_predicate_tran10to51_state10 <= ((tmp_nbreadreq_fu_263_p3 = ap_const_lv1_0) or (icmp_ln609_fu_594_p2 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    full_cubic_addr_fu_963_p2 <= std_logic_vector(unsigned(p_shl_fu_948_p1) + unsigned(p_shl6_fu_959_p1));

    full_cubic_output_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, full_cubic_output_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            full_cubic_output_blk_n <= full_cubic_output_empty_n;
        else 
            full_cubic_output_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    full_cubic_output_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            full_cubic_output_read <= ap_const_logic_1;
        else 
            full_cubic_output_read <= ap_const_logic_0;
        end if; 
    end process;


    gmem_output_blk_n_AW_assign_proc : process(m_axi_gmem_output_0_AWREADY, ap_enable_reg_pp1_iter0_reg, icmp_ln609_reg_1034, tmp_reg_1038, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_grp3, ap_block_pp1_stage3_subdone_grp3_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_const_boolean_0 = ap_block_pp1_stage3_grp3) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)))) then 
            gmem_output_blk_n_AW <= m_axi_gmem_output_0_AWREADY;
        else 
            gmem_output_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_output_blk_n_B_assign_proc : process(m_axi_gmem_output_0_BVALID, ap_CS_fsm_state9, ap_CS_fsm_pp1_stage8, ap_enable_reg_pp1_iter1, ap_block_pp1_stage8_grp36, ap_block_pp1_stage8_subdone_grp36_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp36_done_reg) and (ap_const_boolean_0 = ap_block_pp1_stage8_grp36)))) then 
            gmem_output_blk_n_B <= m_axi_gmem_output_0_BVALID;
        else 
            gmem_output_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_output_blk_n_W_assign_proc : process(m_axi_gmem_output_0_WREADY, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage1_grp2, icmp_ln609_reg_1034, tmp_reg_1038, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_grp1, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4_grp4, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5_grp5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6_grp6, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7_grp7, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8_grp8, ap_block_pp1_stage8_subdone_grp8_done_reg, ap_CS_fsm_pp1_stage9, ap_block_pp1_stage9_grp9, ap_CS_fsm_pp1_stage10, ap_block_pp1_stage10_grp10, ap_CS_fsm_pp1_stage11, ap_block_pp1_stage11_grp11, ap_CS_fsm_pp1_stage12, ap_block_pp1_stage12_grp12, ap_CS_fsm_pp1_stage13, ap_block_pp1_stage13_grp13, ap_CS_fsm_pp1_stage14, ap_block_pp1_stage14_grp14, ap_CS_fsm_pp1_stage15, ap_block_pp1_stage15_grp15, ap_CS_fsm_pp1_stage16, ap_block_pp1_stage16_grp16, ap_CS_fsm_pp1_stage17, ap_block_pp1_stage17_grp17, ap_CS_fsm_pp1_stage18, ap_block_pp1_stage18_grp18, ap_CS_fsm_pp1_stage19, ap_block_pp1_stage19_grp19, ap_CS_fsm_pp1_stage20, ap_block_pp1_stage20_grp20, ap_CS_fsm_pp1_stage21, ap_block_pp1_stage21_grp21, ap_CS_fsm_pp1_stage22, ap_block_pp1_stage22_grp22, ap_CS_fsm_pp1_stage23, ap_block_pp1_stage23_grp23, ap_CS_fsm_pp1_stage24, ap_block_pp1_stage24_grp24, ap_CS_fsm_pp1_stage25, ap_block_pp1_stage25_grp25, ap_CS_fsm_pp1_stage26, ap_block_pp1_stage26_grp26, ap_CS_fsm_pp1_stage27, ap_block_pp1_stage27_grp27, ap_CS_fsm_pp1_stage28, ap_block_pp1_stage28_grp28, ap_CS_fsm_pp1_stage29, ap_block_pp1_stage29_grp29, ap_CS_fsm_pp1_stage30, ap_block_pp1_stage30_grp30, ap_CS_fsm_pp1_stage31, ap_block_pp1_stage31_grp31, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_grp32, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_grp34, ap_block_pp1_stage3_grp35, ap_block_pp1_stage3_subdone_grp35_done_reg)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_grp34)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_grp32)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35_done_reg) and (ap_const_boolean_0 = ap_block_pp1_stage3_grp35)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_grp2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage31_grp31) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage30) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and 
    (ap_const_boolean_0 = ap_block_pp1_stage30_grp30) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage29) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage29_grp29) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage28) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage28_grp28) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage27) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage27_grp27) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage26) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage26_grp26) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage25) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage25_grp25) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage24) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage24_grp24) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage23) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage23_grp23) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage22_grp22) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 
    = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage21_grp21) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage20_grp20) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage19_grp19) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage18_grp18) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage17_grp17) and (ap_enable_reg_pp1_iter0_reg 
    = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage16_grp16) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage15_grp15) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage14_grp14) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage13_grp13) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (tmp_reg_1038 = ap_const_lv1_1) 
    and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage12_grp12) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage11_grp11) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage10_grp10) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage9_grp9) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8_done_reg) 
    and (ap_const_boolean_0 = ap_block_pp1_stage8_grp8) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage7_grp7) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage6_grp6) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage5_grp5) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage4_grp4) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp1)))) then 
            gmem_output_blk_n_W <= m_axi_gmem_output_0_WREADY;
        else 
            gmem_output_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln600_fu_569_p2 <= "1" when (i_fu_232 = ap_const_lv24_A00000) else "0";
    icmp_ln609_fu_594_p2 <= "1" when (v_fu_236 = ap_const_lv14_2710) else "0";

    layer_pipeline_streams_8_blk_n_assign_proc : process(layer_pipeline_streams_8_empty_n, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0_reg, ap_block_pp1_stage1_grp2, icmp_ln609_reg_1034, tmp_reg_1038)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (tmp_reg_1038 = ap_const_lv1_1) and (icmp_ln609_reg_1034 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage1_grp2) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            layer_pipeline_streams_8_blk_n <= layer_pipeline_streams_8_empty_n;
        else 
            layer_pipeline_streams_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer_pipeline_streams_8_read_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0_reg, ap_predicate_op91_read_state11, ap_block_pp1_stage1_11001_grp2)
    begin
        if (((ap_predicate_op91_read_state11 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001_grp2) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            layer_pipeline_streams_8_read <= ap_const_logic_1;
        else 
            layer_pipeline_streams_8_read <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_output_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_output_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_output_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_output_0_ARID <= ap_const_lv1_0;
    m_axi_gmem_output_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_output_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_output_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_output_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_output_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_output_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_output_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_output_0_ARVALID <= ap_const_logic_0;

    m_axi_gmem_output_0_AWADDR_assign_proc : process(m_axi_gmem_output_0_AWREADY, ap_enable_reg_pp1_iter0_reg, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_subdone_grp3_done_reg, gmem_output_addr_reg_1018, gmem_output_addr_1_reg_1208, ap_predicate_op136_writereq_state13, ap_block_pp1_stage3_11001_grp3)
    begin
        if (((ap_predicate_op136_writereq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001_grp3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_AWADDR <= gmem_output_addr_1_reg_1208;
        elsif (((m_axi_gmem_output_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem_output_0_AWADDR <= gmem_output_addr_reg_1018;
        else 
            m_axi_gmem_output_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_output_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_output_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_output_0_AWID <= ap_const_lv1_0;

    m_axi_gmem_output_0_AWLEN_assign_proc : process(m_axi_gmem_output_0_AWREADY, ap_enable_reg_pp1_iter0_reg, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_subdone_grp3_done_reg, ap_predicate_op136_writereq_state13, ap_block_pp1_stage3_11001_grp3)
    begin
        if (((ap_predicate_op136_writereq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001_grp3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_AWLEN <= ap_const_lv64_20(32 - 1 downto 0);
        elsif (((m_axi_gmem_output_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem_output_0_AWLEN <= ap_const_lv64_A00000(32 - 1 downto 0);
        else 
            m_axi_gmem_output_0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_output_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_output_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_output_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_output_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_output_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_output_0_AWUSER <= ap_const_lv1_0;

    m_axi_gmem_output_0_AWVALID_assign_proc : process(m_axi_gmem_output_0_AWREADY, ap_enable_reg_pp1_iter0_reg, ap_CS_fsm_state2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_subdone_grp3_done_reg, ap_predicate_op136_writereq_state13, ap_block_pp1_stage3_11001_grp3)
    begin
        if ((((ap_predicate_op136_writereq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001_grp3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp3_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((m_axi_gmem_output_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_gmem_output_0_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_output_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_output_0_BREADY_assign_proc : process(m_axi_gmem_output_0_BVALID, ap_CS_fsm_state9, ap_CS_fsm_pp1_stage8, ap_enable_reg_pp1_iter1, ap_block_pp1_stage8_subdone_grp36_done_reg, ap_block_pp1_stage8_11001_grp36)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_11001_grp36) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp36_done_reg)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (m_axi_gmem_output_0_BVALID = ap_const_logic_1)))) then 
            m_axi_gmem_output_0_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_output_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_output_0_RREADY <= ap_const_logic_0;

    m_axi_gmem_output_0_WDATA_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8_subdone_grp8_done_reg, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage23, ap_CS_fsm_pp1_stage24, ap_CS_fsm_pp1_stage25, ap_CS_fsm_pp1_stage26, ap_CS_fsm_pp1_stage27, ap_CS_fsm_pp1_stage28, ap_CS_fsm_pp1_stage29, ap_CS_fsm_pp1_stage30, ap_CS_fsm_pp1_stage31, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage3_subdone_grp35_done_reg, output_voxel_features_reg_1042, output_voxel_features_9_reg_1047, trunc_ln615_3_reg_1052, trunc_ln615_4_reg_1057, trunc_ln615_5_reg_1062, trunc_ln615_6_reg_1067, trunc_ln615_7_reg_1072, trunc_ln615_8_reg_1077, trunc_ln615_9_reg_1082, trunc_ln615_s_reg_1087, trunc_ln615_1_reg_1092, trunc_ln615_2_reg_1097, trunc_ln615_10_reg_1102, trunc_ln615_11_reg_1107, trunc_ln615_12_reg_1112, trunc_ln615_13_reg_1117, trunc_ln615_14_reg_1122, trunc_ln615_15_reg_1127, trunc_ln615_16_reg_1132, trunc_ln615_17_reg_1137, trunc_ln615_18_reg_1142, trunc_ln615_19_reg_1147, trunc_ln615_20_reg_1152, trunc_ln615_21_reg_1157, trunc_ln615_22_reg_1162, trunc_ln615_23_reg_1167, trunc_ln615_24_reg_1172, trunc_ln615_25_reg_1177, trunc_ln615_26_reg_1182, trunc_ln615_27_reg_1187, trunc_ln615_28_reg_1192_pp1_iter1_reg, trunc_ln615_29_reg_1197_pp1_iter1_reg, ap_predicate_op164_write_state41, ap_predicate_op141_write_state18, ap_block_pp0_stage0_01001_grp1, ap_predicate_op137_write_state14, ap_block_pp1_stage4_01001_grp4, ap_predicate_op138_write_state15, ap_block_pp1_stage5_01001_grp5, ap_predicate_op139_write_state16, ap_block_pp1_stage6_01001_grp6, ap_predicate_op140_write_state17, ap_block_pp1_stage7_01001_grp7, ap_block_pp1_stage8_01001_grp8, ap_predicate_op142_write_state19, ap_block_pp1_stage9_01001_grp9, ap_predicate_op143_write_state20, ap_block_pp1_stage10_01001_grp10, ap_predicate_op144_write_state21, ap_block_pp1_stage11_01001_grp11, ap_predicate_op145_write_state22, ap_block_pp1_stage12_01001_grp12, ap_predicate_op146_write_state23, ap_block_pp1_stage13_01001_grp13, ap_predicate_op147_write_state24, ap_block_pp1_stage14_01001_grp14, ap_predicate_op148_write_state25, ap_block_pp1_stage15_01001_grp15, ap_predicate_op149_write_state26, ap_block_pp1_stage16_01001_grp16, ap_predicate_op150_write_state27, ap_block_pp1_stage17_01001_grp17, ap_predicate_op151_write_state28, ap_block_pp1_stage18_01001_grp18, ap_predicate_op152_write_state29, ap_block_pp1_stage19_01001_grp19, ap_predicate_op153_write_state30, ap_block_pp1_stage20_01001_grp20, ap_predicate_op154_write_state31, ap_block_pp1_stage21_01001_grp21, ap_predicate_op155_write_state32, ap_block_pp1_stage22_01001_grp22, ap_predicate_op156_write_state33, ap_block_pp1_stage23_01001_grp23, ap_predicate_op157_write_state34, ap_block_pp1_stage24_01001_grp24, ap_predicate_op158_write_state35, ap_block_pp1_stage25_01001_grp25, ap_predicate_op159_write_state36, ap_block_pp1_stage26_01001_grp26, ap_predicate_op160_write_state37, ap_block_pp1_stage27_01001_grp27, ap_predicate_op161_write_state38, ap_block_pp1_stage28_01001_grp28, ap_predicate_op162_write_state39, ap_block_pp1_stage29_01001_grp29, ap_predicate_op163_write_state40, ap_block_pp1_stage30_01001_grp30, ap_block_pp1_stage31_01001_grp31, ap_block_pp1_stage0_01001_grp32, ap_block_pp1_stage1_01001_grp2, ap_block_pp1_stage2_01001_grp34, ap_block_pp1_stage3_01001_grp35)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35_done_reg) and (ap_const_boolean_0 = ap_block_pp1_stage3_01001_grp35))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_29_reg_1197_pp1_iter1_reg;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_01001_grp34))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_28_reg_1192_pp1_iter1_reg;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_01001_grp2))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_27_reg_1187;
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001_grp32))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_26_reg_1182;
        elsif (((ap_predicate_op164_write_state41 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_const_boolean_0 = ap_block_pp1_stage31_01001_grp31) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_25_reg_1177;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage30) and (ap_const_boolean_0 = ap_block_pp1_stage30_01001_grp30) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op163_write_state40 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_24_reg_1172;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage29) and (ap_const_boolean_0 = ap_block_pp1_stage29_01001_grp29) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op162_write_state39 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_23_reg_1167;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage28) and (ap_const_boolean_0 = ap_block_pp1_stage28_01001_grp28) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op161_write_state38 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_22_reg_1162;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage27) and (ap_const_boolean_0 = ap_block_pp1_stage27_01001_grp27) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op160_write_state37 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_21_reg_1157;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage26) and (ap_const_boolean_0 = ap_block_pp1_stage26_01001_grp26) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op159_write_state36 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_20_reg_1152;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage25) and (ap_const_boolean_0 = ap_block_pp1_stage25_01001_grp25) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op158_write_state35 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_19_reg_1147;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage24) and (ap_const_boolean_0 = ap_block_pp1_stage24_01001_grp24) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op157_write_state34 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_18_reg_1142;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage23) and (ap_const_boolean_0 = ap_block_pp1_stage23_01001_grp23) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op156_write_state33 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_17_reg_1137;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_const_boolean_0 = ap_block_pp1_stage22_01001_grp22) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op155_write_state32 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_16_reg_1132;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_const_boolean_0 = ap_block_pp1_stage21_01001_grp21) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op154_write_state31 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_15_reg_1127;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_const_boolean_0 = ap_block_pp1_stage20_01001_grp20) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op153_write_state30 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_14_reg_1122;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_const_boolean_0 = ap_block_pp1_stage19_01001_grp19) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op152_write_state29 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_13_reg_1117;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_const_boolean_0 = ap_block_pp1_stage18_01001_grp18) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op151_write_state28 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_12_reg_1112;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_const_boolean_0 = ap_block_pp1_stage17_01001_grp17) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op150_write_state27 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_11_reg_1107;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_const_boolean_0 = ap_block_pp1_stage16_01001_grp16) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op149_write_state26 = ap_const_boolean_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_10_reg_1102;
        elsif (((ap_predicate_op148_write_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_const_boolean_0 = ap_block_pp1_stage15_01001_grp15) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_2_reg_1097;
        elsif (((ap_predicate_op147_write_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_const_boolean_0 = ap_block_pp1_stage14_01001_grp14) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_1_reg_1092;
        elsif (((ap_predicate_op146_write_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_const_boolean_0 = ap_block_pp1_stage13_01001_grp13) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_s_reg_1087;
        elsif (((ap_predicate_op145_write_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_const_boolean_0 = ap_block_pp1_stage12_01001_grp12) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_9_reg_1082;
        elsif (((ap_predicate_op144_write_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_const_boolean_0 = ap_block_pp1_stage11_01001_grp11) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_8_reg_1077;
        elsif (((ap_predicate_op143_write_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_const_boolean_0 = ap_block_pp1_stage10_01001_grp10) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_7_reg_1072;
        elsif (((ap_predicate_op142_write_state19 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_const_boolean_0 = ap_block_pp1_stage9_01001_grp9) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_6_reg_1067;
        elsif (((ap_predicate_op141_write_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_01001_grp8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_5_reg_1062;
        elsif (((ap_predicate_op140_write_state17 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_01001_grp7) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_4_reg_1057;
        elsif (((ap_predicate_op139_write_state16 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_01001_grp6) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= trunc_ln615_3_reg_1052;
        elsif (((ap_predicate_op138_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_01001_grp5) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= output_voxel_features_9_reg_1047;
        elsif (((ap_predicate_op137_write_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4_01001_grp4) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1))) then 
            m_axi_gmem_output_0_WDATA <= output_voxel_features_reg_1042;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001_grp1))) then 
            m_axi_gmem_output_0_WDATA <= ap_const_lv32_0;
        else 
            m_axi_gmem_output_0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_output_0_WID <= ap_const_lv1_0;
    m_axi_gmem_output_0_WLAST <= ap_const_logic_0;
    m_axi_gmem_output_0_WSTRB <= ap_const_lv4_F;
    m_axi_gmem_output_0_WUSER <= ap_const_lv1_0;

    m_axi_gmem_output_0_WVALID_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8_subdone_grp8_done_reg, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage23, ap_CS_fsm_pp1_stage24, ap_CS_fsm_pp1_stage25, ap_CS_fsm_pp1_stage26, ap_CS_fsm_pp1_stage27, ap_CS_fsm_pp1_stage28, ap_CS_fsm_pp1_stage29, ap_CS_fsm_pp1_stage30, ap_CS_fsm_pp1_stage31, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage3_subdone_grp35_done_reg, ap_block_pp1_stage1_11001_grp2, ap_block_pp1_stage2_11001_grp34, ap_predicate_op164_write_state41, ap_predicate_op141_write_state18, ap_block_pp0_stage0_11001_grp1, ap_predicate_op137_write_state14, ap_block_pp1_stage4_11001_grp4, ap_predicate_op138_write_state15, ap_block_pp1_stage5_11001_grp5, ap_predicate_op139_write_state16, ap_block_pp1_stage6_11001_grp6, ap_predicate_op140_write_state17, ap_block_pp1_stage7_11001_grp7, ap_block_pp1_stage8_11001_grp8, ap_predicate_op142_write_state19, ap_block_pp1_stage9_11001_grp9, ap_predicate_op143_write_state20, ap_block_pp1_stage10_11001_grp10, ap_predicate_op144_write_state21, ap_block_pp1_stage11_11001_grp11, ap_predicate_op145_write_state22, ap_block_pp1_stage12_11001_grp12, ap_predicate_op146_write_state23, ap_block_pp1_stage13_11001_grp13, ap_predicate_op147_write_state24, ap_block_pp1_stage14_11001_grp14, ap_predicate_op148_write_state25, ap_block_pp1_stage15_11001_grp15, ap_predicate_op149_write_state26, ap_block_pp1_stage16_11001_grp16, ap_predicate_op150_write_state27, ap_block_pp1_stage17_11001_grp17, ap_predicate_op151_write_state28, ap_block_pp1_stage18_11001_grp18, ap_predicate_op152_write_state29, ap_block_pp1_stage19_11001_grp19, ap_predicate_op153_write_state30, ap_block_pp1_stage20_11001_grp20, ap_predicate_op154_write_state31, ap_block_pp1_stage21_11001_grp21, ap_predicate_op155_write_state32, ap_block_pp1_stage22_11001_grp22, ap_predicate_op156_write_state33, ap_block_pp1_stage23_11001_grp23, ap_predicate_op157_write_state34, ap_block_pp1_stage24_11001_grp24, ap_predicate_op158_write_state35, ap_block_pp1_stage25_11001_grp25, ap_predicate_op159_write_state36, ap_block_pp1_stage26_11001_grp26, ap_predicate_op160_write_state37, ap_block_pp1_stage27_11001_grp27, ap_predicate_op161_write_state38, ap_block_pp1_stage28_11001_grp28, ap_predicate_op162_write_state39, ap_block_pp1_stage29_11001_grp29, ap_predicate_op163_write_state40, ap_block_pp1_stage30_11001_grp30, ap_block_pp1_stage31_11001_grp31, ap_block_pp1_stage0_11001_grp32, ap_block_pp1_stage3_11001_grp35)
    begin
        if ((((ap_predicate_op147_write_state24 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_const_boolean_0 = ap_block_pp1_stage14_11001_grp14) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op146_write_state23 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_const_boolean_0 = ap_block_pp1_stage13_11001_grp13) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op145_write_state22 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_const_boolean_0 = ap_block_pp1_stage12_11001_grp12) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op144_write_state21 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_const_boolean_0 = ap_block_pp1_stage11_11001_grp11) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op143_write_state20 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_const_boolean_0 = ap_block_pp1_stage10_11001_grp10) 
    and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op142_write_state19 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_const_boolean_0 = ap_block_pp1_stage9_11001_grp9) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op140_write_state17 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7_11001_grp7) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op139_write_state16 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6_11001_grp6) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op138_write_state15 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5_11001_grp5) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op137_write_state14 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) 
    and (ap_const_boolean_0 = ap_block_pp1_stage4_11001_grp4) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op141_write_state18 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8_11001_grp8) and (ap_const_boolean_0 = ap_block_pp1_stage8_subdone_grp8_done_reg) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_predicate_op164_write_state41 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage31) and (ap_const_boolean_0 = ap_block_pp1_stage31_11001_grp31) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2_11001_grp34)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001_grp32)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) 
    and (ap_const_boolean_0 = ap_block_pp1_stage3_subdone_grp35_done_reg) and (ap_const_boolean_0 = ap_block_pp1_stage3_11001_grp35)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1_11001_grp2)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage30) and (ap_const_boolean_0 = ap_block_pp1_stage30_11001_grp30) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op163_write_state40 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage29) and (ap_const_boolean_0 = ap_block_pp1_stage29_11001_grp29) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op162_write_state39 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage28) and (ap_const_boolean_0 = ap_block_pp1_stage28_11001_grp28) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op161_write_state38 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage27) and (ap_const_boolean_0 = ap_block_pp1_stage27_11001_grp27) 
    and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op160_write_state37 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage26) and (ap_const_boolean_0 = ap_block_pp1_stage26_11001_grp26) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op159_write_state36 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage25) and (ap_const_boolean_0 = ap_block_pp1_stage25_11001_grp25) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op158_write_state35 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage24) and (ap_const_boolean_0 = ap_block_pp1_stage24_11001_grp24) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op157_write_state34 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage23) and (ap_const_boolean_0 = ap_block_pp1_stage23_11001_grp23) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op156_write_state33 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage22) 
    and (ap_const_boolean_0 = ap_block_pp1_stage22_11001_grp22) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op155_write_state32 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_const_boolean_0 = ap_block_pp1_stage21_11001_grp21) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op154_write_state31 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_const_boolean_0 = ap_block_pp1_stage20_11001_grp20) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op153_write_state30 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_const_boolean_0 = ap_block_pp1_stage19_11001_grp19) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op152_write_state29 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_const_boolean_0 = ap_block_pp1_stage18_11001_grp18) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op151_write_state28 
    = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_const_boolean_0 = ap_block_pp1_stage17_11001_grp17) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op150_write_state27 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_const_boolean_0 = ap_block_pp1_stage16_11001_grp16) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1) and (ap_predicate_op149_write_state26 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1)) or ((ap_predicate_op148_write_state25 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_const_boolean_0 = ap_block_pp1_stage15_11001_grp15) and (ap_enable_reg_pp1_iter0_reg = ap_const_logic_1)))) then 
            m_axi_gmem_output_0_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_output_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    p_shl6_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_646_fu_952_p3),24));
    p_shl_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_645_fu_941_p3),24));
        sext_ln600_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_541_p4),64));

        sext_ln626_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_986_p4),64));

    shl_ln_fu_969_p3 <= (full_cubic_addr_fu_963_p2 & ap_const_lv2_0);
    tmp_645_fu_941_p3 <= (tmp_644_reg_1202 & ap_const_lv5_0);
    tmp_646_fu_952_p3 <= (tmp_644_reg_1202 & ap_const_lv3_0);
    tmp_nbreadreq_fu_263_p3 <= (0=>(layer_pipeline_streams_8_empty_n), others=>'-');
    trunc_ln1_fu_986_p4 <= add_ln628_fu_981_p2(63 downto 2);
    trunc_ln_fu_541_p4 <= full_cubic_output_dout(63 downto 2);
    v_2_fu_600_p2 <= std_logic_vector(unsigned(v_fu_236) + unsigned(ap_const_lv14_1));
    zext_ln628_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_969_p3),64));
end behav;
