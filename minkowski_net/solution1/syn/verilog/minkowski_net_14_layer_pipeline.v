// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="minkowski_net_14_layer_pipeline_minkowski_net_14_layer_pipeline,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.330000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=44,HLS_SYN_DSP=0,HLS_SYN_FF=49338,HLS_SYN_LUT=48796,HLS_VERSION=2024_2}" *)

module minkowski_net_14_layer_pipeline (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_output_AWVALID,
        m_axi_gmem_output_AWREADY,
        m_axi_gmem_output_AWADDR,
        m_axi_gmem_output_AWID,
        m_axi_gmem_output_AWLEN,
        m_axi_gmem_output_AWSIZE,
        m_axi_gmem_output_AWBURST,
        m_axi_gmem_output_AWLOCK,
        m_axi_gmem_output_AWCACHE,
        m_axi_gmem_output_AWPROT,
        m_axi_gmem_output_AWQOS,
        m_axi_gmem_output_AWREGION,
        m_axi_gmem_output_AWUSER,
        m_axi_gmem_output_WVALID,
        m_axi_gmem_output_WREADY,
        m_axi_gmem_output_WDATA,
        m_axi_gmem_output_WSTRB,
        m_axi_gmem_output_WLAST,
        m_axi_gmem_output_WID,
        m_axi_gmem_output_WUSER,
        m_axi_gmem_output_ARVALID,
        m_axi_gmem_output_ARREADY,
        m_axi_gmem_output_ARADDR,
        m_axi_gmem_output_ARID,
        m_axi_gmem_output_ARLEN,
        m_axi_gmem_output_ARSIZE,
        m_axi_gmem_output_ARBURST,
        m_axi_gmem_output_ARLOCK,
        m_axi_gmem_output_ARCACHE,
        m_axi_gmem_output_ARPROT,
        m_axi_gmem_output_ARQOS,
        m_axi_gmem_output_ARREGION,
        m_axi_gmem_output_ARUSER,
        m_axi_gmem_output_RVALID,
        m_axi_gmem_output_RREADY,
        m_axi_gmem_output_RDATA,
        m_axi_gmem_output_RLAST,
        m_axi_gmem_output_RID,
        m_axi_gmem_output_RUSER,
        m_axi_gmem_output_RRESP,
        m_axi_gmem_output_BVALID,
        m_axi_gmem_output_BREADY,
        m_axi_gmem_output_BRESP,
        m_axi_gmem_output_BID,
        m_axi_gmem_output_BUSER,
        m_axi_gmem_read_AWVALID,
        m_axi_gmem_read_AWREADY,
        m_axi_gmem_read_AWADDR,
        m_axi_gmem_read_AWID,
        m_axi_gmem_read_AWLEN,
        m_axi_gmem_read_AWSIZE,
        m_axi_gmem_read_AWBURST,
        m_axi_gmem_read_AWLOCK,
        m_axi_gmem_read_AWCACHE,
        m_axi_gmem_read_AWPROT,
        m_axi_gmem_read_AWQOS,
        m_axi_gmem_read_AWREGION,
        m_axi_gmem_read_AWUSER,
        m_axi_gmem_read_WVALID,
        m_axi_gmem_read_WREADY,
        m_axi_gmem_read_WDATA,
        m_axi_gmem_read_WSTRB,
        m_axi_gmem_read_WLAST,
        m_axi_gmem_read_WID,
        m_axi_gmem_read_WUSER,
        m_axi_gmem_read_ARVALID,
        m_axi_gmem_read_ARREADY,
        m_axi_gmem_read_ARADDR,
        m_axi_gmem_read_ARID,
        m_axi_gmem_read_ARLEN,
        m_axi_gmem_read_ARSIZE,
        m_axi_gmem_read_ARBURST,
        m_axi_gmem_read_ARLOCK,
        m_axi_gmem_read_ARCACHE,
        m_axi_gmem_read_ARPROT,
        m_axi_gmem_read_ARQOS,
        m_axi_gmem_read_ARREGION,
        m_axi_gmem_read_ARUSER,
        m_axi_gmem_read_RVALID,
        m_axi_gmem_read_RREADY,
        m_axi_gmem_read_RDATA,
        m_axi_gmem_read_RLAST,
        m_axi_gmem_read_RID,
        m_axi_gmem_read_RUSER,
        m_axi_gmem_read_RRESP,
        m_axi_gmem_read_BVALID,
        m_axi_gmem_read_BREADY,
        m_axi_gmem_read_BRESP,
        m_axi_gmem_read_BID,
        m_axi_gmem_read_BUSER,
        m_axi_gmem_write_AWVALID,
        m_axi_gmem_write_AWREADY,
        m_axi_gmem_write_AWADDR,
        m_axi_gmem_write_AWID,
        m_axi_gmem_write_AWLEN,
        m_axi_gmem_write_AWSIZE,
        m_axi_gmem_write_AWBURST,
        m_axi_gmem_write_AWLOCK,
        m_axi_gmem_write_AWCACHE,
        m_axi_gmem_write_AWPROT,
        m_axi_gmem_write_AWQOS,
        m_axi_gmem_write_AWREGION,
        m_axi_gmem_write_AWUSER,
        m_axi_gmem_write_WVALID,
        m_axi_gmem_write_WREADY,
        m_axi_gmem_write_WDATA,
        m_axi_gmem_write_WSTRB,
        m_axi_gmem_write_WLAST,
        m_axi_gmem_write_WID,
        m_axi_gmem_write_WUSER,
        m_axi_gmem_write_ARVALID,
        m_axi_gmem_write_ARREADY,
        m_axi_gmem_write_ARADDR,
        m_axi_gmem_write_ARID,
        m_axi_gmem_write_ARLEN,
        m_axi_gmem_write_ARSIZE,
        m_axi_gmem_write_ARBURST,
        m_axi_gmem_write_ARLOCK,
        m_axi_gmem_write_ARCACHE,
        m_axi_gmem_write_ARPROT,
        m_axi_gmem_write_ARQOS,
        m_axi_gmem_write_ARREGION,
        m_axi_gmem_write_ARUSER,
        m_axi_gmem_write_RVALID,
        m_axi_gmem_write_RREADY,
        m_axi_gmem_write_RDATA,
        m_axi_gmem_write_RLAST,
        m_axi_gmem_write_RID,
        m_axi_gmem_write_RUSER,
        m_axi_gmem_write_RRESP,
        m_axi_gmem_write_BVALID,
        m_axi_gmem_write_BREADY,
        m_axi_gmem_write_BRESP,
        m_axi_gmem_write_BID,
        m_axi_gmem_write_BUSER,
        input_voxel_stream_dout,
        input_voxel_stream_empty_n,
        input_voxel_stream_read,
        layer_weights_0_Addr_A,
        layer_weights_0_EN_A,
        layer_weights_0_WEN_A,
        layer_weights_0_Din_A,
        layer_weights_0_Dout_A,
        layer_weights_0_Clk_A,
        layer_weights_0_Rst_A,
        layer_weights_1_Addr_A,
        layer_weights_1_EN_A,
        layer_weights_1_WEN_A,
        layer_weights_1_Din_A,
        layer_weights_1_Dout_A,
        layer_weights_1_Clk_A,
        layer_weights_1_Rst_A,
        layer_weights_2_Addr_A,
        layer_weights_2_EN_A,
        layer_weights_2_WEN_A,
        layer_weights_2_Din_A,
        layer_weights_2_Dout_A,
        layer_weights_2_Clk_A,
        layer_weights_2_Rst_A,
        layer_weights_3_Addr_A,
        layer_weights_3_EN_A,
        layer_weights_3_WEN_A,
        layer_weights_3_Din_A,
        layer_weights_3_Dout_A,
        layer_weights_3_Clk_A,
        layer_weights_3_Rst_A,
        layer_weights_4_Addr_A,
        layer_weights_4_EN_A,
        layer_weights_4_WEN_A,
        layer_weights_4_Din_A,
        layer_weights_4_Dout_A,
        layer_weights_4_Clk_A,
        layer_weights_4_Rst_A,
        layer_weights_5_Addr_A,
        layer_weights_5_EN_A,
        layer_weights_5_WEN_A,
        layer_weights_5_Din_A,
        layer_weights_5_Dout_A,
        layer_weights_5_Clk_A,
        layer_weights_5_Rst_A,
        layer_weights_6_Addr_A,
        layer_weights_6_EN_A,
        layer_weights_6_WEN_A,
        layer_weights_6_Din_A,
        layer_weights_6_Dout_A,
        layer_weights_6_Clk_A,
        layer_weights_6_Rst_A,
        layer_weights_7_Addr_A,
        layer_weights_7_EN_A,
        layer_weights_7_WEN_A,
        layer_weights_7_Din_A,
        layer_weights_7_Dout_A,
        layer_weights_7_Clk_A,
        layer_weights_7_Rst_A,
        layer_weights_8_Addr_A,
        layer_weights_8_EN_A,
        layer_weights_8_WEN_A,
        layer_weights_8_Din_A,
        layer_weights_8_Dout_A,
        layer_weights_8_Clk_A,
        layer_weights_8_Rst_A,
        layer_weights_9_Addr_A,
        layer_weights_9_EN_A,
        layer_weights_9_WEN_A,
        layer_weights_9_Din_A,
        layer_weights_9_Dout_A,
        layer_weights_9_Clk_A,
        layer_weights_9_Rst_A,
        layer_weights_10_Addr_A,
        layer_weights_10_EN_A,
        layer_weights_10_WEN_A,
        layer_weights_10_Din_A,
        layer_weights_10_Dout_A,
        layer_weights_10_Clk_A,
        layer_weights_10_Rst_A,
        layer_weights_11_Addr_A,
        layer_weights_11_EN_A,
        layer_weights_11_WEN_A,
        layer_weights_11_Din_A,
        layer_weights_11_Dout_A,
        layer_weights_11_Clk_A,
        layer_weights_11_Rst_A,
        layer_weights_12_Addr_A,
        layer_weights_12_EN_A,
        layer_weights_12_WEN_A,
        layer_weights_12_Din_A,
        layer_weights_12_Dout_A,
        layer_weights_12_Clk_A,
        layer_weights_12_Rst_A,
        layer_weights_13_Addr_A,
        layer_weights_13_EN_A,
        layer_weights_13_WEN_A,
        layer_weights_13_Din_A,
        layer_weights_13_Dout_A,
        layer_weights_13_Clk_A,
        layer_weights_13_Rst_A,
        layer_biases_0_Addr_A,
        layer_biases_0_EN_A,
        layer_biases_0_WEN_A,
        layer_biases_0_Din_A,
        layer_biases_0_Dout_A,
        layer_biases_0_Clk_A,
        layer_biases_0_Rst_A,
        layer_biases_1_Addr_A,
        layer_biases_1_EN_A,
        layer_biases_1_WEN_A,
        layer_biases_1_Din_A,
        layer_biases_1_Dout_A,
        layer_biases_1_Clk_A,
        layer_biases_1_Rst_A,
        layer_biases_2_Addr_A,
        layer_biases_2_EN_A,
        layer_biases_2_WEN_A,
        layer_biases_2_Din_A,
        layer_biases_2_Dout_A,
        layer_biases_2_Clk_A,
        layer_biases_2_Rst_A,
        layer_biases_3_Addr_A,
        layer_biases_3_EN_A,
        layer_biases_3_WEN_A,
        layer_biases_3_Din_A,
        layer_biases_3_Dout_A,
        layer_biases_3_Clk_A,
        layer_biases_3_Rst_A,
        layer_biases_4_Addr_A,
        layer_biases_4_EN_A,
        layer_biases_4_WEN_A,
        layer_biases_4_Din_A,
        layer_biases_4_Dout_A,
        layer_biases_4_Clk_A,
        layer_biases_4_Rst_A,
        layer_biases_5_Addr_A,
        layer_biases_5_EN_A,
        layer_biases_5_WEN_A,
        layer_biases_5_Din_A,
        layer_biases_5_Dout_A,
        layer_biases_5_Clk_A,
        layer_biases_5_Rst_A,
        layer_biases_6_Addr_A,
        layer_biases_6_EN_A,
        layer_biases_6_WEN_A,
        layer_biases_6_Din_A,
        layer_biases_6_Dout_A,
        layer_biases_6_Clk_A,
        layer_biases_6_Rst_A,
        layer_biases_7_Addr_A,
        layer_biases_7_EN_A,
        layer_biases_7_WEN_A,
        layer_biases_7_Din_A,
        layer_biases_7_Dout_A,
        layer_biases_7_Clk_A,
        layer_biases_7_Rst_A,
        layer_biases_8_Addr_A,
        layer_biases_8_EN_A,
        layer_biases_8_WEN_A,
        layer_biases_8_Din_A,
        layer_biases_8_Dout_A,
        layer_biases_8_Clk_A,
        layer_biases_8_Rst_A,
        layer_biases_9_Addr_A,
        layer_biases_9_EN_A,
        layer_biases_9_WEN_A,
        layer_biases_9_Din_A,
        layer_biases_9_Dout_A,
        layer_biases_9_Clk_A,
        layer_biases_9_Rst_A,
        layer_biases_10_Addr_A,
        layer_biases_10_EN_A,
        layer_biases_10_WEN_A,
        layer_biases_10_Din_A,
        layer_biases_10_Dout_A,
        layer_biases_10_Clk_A,
        layer_biases_10_Rst_A,
        layer_biases_11_Addr_A,
        layer_biases_11_EN_A,
        layer_biases_11_WEN_A,
        layer_biases_11_Din_A,
        layer_biases_11_Dout_A,
        layer_biases_11_Clk_A,
        layer_biases_11_Rst_A,
        layer_biases_12_Addr_A,
        layer_biases_12_EN_A,
        layer_biases_12_WEN_A,
        layer_biases_12_Din_A,
        layer_biases_12_Dout_A,
        layer_biases_12_Clk_A,
        layer_biases_12_Rst_A,
        layer_biases_13_Addr_A,
        layer_biases_13_EN_A,
        layer_biases_13_WEN_A,
        layer_biases_13_Din_A,
        layer_biases_13_Dout_A,
        layer_biases_13_Clk_A,
        layer_biases_13_Rst_A,
        L3_bitmap_i,
        L3_bitmap_o,
        L3_bitmap_o_ap_vld,
        L2_bitmap_i,
        L2_bitmap_o,
        L2_bitmap_o_ap_vld,
        L1_bitmap_i,
        L1_bitmap_o,
        L1_bitmap_o_ap_vld,
        L0_bitmap_i,
        L0_bitmap_o,
        L0_bitmap_o_ap_vld,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_pp0_stage0 = 16'd8;
parameter    ap_ST_fsm_pp0_stage1 = 16'd16;
parameter    ap_ST_fsm_pp0_stage2 = 16'd32;
parameter    ap_ST_fsm_state14 = 16'd64;
parameter    ap_ST_fsm_state15 = 16'd128;
parameter    ap_ST_fsm_state16 = 16'd256;
parameter    ap_ST_fsm_state17 = 16'd512;
parameter    ap_ST_fsm_state18 = 16'd1024;
parameter    ap_ST_fsm_state19 = 16'd2048;
parameter    ap_ST_fsm_state20 = 16'd4096;
parameter    ap_ST_fsm_state21 = 16'd8192;
parameter    ap_ST_fsm_state22 = 16'd16384;
parameter    ap_ST_fsm_state23 = 16'd32768;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_OUTPUT_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_OUTPUT_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_OUTPUT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUTPUT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUTPUT_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUTPUT_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUTPUT_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_OUTPUT_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_OUTPUT_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_OUTPUT_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_READ_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_READ_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_READ_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_READ_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_READ_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_READ_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_READ_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_READ_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_READ_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_READ_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_READ_CACHE_VALUE = 3;
parameter    C_M_AXI_GMEM_WRITE_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_WRITE_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_WRITE_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_WRITE_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WRITE_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WRITE_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WRITE_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WRITE_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WRITE_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_WRITE_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_WRITE_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_OUTPUT_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_READ_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WRITE_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_output_AWVALID;
input   m_axi_gmem_output_AWREADY;
output  [C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH - 1:0] m_axi_gmem_output_AWADDR;
output  [C_M_AXI_GMEM_OUTPUT_ID_WIDTH - 1:0] m_axi_gmem_output_AWID;
output  [7:0] m_axi_gmem_output_AWLEN;
output  [2:0] m_axi_gmem_output_AWSIZE;
output  [1:0] m_axi_gmem_output_AWBURST;
output  [1:0] m_axi_gmem_output_AWLOCK;
output  [3:0] m_axi_gmem_output_AWCACHE;
output  [2:0] m_axi_gmem_output_AWPROT;
output  [3:0] m_axi_gmem_output_AWQOS;
output  [3:0] m_axi_gmem_output_AWREGION;
output  [C_M_AXI_GMEM_OUTPUT_AWUSER_WIDTH - 1:0] m_axi_gmem_output_AWUSER;
output   m_axi_gmem_output_WVALID;
input   m_axi_gmem_output_WREADY;
output  [C_M_AXI_GMEM_OUTPUT_DATA_WIDTH - 1:0] m_axi_gmem_output_WDATA;
output  [C_M_AXI_GMEM_OUTPUT_WSTRB_WIDTH - 1:0] m_axi_gmem_output_WSTRB;
output   m_axi_gmem_output_WLAST;
output  [C_M_AXI_GMEM_OUTPUT_ID_WIDTH - 1:0] m_axi_gmem_output_WID;
output  [C_M_AXI_GMEM_OUTPUT_WUSER_WIDTH - 1:0] m_axi_gmem_output_WUSER;
output   m_axi_gmem_output_ARVALID;
input   m_axi_gmem_output_ARREADY;
output  [C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH - 1:0] m_axi_gmem_output_ARADDR;
output  [C_M_AXI_GMEM_OUTPUT_ID_WIDTH - 1:0] m_axi_gmem_output_ARID;
output  [7:0] m_axi_gmem_output_ARLEN;
output  [2:0] m_axi_gmem_output_ARSIZE;
output  [1:0] m_axi_gmem_output_ARBURST;
output  [1:0] m_axi_gmem_output_ARLOCK;
output  [3:0] m_axi_gmem_output_ARCACHE;
output  [2:0] m_axi_gmem_output_ARPROT;
output  [3:0] m_axi_gmem_output_ARQOS;
output  [3:0] m_axi_gmem_output_ARREGION;
output  [C_M_AXI_GMEM_OUTPUT_ARUSER_WIDTH - 1:0] m_axi_gmem_output_ARUSER;
input   m_axi_gmem_output_RVALID;
output   m_axi_gmem_output_RREADY;
input  [C_M_AXI_GMEM_OUTPUT_DATA_WIDTH - 1:0] m_axi_gmem_output_RDATA;
input   m_axi_gmem_output_RLAST;
input  [C_M_AXI_GMEM_OUTPUT_ID_WIDTH - 1:0] m_axi_gmem_output_RID;
input  [C_M_AXI_GMEM_OUTPUT_RUSER_WIDTH - 1:0] m_axi_gmem_output_RUSER;
input  [1:0] m_axi_gmem_output_RRESP;
input   m_axi_gmem_output_BVALID;
output   m_axi_gmem_output_BREADY;
input  [1:0] m_axi_gmem_output_BRESP;
input  [C_M_AXI_GMEM_OUTPUT_ID_WIDTH - 1:0] m_axi_gmem_output_BID;
input  [C_M_AXI_GMEM_OUTPUT_BUSER_WIDTH - 1:0] m_axi_gmem_output_BUSER;
output   m_axi_gmem_read_AWVALID;
input   m_axi_gmem_read_AWREADY;
output  [C_M_AXI_GMEM_READ_ADDR_WIDTH - 1:0] m_axi_gmem_read_AWADDR;
output  [C_M_AXI_GMEM_READ_ID_WIDTH - 1:0] m_axi_gmem_read_AWID;
output  [7:0] m_axi_gmem_read_AWLEN;
output  [2:0] m_axi_gmem_read_AWSIZE;
output  [1:0] m_axi_gmem_read_AWBURST;
output  [1:0] m_axi_gmem_read_AWLOCK;
output  [3:0] m_axi_gmem_read_AWCACHE;
output  [2:0] m_axi_gmem_read_AWPROT;
output  [3:0] m_axi_gmem_read_AWQOS;
output  [3:0] m_axi_gmem_read_AWREGION;
output  [C_M_AXI_GMEM_READ_AWUSER_WIDTH - 1:0] m_axi_gmem_read_AWUSER;
output   m_axi_gmem_read_WVALID;
input   m_axi_gmem_read_WREADY;
output  [C_M_AXI_GMEM_READ_DATA_WIDTH - 1:0] m_axi_gmem_read_WDATA;
output  [C_M_AXI_GMEM_READ_WSTRB_WIDTH - 1:0] m_axi_gmem_read_WSTRB;
output   m_axi_gmem_read_WLAST;
output  [C_M_AXI_GMEM_READ_ID_WIDTH - 1:0] m_axi_gmem_read_WID;
output  [C_M_AXI_GMEM_READ_WUSER_WIDTH - 1:0] m_axi_gmem_read_WUSER;
output   m_axi_gmem_read_ARVALID;
input   m_axi_gmem_read_ARREADY;
output  [C_M_AXI_GMEM_READ_ADDR_WIDTH - 1:0] m_axi_gmem_read_ARADDR;
output  [C_M_AXI_GMEM_READ_ID_WIDTH - 1:0] m_axi_gmem_read_ARID;
output  [7:0] m_axi_gmem_read_ARLEN;
output  [2:0] m_axi_gmem_read_ARSIZE;
output  [1:0] m_axi_gmem_read_ARBURST;
output  [1:0] m_axi_gmem_read_ARLOCK;
output  [3:0] m_axi_gmem_read_ARCACHE;
output  [2:0] m_axi_gmem_read_ARPROT;
output  [3:0] m_axi_gmem_read_ARQOS;
output  [3:0] m_axi_gmem_read_ARREGION;
output  [C_M_AXI_GMEM_READ_ARUSER_WIDTH - 1:0] m_axi_gmem_read_ARUSER;
input   m_axi_gmem_read_RVALID;
output   m_axi_gmem_read_RREADY;
input  [C_M_AXI_GMEM_READ_DATA_WIDTH - 1:0] m_axi_gmem_read_RDATA;
input   m_axi_gmem_read_RLAST;
input  [C_M_AXI_GMEM_READ_ID_WIDTH - 1:0] m_axi_gmem_read_RID;
input  [C_M_AXI_GMEM_READ_RUSER_WIDTH - 1:0] m_axi_gmem_read_RUSER;
input  [1:0] m_axi_gmem_read_RRESP;
input   m_axi_gmem_read_BVALID;
output   m_axi_gmem_read_BREADY;
input  [1:0] m_axi_gmem_read_BRESP;
input  [C_M_AXI_GMEM_READ_ID_WIDTH - 1:0] m_axi_gmem_read_BID;
input  [C_M_AXI_GMEM_READ_BUSER_WIDTH - 1:0] m_axi_gmem_read_BUSER;
output   m_axi_gmem_write_AWVALID;
input   m_axi_gmem_write_AWREADY;
output  [C_M_AXI_GMEM_WRITE_ADDR_WIDTH - 1:0] m_axi_gmem_write_AWADDR;
output  [C_M_AXI_GMEM_WRITE_ID_WIDTH - 1:0] m_axi_gmem_write_AWID;
output  [7:0] m_axi_gmem_write_AWLEN;
output  [2:0] m_axi_gmem_write_AWSIZE;
output  [1:0] m_axi_gmem_write_AWBURST;
output  [1:0] m_axi_gmem_write_AWLOCK;
output  [3:0] m_axi_gmem_write_AWCACHE;
output  [2:0] m_axi_gmem_write_AWPROT;
output  [3:0] m_axi_gmem_write_AWQOS;
output  [3:0] m_axi_gmem_write_AWREGION;
output  [C_M_AXI_GMEM_WRITE_AWUSER_WIDTH - 1:0] m_axi_gmem_write_AWUSER;
output   m_axi_gmem_write_WVALID;
input   m_axi_gmem_write_WREADY;
output  [C_M_AXI_GMEM_WRITE_DATA_WIDTH - 1:0] m_axi_gmem_write_WDATA;
output  [C_M_AXI_GMEM_WRITE_WSTRB_WIDTH - 1:0] m_axi_gmem_write_WSTRB;
output   m_axi_gmem_write_WLAST;
output  [C_M_AXI_GMEM_WRITE_ID_WIDTH - 1:0] m_axi_gmem_write_WID;
output  [C_M_AXI_GMEM_WRITE_WUSER_WIDTH - 1:0] m_axi_gmem_write_WUSER;
output   m_axi_gmem_write_ARVALID;
input   m_axi_gmem_write_ARREADY;
output  [C_M_AXI_GMEM_WRITE_ADDR_WIDTH - 1:0] m_axi_gmem_write_ARADDR;
output  [C_M_AXI_GMEM_WRITE_ID_WIDTH - 1:0] m_axi_gmem_write_ARID;
output  [7:0] m_axi_gmem_write_ARLEN;
output  [2:0] m_axi_gmem_write_ARSIZE;
output  [1:0] m_axi_gmem_write_ARBURST;
output  [1:0] m_axi_gmem_write_ARLOCK;
output  [3:0] m_axi_gmem_write_ARCACHE;
output  [2:0] m_axi_gmem_write_ARPROT;
output  [3:0] m_axi_gmem_write_ARQOS;
output  [3:0] m_axi_gmem_write_ARREGION;
output  [C_M_AXI_GMEM_WRITE_ARUSER_WIDTH - 1:0] m_axi_gmem_write_ARUSER;
input   m_axi_gmem_write_RVALID;
output   m_axi_gmem_write_RREADY;
input  [C_M_AXI_GMEM_WRITE_DATA_WIDTH - 1:0] m_axi_gmem_write_RDATA;
input   m_axi_gmem_write_RLAST;
input  [C_M_AXI_GMEM_WRITE_ID_WIDTH - 1:0] m_axi_gmem_write_RID;
input  [C_M_AXI_GMEM_WRITE_RUSER_WIDTH - 1:0] m_axi_gmem_write_RUSER;
input  [1:0] m_axi_gmem_write_RRESP;
input   m_axi_gmem_write_BVALID;
output   m_axi_gmem_write_BREADY;
input  [1:0] m_axi_gmem_write_BRESP;
input  [C_M_AXI_GMEM_WRITE_ID_WIDTH - 1:0] m_axi_gmem_write_BID;
input  [C_M_AXI_GMEM_WRITE_BUSER_WIDTH - 1:0] m_axi_gmem_write_BUSER;
input  [1084:0] input_voxel_stream_dout;
input   input_voxel_stream_empty_n;
output   input_voxel_stream_read;
output  [31:0] layer_weights_0_Addr_A;
output   layer_weights_0_EN_A;
output  [3:0] layer_weights_0_WEN_A;
output  [31:0] layer_weights_0_Din_A;
input  [31:0] layer_weights_0_Dout_A;
output   layer_weights_0_Clk_A;
output   layer_weights_0_Rst_A;
output  [31:0] layer_weights_1_Addr_A;
output   layer_weights_1_EN_A;
output  [3:0] layer_weights_1_WEN_A;
output  [31:0] layer_weights_1_Din_A;
input  [31:0] layer_weights_1_Dout_A;
output   layer_weights_1_Clk_A;
output   layer_weights_1_Rst_A;
output  [31:0] layer_weights_2_Addr_A;
output   layer_weights_2_EN_A;
output  [3:0] layer_weights_2_WEN_A;
output  [31:0] layer_weights_2_Din_A;
input  [31:0] layer_weights_2_Dout_A;
output   layer_weights_2_Clk_A;
output   layer_weights_2_Rst_A;
output  [31:0] layer_weights_3_Addr_A;
output   layer_weights_3_EN_A;
output  [3:0] layer_weights_3_WEN_A;
output  [31:0] layer_weights_3_Din_A;
input  [31:0] layer_weights_3_Dout_A;
output   layer_weights_3_Clk_A;
output   layer_weights_3_Rst_A;
output  [31:0] layer_weights_4_Addr_A;
output   layer_weights_4_EN_A;
output  [3:0] layer_weights_4_WEN_A;
output  [31:0] layer_weights_4_Din_A;
input  [31:0] layer_weights_4_Dout_A;
output   layer_weights_4_Clk_A;
output   layer_weights_4_Rst_A;
output  [31:0] layer_weights_5_Addr_A;
output   layer_weights_5_EN_A;
output  [3:0] layer_weights_5_WEN_A;
output  [31:0] layer_weights_5_Din_A;
input  [31:0] layer_weights_5_Dout_A;
output   layer_weights_5_Clk_A;
output   layer_weights_5_Rst_A;
output  [31:0] layer_weights_6_Addr_A;
output   layer_weights_6_EN_A;
output  [3:0] layer_weights_6_WEN_A;
output  [31:0] layer_weights_6_Din_A;
input  [31:0] layer_weights_6_Dout_A;
output   layer_weights_6_Clk_A;
output   layer_weights_6_Rst_A;
output  [31:0] layer_weights_7_Addr_A;
output   layer_weights_7_EN_A;
output  [3:0] layer_weights_7_WEN_A;
output  [31:0] layer_weights_7_Din_A;
input  [31:0] layer_weights_7_Dout_A;
output   layer_weights_7_Clk_A;
output   layer_weights_7_Rst_A;
output  [31:0] layer_weights_8_Addr_A;
output   layer_weights_8_EN_A;
output  [3:0] layer_weights_8_WEN_A;
output  [31:0] layer_weights_8_Din_A;
input  [31:0] layer_weights_8_Dout_A;
output   layer_weights_8_Clk_A;
output   layer_weights_8_Rst_A;
output  [31:0] layer_weights_9_Addr_A;
output   layer_weights_9_EN_A;
output  [3:0] layer_weights_9_WEN_A;
output  [31:0] layer_weights_9_Din_A;
input  [31:0] layer_weights_9_Dout_A;
output   layer_weights_9_Clk_A;
output   layer_weights_9_Rst_A;
output  [31:0] layer_weights_10_Addr_A;
output   layer_weights_10_EN_A;
output  [3:0] layer_weights_10_WEN_A;
output  [31:0] layer_weights_10_Din_A;
input  [31:0] layer_weights_10_Dout_A;
output   layer_weights_10_Clk_A;
output   layer_weights_10_Rst_A;
output  [31:0] layer_weights_11_Addr_A;
output   layer_weights_11_EN_A;
output  [3:0] layer_weights_11_WEN_A;
output  [31:0] layer_weights_11_Din_A;
input  [31:0] layer_weights_11_Dout_A;
output   layer_weights_11_Clk_A;
output   layer_weights_11_Rst_A;
output  [31:0] layer_weights_12_Addr_A;
output   layer_weights_12_EN_A;
output  [3:0] layer_weights_12_WEN_A;
output  [31:0] layer_weights_12_Din_A;
input  [31:0] layer_weights_12_Dout_A;
output   layer_weights_12_Clk_A;
output   layer_weights_12_Rst_A;
output  [31:0] layer_weights_13_Addr_A;
output   layer_weights_13_EN_A;
output  [3:0] layer_weights_13_WEN_A;
output  [31:0] layer_weights_13_Din_A;
input  [31:0] layer_weights_13_Dout_A;
output   layer_weights_13_Clk_A;
output   layer_weights_13_Rst_A;
output  [31:0] layer_biases_0_Addr_A;
output   layer_biases_0_EN_A;
output  [3:0] layer_biases_0_WEN_A;
output  [31:0] layer_biases_0_Din_A;
input  [31:0] layer_biases_0_Dout_A;
output   layer_biases_0_Clk_A;
output   layer_biases_0_Rst_A;
output  [31:0] layer_biases_1_Addr_A;
output   layer_biases_1_EN_A;
output  [3:0] layer_biases_1_WEN_A;
output  [31:0] layer_biases_1_Din_A;
input  [31:0] layer_biases_1_Dout_A;
output   layer_biases_1_Clk_A;
output   layer_biases_1_Rst_A;
output  [31:0] layer_biases_2_Addr_A;
output   layer_biases_2_EN_A;
output  [3:0] layer_biases_2_WEN_A;
output  [31:0] layer_biases_2_Din_A;
input  [31:0] layer_biases_2_Dout_A;
output   layer_biases_2_Clk_A;
output   layer_biases_2_Rst_A;
output  [31:0] layer_biases_3_Addr_A;
output   layer_biases_3_EN_A;
output  [3:0] layer_biases_3_WEN_A;
output  [31:0] layer_biases_3_Din_A;
input  [31:0] layer_biases_3_Dout_A;
output   layer_biases_3_Clk_A;
output   layer_biases_3_Rst_A;
output  [31:0] layer_biases_4_Addr_A;
output   layer_biases_4_EN_A;
output  [3:0] layer_biases_4_WEN_A;
output  [31:0] layer_biases_4_Din_A;
input  [31:0] layer_biases_4_Dout_A;
output   layer_biases_4_Clk_A;
output   layer_biases_4_Rst_A;
output  [31:0] layer_biases_5_Addr_A;
output   layer_biases_5_EN_A;
output  [3:0] layer_biases_5_WEN_A;
output  [31:0] layer_biases_5_Din_A;
input  [31:0] layer_biases_5_Dout_A;
output   layer_biases_5_Clk_A;
output   layer_biases_5_Rst_A;
output  [31:0] layer_biases_6_Addr_A;
output   layer_biases_6_EN_A;
output  [3:0] layer_biases_6_WEN_A;
output  [31:0] layer_biases_6_Din_A;
input  [31:0] layer_biases_6_Dout_A;
output   layer_biases_6_Clk_A;
output   layer_biases_6_Rst_A;
output  [31:0] layer_biases_7_Addr_A;
output   layer_biases_7_EN_A;
output  [3:0] layer_biases_7_WEN_A;
output  [31:0] layer_biases_7_Din_A;
input  [31:0] layer_biases_7_Dout_A;
output   layer_biases_7_Clk_A;
output   layer_biases_7_Rst_A;
output  [31:0] layer_biases_8_Addr_A;
output   layer_biases_8_EN_A;
output  [3:0] layer_biases_8_WEN_A;
output  [31:0] layer_biases_8_Din_A;
input  [31:0] layer_biases_8_Dout_A;
output   layer_biases_8_Clk_A;
output   layer_biases_8_Rst_A;
output  [31:0] layer_biases_9_Addr_A;
output   layer_biases_9_EN_A;
output  [3:0] layer_biases_9_WEN_A;
output  [31:0] layer_biases_9_Din_A;
input  [31:0] layer_biases_9_Dout_A;
output   layer_biases_9_Clk_A;
output   layer_biases_9_Rst_A;
output  [31:0] layer_biases_10_Addr_A;
output   layer_biases_10_EN_A;
output  [3:0] layer_biases_10_WEN_A;
output  [31:0] layer_biases_10_Din_A;
input  [31:0] layer_biases_10_Dout_A;
output   layer_biases_10_Clk_A;
output   layer_biases_10_Rst_A;
output  [31:0] layer_biases_11_Addr_A;
output   layer_biases_11_EN_A;
output  [3:0] layer_biases_11_WEN_A;
output  [31:0] layer_biases_11_Din_A;
input  [31:0] layer_biases_11_Dout_A;
output   layer_biases_11_Clk_A;
output   layer_biases_11_Rst_A;
output  [31:0] layer_biases_12_Addr_A;
output   layer_biases_12_EN_A;
output  [3:0] layer_biases_12_WEN_A;
output  [31:0] layer_biases_12_Din_A;
input  [31:0] layer_biases_12_Dout_A;
output   layer_biases_12_Clk_A;
output   layer_biases_12_Rst_A;
output  [31:0] layer_biases_13_Addr_A;
output   layer_biases_13_EN_A;
output  [3:0] layer_biases_13_WEN_A;
output  [31:0] layer_biases_13_Din_A;
input  [31:0] layer_biases_13_Dout_A;
output   layer_biases_13_Clk_A;
output   layer_biases_13_Rst_A;
input  [511:0] L3_bitmap_i;
output  [511:0] L3_bitmap_o;
output   L3_bitmap_o_ap_vld;
input  [511:0] L2_bitmap_i;
output  [511:0] L2_bitmap_o;
output   L2_bitmap_o_ap_vld;
input  [511:0] L1_bitmap_i;
output  [511:0] L1_bitmap_o;
output   L1_bitmap_o_ap_vld;
input  [511:0] L0_bitmap_i;
output  [511:0] L0_bitmap_o;
output   L0_bitmap_o_ap_vld;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg layer_weights_0_EN_A;
reg layer_weights_1_EN_A;
reg layer_weights_2_EN_A;
reg layer_weights_3_EN_A;
reg layer_weights_4_EN_A;
reg layer_weights_5_EN_A;
reg layer_weights_6_EN_A;
reg layer_weights_7_EN_A;
reg layer_weights_8_EN_A;
reg layer_weights_9_EN_A;
reg layer_weights_10_EN_A;
reg layer_weights_11_EN_A;
reg layer_weights_12_EN_A;
reg layer_weights_13_EN_A;
reg layer_biases_0_EN_A;
reg layer_biases_1_EN_A;
reg layer_biases_2_EN_A;
reg layer_biases_3_EN_A;
reg layer_biases_4_EN_A;
reg layer_biases_5_EN_A;
reg layer_biases_6_EN_A;
reg layer_biases_7_EN_A;
reg layer_biases_8_EN_A;
reg layer_biases_9_EN_A;
reg layer_biases_10_EN_A;
reg layer_biases_11_EN_A;
reg layer_biases_12_EN_A;
reg layer_biases_13_EN_A;
reg L3_bitmap_o_ap_vld;
reg[511:0] L2_bitmap_o;
reg L1_bitmap_o_ap_vld;
reg L0_bitmap_o_ap_vld;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] final_output_full_cubic;
wire   [63:0] pruned_feature_dram_read;
wire   [63:0] pruned_feature_dram_write;
reg    bitmap_info_ap_vld;
reg    total_processed_voxels_ap_vld;
reg   [31:0] initial_processed_voxels_constprop;
wire   [3:0] MINKOWSKI_LAYERS_input_channels_address0;
wire   [10:0] MINKOWSKI_LAYERS_input_channels_q0;
wire   [3:0] MINKOWSKI_LAYERS_output_channels_address0;
wire   [10:0] MINKOWSKI_LAYERS_output_channels_q0;
wire   [3:0] MINKOWSKI_LAYERS_output_spatial_dim_address0;
wire   [6:0] MINKOWSKI_LAYERS_output_spatial_dim_q0;
reg    gmem_read_blk_n_AW;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter0_reg;
reg    gmem_read_0_AWVALID;
wire    gmem_read_0_AWREADY;
reg   [63:0] gmem_read_0_AWADDR;
reg   [31:0] gmem_read_0_AWLEN;
reg    gmem_read_0_WVALID;
wire    gmem_read_0_WREADY;
reg   [31:0] gmem_read_0_WDATA;
reg   [3:0] gmem_read_0_WSTRB;
reg    gmem_read_0_ARVALID;
wire    gmem_read_0_ARREADY;
reg   [63:0] gmem_read_0_ARADDR;
reg   [31:0] gmem_read_0_ARLEN;
wire    gmem_read_0_RVALID;
reg    gmem_read_0_RREADY;
wire   [31:0] gmem_read_0_RDATA;
wire    gmem_read_0_RLAST;
wire   [0:0] gmem_read_0_RID;
wire   [12:0] gmem_read_0_RFIFONUM;
wire   [0:0] gmem_read_0_RUSER;
wire   [1:0] gmem_read_0_RRESP;
wire    gmem_read_0_BVALID;
reg    gmem_read_0_BREADY;
wire   [1084:0] feature_data_stream_dout;
wire    feature_data_stream_empty_n;
reg    feature_data_stream_read;
wire   [59:0] write_addr_stream_dout;
wire    write_addr_stream_empty_n;
reg    write_addr_stream_read;
wire    ap_block_pp0_stage1_grp3;
reg   [0:0] tmp_reg_788;
reg   [0:0] tmp_s_reg_792;
reg    ap_block_pp0_stage1_subdone_grp3_done_reg;
reg    ap_block_pp0_stage1_subdone_grp3;
reg    ap_block_pp0_stage1_subdone;
reg    gmem_read_blk_n_W;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp4;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_grp5;
reg    ap_block_pp0_stage0_subdone_grp5_done_reg;
reg    ap_block_pp0_stage0_subdone_grp5;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_grp1;
reg    ap_block_pp0_stage1_subdone_grp1_done_reg;
reg    ap_block_pp0_stage1_subdone_grp1;
reg    gmem_read_blk_n_B;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0_grp7;
reg    ap_block_pp0_stage0_subdone_grp7_done_reg;
reg    ap_block_pp0_stage0_subdone_grp7;
reg   [511:0] L3_bitmap_read_reg_742;
wire    ap_CS_fsm_state2;
reg   [511:0] L1_bitmap_read_reg_747;
reg   [511:0] L0_bitmap_read_reg_752;
reg   [63:0] pruned_feature_dram_write_read_reg_757;
wire    ap_CS_fsm_state3;
reg   [63:0] pruned_feature_dram_read_read_reg_763;
reg   [63:0] final_output_full_cubic_read_reg_771;
reg   [159:0] call_ret_reg_776;
reg   [31:0] pruned_voxel_count_1_reg_781;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_nbreadreq_fu_360_p3;
wire   [0:0] tmp_s_nbreadreq_fu_367_p3;
reg   [63:0] gmem_read_addr_reg_796;
reg   [31:0] voxel_features_reg_804;
reg    ap_predicate_op153_read_state5;
reg    ap_block_state5_pp0_stage1_iter0_grp1;
reg    ap_block_pp0_stage1_11001_grp1;
reg   [31:0] voxel_features_1_reg_809;
reg   [31:0] trunc_ln98_3_reg_814;
reg   [31:0] p_cast_reg_826;
wire    ap_CS_fsm_state14;
reg   [3:0] layer_1_reg_831;
wire    ap_CS_fsm_state15;
wire   [3:0] add_ln131_fu_701_p2;
reg   [3:0] add_ln131_reg_838;
wire   [0:0] trunc_ln146_fu_714_p1;
wire    ap_CS_fsm_state16;
reg   [10:0] MINKOWSKI_LAYERS_input_channels_load_reg_862;
reg   [10:0] MINKOWSKI_LAYERS_output_channels_load_reg_867;
reg   [6:0] MINKOWSKI_LAYERS_output_spatial_dim_load_reg_872;
wire    grp_pipeline_bitmap_stage_fu_462_ap_done;
reg    ap_predicate_tran4to14_state4;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_predicate_op159_write_state6;
reg    ap_block_state6_io_grp4;
reg    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    grp_pipeline_bitmap_stage_fu_462_ap_start;
wire    grp_pipeline_bitmap_stage_fu_462_ap_idle;
wire    grp_pipeline_bitmap_stage_fu_462_ap_ready;
wire    grp_pipeline_bitmap_stage_fu_462_input_voxel_stream_read;
wire   [1084:0] grp_pipeline_bitmap_stage_fu_462_feature_data_stream_din;
wire    grp_pipeline_bitmap_stage_fu_462_feature_data_stream_write;
wire   [59:0] grp_pipeline_bitmap_stage_fu_462_write_addr_stream_din;
wire    grp_pipeline_bitmap_stage_fu_462_write_addr_stream_write;
wire   [511:0] grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o;
wire    grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o_ap_vld;
wire   [31:0] grp_pipeline_bitmap_stage_fu_462_initial_processed_voxels_constprop_o;
wire    grp_pipeline_bitmap_stage_fu_462_initial_processed_voxels_constprop_o_ap_vld;
wire   [159:0] grp_pipeline_bitmap_stage_fu_462_ap_return_0;
wire   [511:0] grp_pipeline_bitmap_stage_fu_462_ap_return_1;
wire   [511:0] grp_pipeline_bitmap_stage_fu_462_ap_return_2;
wire   [511:0] grp_pipeline_bitmap_stage_fu_462_ap_return_3;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_ap_idle;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_ap_ready;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_WEN_A;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Din_A;
reg   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_WEN_A;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Din_A;
reg   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWVALID;
wire   [63:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWADDR;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWID;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWLEN;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWSIZE;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWBURST;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWLOCK;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWCACHE;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWPROT;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWQOS;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWREGION;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWUSER;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WVALID;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WDATA;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WSTRB;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WLAST;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WID;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WUSER;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARVALID;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREADY;
wire   [63:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARADDR;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARID;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARLEN;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARSIZE;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARBURST;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARLOCK;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARCACHE;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARPROT;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARQOS;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREGION;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARUSER;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RVALID;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RREADY;
reg   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RDATA;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RLAST;
reg   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RID;
reg   [12:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RFIFONUM;
reg   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RUSER;
reg   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RRESP;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_BREADY;
reg   [63:0] grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_read;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWVALID;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREADY;
wire   [63:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWADDR;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWID;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWLEN;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWSIZE;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWBURST;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWLOCK;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWCACHE;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWPROT;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWQOS;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREGION;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWUSER;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WVALID;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WREADY;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WDATA;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WSTRB;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WLAST;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WID;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WUSER;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARVALID;
wire   [63:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARADDR;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARID;
wire   [31:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARLEN;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARSIZE;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARBURST;
wire   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARLOCK;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARCACHE;
wire   [2:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARPROT;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARQOS;
wire   [3:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARREGION;
wire   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARUSER;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_RREADY;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BVALID;
wire    grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BREADY;
reg   [1:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BRESP;
reg   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BID;
reg   [0:0] grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BUSER;
reg   [63:0] grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_write;
wire    grp_final_layer_output_reconstruction_fu_543_ap_start;
wire    grp_final_layer_output_reconstruction_fu_543_ap_done;
wire    grp_final_layer_output_reconstruction_fu_543_ap_idle;
wire    grp_final_layer_output_reconstruction_fu_543_ap_ready;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWVALID;
wire   [63:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWADDR;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWID;
wire   [31:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWLEN;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWSIZE;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWBURST;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWLOCK;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWCACHE;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWPROT;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWQOS;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWREGION;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWUSER;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WVALID;
wire   [31:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WDATA;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WSTRB;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WLAST;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WID;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WUSER;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARVALID;
wire   [63:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARADDR;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARID;
wire   [31:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARLEN;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARSIZE;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARBURST;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARLOCK;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARCACHE;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARPROT;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARQOS;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARREGION;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARUSER;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_RREADY;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_BREADY;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWVALID;
wire   [63:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWADDR;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWID;
wire   [31:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWLEN;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWSIZE;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWBURST;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWLOCK;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWCACHE;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWPROT;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWQOS;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWREGION;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWUSER;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WVALID;
wire   [31:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WDATA;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WSTRB;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WLAST;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WID;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WUSER;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARVALID;
wire   [63:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARADDR;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARID;
wire   [31:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARLEN;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARSIZE;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARBURST;
wire   [1:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARLOCK;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARCACHE;
wire   [2:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARPROT;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARQOS;
wire   [3:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARREGION;
wire   [0:0] grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARUSER;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_RREADY;
wire    grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_BREADY;
reg    gmem_output_0_AWVALID;
wire    gmem_output_0_AWREADY;
reg    gmem_output_0_WVALID;
wire    gmem_output_0_WREADY;
wire    gmem_output_0_ARREADY;
wire    gmem_output_0_RVALID;
wire   [31:0] gmem_output_0_RDATA;
wire   [8:0] gmem_output_0_RFIFONUM;
wire    gmem_output_0_BVALID;
reg    gmem_output_0_BREADY;
reg    gmem_write_0_AWVALID;
wire    gmem_write_0_AWREADY;
reg    gmem_write_0_WVALID;
wire    gmem_write_0_WREADY;
reg    gmem_write_0_ARVALID;
wire    gmem_write_0_ARREADY;
wire    gmem_write_0_RVALID;
reg    gmem_write_0_RREADY;
wire   [31:0] gmem_write_0_RDATA;
wire   [8:0] gmem_write_0_RFIFONUM;
wire    gmem_write_0_BVALID;
reg    gmem_write_0_BREADY;
wire   [1:0] gmem_write_0_BRESP;
wire   [0:0] gmem_write_0_BID;
wire   [0:0] gmem_write_0_BUSER;
reg    grp_pipeline_bitmap_stage_fu_462_ap_start_reg;
wire    feature_data_stream_full_n;
reg    feature_data_stream_write;
wire    write_addr_stream_full_n;
reg    write_addr_stream_write;
reg   [511:0] L2_bitmap_o_reg;
reg    grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state21;
reg    grp_final_layer_output_reconstruction_fu_543_ap_start_reg;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire   [63:0] zext_ln131_fu_707_p1;
wire   [0:0] icmp_ln131_fu_695_p2;
wire  signed [63:0] sext_ln107_fu_633_p1;
wire    ap_block_pp0_stage0;
reg    ap_predicate_op158_writereq_state5;
reg    ap_block_state5_io_grp3;
reg    ap_block_pp0_stage1_11001_grp3;
reg    ap_block_pp0_stage0_11001_grp7;
reg    ap_block_pp0_stage2_11001_grp4;
wire    ap_block_pp0_stage2_01001_grp4;
reg    ap_block_pp0_stage0_11001_grp5;
wire    ap_block_pp0_stage0_01001_grp5;
reg    ap_block_pp0_stage1_01001_grp1;
reg   [31:0] pruned_voxel_count_fu_280;
wire   [31:0] pruned_voxel_count_2_fu_588_p2;
reg   [3:0] layer_fu_292;
wire    ap_CS_fsm_state19;
reg    ap_predicate_op157_read_state5;
reg    ap_block_state5_pp0_stage1_iter0_grp2;
reg    ap_block_pp0_stage1_subdone_grp2_done_reg;
reg    ap_block_pp0_stage1_subdone_grp2;
reg    ap_block_pp0_stage1_11001_grp2;
reg    MINKOWSKI_LAYERS_input_channels_ce0_local;
reg    MINKOWSKI_LAYERS_output_channels_ce0_local;
reg    MINKOWSKI_LAYERS_output_spatial_dim_ce0_local;
wire   [31:0] shl_ln96_fu_594_p2;
wire   [31:0] sub_ln96_fu_600_p2;
wire   [33:0] shl_ln_fu_606_p3;
wire   [63:0] zext_ln96_fu_614_p1;
wire   [63:0] add_ln96_fu_618_p2;
wire   [61:0] trunc_ln_fu_623_p4;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_predicate_op232_call_state18;
reg    ap_block_state18_on_subcall_done;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_predicate_op278_call_state21;
reg    ap_block_state21_on_subcall_done;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 initial_processed_voxels_constprop = 32'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp3_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp1_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp7_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_pipeline_bitmap_stage_fu_462_ap_start_reg = 1'b0;
#0 grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start_reg = 1'b0;
#0 grp_final_layer_output_reconstruction_fu_543_ap_start_reg = 1'b0;
#0 pruned_voxel_count_fu_280 = 32'd0;
#0 layer_fu_292 = 4'd0;
#0 ap_block_pp0_stage1_subdone_grp2_done_reg = 1'b0;
end

minkowski_net_14_layer_pipeline_MINKOWSKI_LAYERS_input_channels_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
MINKOWSKI_LAYERS_input_channels_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(MINKOWSKI_LAYERS_input_channels_address0),
    .ce0(MINKOWSKI_LAYERS_input_channels_ce0_local),
    .q0(MINKOWSKI_LAYERS_input_channels_q0)
);

minkowski_net_14_layer_pipeline_MINKOWSKI_LAYERS_output_channels_ROM_AUTO_1R #(
    .DataWidth( 11 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
MINKOWSKI_LAYERS_output_channels_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(MINKOWSKI_LAYERS_output_channels_address0),
    .ce0(MINKOWSKI_LAYERS_output_channels_ce0_local),
    .q0(MINKOWSKI_LAYERS_output_channels_q0)
);

minkowski_net_14_layer_pipeline_MINKOWSKI_LAYERS_output_spatial_dim_ROM_AUTO_1R #(
    .DataWidth( 7 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
MINKOWSKI_LAYERS_output_spatial_dim_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(MINKOWSKI_LAYERS_output_spatial_dim_address0),
    .ce0(MINKOWSKI_LAYERS_output_spatial_dim_ce0_local),
    .q0(MINKOWSKI_LAYERS_output_spatial_dim_q0)
);

minkowski_net_14_layer_pipeline_pipeline_bitmap_stage grp_pipeline_bitmap_stage_fu_462(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pipeline_bitmap_stage_fu_462_ap_start),
    .ap_done(grp_pipeline_bitmap_stage_fu_462_ap_done),
    .ap_idle(grp_pipeline_bitmap_stage_fu_462_ap_idle),
    .ap_ready(grp_pipeline_bitmap_stage_fu_462_ap_ready),
    .input_voxel_stream_dout(input_voxel_stream_dout),
    .input_voxel_stream_empty_n(input_voxel_stream_empty_n),
    .input_voxel_stream_read(grp_pipeline_bitmap_stage_fu_462_input_voxel_stream_read),
    .feature_data_stream_din(grp_pipeline_bitmap_stage_fu_462_feature_data_stream_din),
    .feature_data_stream_full_n(feature_data_stream_full_n),
    .feature_data_stream_write(grp_pipeline_bitmap_stage_fu_462_feature_data_stream_write),
    .write_addr_stream_din(grp_pipeline_bitmap_stage_fu_462_write_addr_stream_din),
    .write_addr_stream_full_n(write_addr_stream_full_n),
    .write_addr_stream_write(grp_pipeline_bitmap_stage_fu_462_write_addr_stream_write),
    .L3_bitmap_read(L3_bitmap_read_reg_742),
    .L2_bitmap_i(L2_bitmap_i),
    .L2_bitmap_o(grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o),
    .L2_bitmap_o_ap_vld(grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o_ap_vld),
    .L1_bitmap_read(L1_bitmap_read_reg_747),
    .L0_bitmap_read(L0_bitmap_read_reg_752),
    .initial_processed_voxels_constprop_i(initial_processed_voxels_constprop),
    .initial_processed_voxels_constprop_o(grp_pipeline_bitmap_stage_fu_462_initial_processed_voxels_constprop_o),
    .initial_processed_voxels_constprop_o_ap_vld(grp_pipeline_bitmap_stage_fu_462_initial_processed_voxels_constprop_o_ap_vld),
    .ap_return_0(grp_pipeline_bitmap_stage_fu_462_ap_return_0),
    .ap_return_1(grp_pipeline_bitmap_stage_fu_462_ap_return_1),
    .ap_return_2(grp_pipeline_bitmap_stage_fu_462_ap_return_2),
    .ap_return_3(grp_pipeline_bitmap_stage_fu_462_ap_return_3)
);

minkowski_net_14_layer_pipeline_layer_convolution_with_persistent_accelerator grp_layer_convolution_with_persistent_accelerator_fu_496(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start),
    .ap_done(grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done),
    .ap_idle(grp_layer_convolution_with_persistent_accelerator_fu_496_ap_idle),
    .ap_ready(grp_layer_convolution_with_persistent_accelerator_fu_496_ap_ready),
    .config_input_channels_val(MINKOWSKI_LAYERS_input_channels_load_reg_862),
    .config_output_channels_val(MINKOWSKI_LAYERS_output_channels_load_reg_867),
    .config_output_spatial_dim_val(MINKOWSKI_LAYERS_output_spatial_dim_load_reg_872),
    .layer_weights_12_Addr_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A),
    .layer_weights_12_EN_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A),
    .layer_weights_12_WEN_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_WEN_A),
    .layer_weights_12_Din_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Din_A),
    .layer_weights_12_Dout_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A),
    .layer_biases_12_Addr_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A),
    .layer_biases_12_EN_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A),
    .layer_biases_12_WEN_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_WEN_A),
    .layer_biases_12_Din_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Din_A),
    .layer_biases_12_Dout_A(grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A),
    .bitmap_info_0_4_0_0_0_val(p_cast_reg_826),
    .m_axi_gmem_write_0_AWVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWVALID),
    .m_axi_gmem_write_0_AWREADY(1'b0),
    .m_axi_gmem_write_0_AWADDR(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWADDR),
    .m_axi_gmem_write_0_AWID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWID),
    .m_axi_gmem_write_0_AWLEN(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWLEN),
    .m_axi_gmem_write_0_AWSIZE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWSIZE),
    .m_axi_gmem_write_0_AWBURST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWBURST),
    .m_axi_gmem_write_0_AWLOCK(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWLOCK),
    .m_axi_gmem_write_0_AWCACHE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWCACHE),
    .m_axi_gmem_write_0_AWPROT(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWPROT),
    .m_axi_gmem_write_0_AWQOS(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWQOS),
    .m_axi_gmem_write_0_AWREGION(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWREGION),
    .m_axi_gmem_write_0_AWUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_AWUSER),
    .m_axi_gmem_write_0_WVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WVALID),
    .m_axi_gmem_write_0_WREADY(1'b0),
    .m_axi_gmem_write_0_WDATA(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WDATA),
    .m_axi_gmem_write_0_WSTRB(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WSTRB),
    .m_axi_gmem_write_0_WLAST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WLAST),
    .m_axi_gmem_write_0_WID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WID),
    .m_axi_gmem_write_0_WUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_WUSER),
    .m_axi_gmem_write_0_ARVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARVALID),
    .m_axi_gmem_write_0_ARREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREADY),
    .m_axi_gmem_write_0_ARADDR(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARADDR),
    .m_axi_gmem_write_0_ARID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARID),
    .m_axi_gmem_write_0_ARLEN(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARLEN),
    .m_axi_gmem_write_0_ARSIZE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARSIZE),
    .m_axi_gmem_write_0_ARBURST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARBURST),
    .m_axi_gmem_write_0_ARLOCK(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARLOCK),
    .m_axi_gmem_write_0_ARCACHE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARCACHE),
    .m_axi_gmem_write_0_ARPROT(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARPROT),
    .m_axi_gmem_write_0_ARQOS(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARQOS),
    .m_axi_gmem_write_0_ARREGION(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREGION),
    .m_axi_gmem_write_0_ARUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARUSER),
    .m_axi_gmem_write_0_RVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RVALID),
    .m_axi_gmem_write_0_RREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RREADY),
    .m_axi_gmem_write_0_RDATA(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RDATA),
    .m_axi_gmem_write_0_RLAST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RLAST),
    .m_axi_gmem_write_0_RID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RID),
    .m_axi_gmem_write_0_RFIFONUM(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RFIFONUM),
    .m_axi_gmem_write_0_RUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RUSER),
    .m_axi_gmem_write_0_RRESP(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RRESP),
    .m_axi_gmem_write_0_BVALID(1'b0),
    .m_axi_gmem_write_0_BREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_BREADY),
    .m_axi_gmem_write_0_BRESP(2'd0),
    .m_axi_gmem_write_0_BID(1'd0),
    .m_axi_gmem_write_0_BUSER(1'd0),
    .pruned_dram_read(grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_read),
    .m_axi_gmem_read_0_AWVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWVALID),
    .m_axi_gmem_read_0_AWREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREADY),
    .m_axi_gmem_read_0_AWADDR(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWADDR),
    .m_axi_gmem_read_0_AWID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWID),
    .m_axi_gmem_read_0_AWLEN(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWLEN),
    .m_axi_gmem_read_0_AWSIZE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWSIZE),
    .m_axi_gmem_read_0_AWBURST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWBURST),
    .m_axi_gmem_read_0_AWLOCK(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWLOCK),
    .m_axi_gmem_read_0_AWCACHE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWCACHE),
    .m_axi_gmem_read_0_AWPROT(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWPROT),
    .m_axi_gmem_read_0_AWQOS(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWQOS),
    .m_axi_gmem_read_0_AWREGION(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREGION),
    .m_axi_gmem_read_0_AWUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWUSER),
    .m_axi_gmem_read_0_WVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WVALID),
    .m_axi_gmem_read_0_WREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WREADY),
    .m_axi_gmem_read_0_WDATA(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WDATA),
    .m_axi_gmem_read_0_WSTRB(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WSTRB),
    .m_axi_gmem_read_0_WLAST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WLAST),
    .m_axi_gmem_read_0_WID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WID),
    .m_axi_gmem_read_0_WUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WUSER),
    .m_axi_gmem_read_0_ARVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARVALID),
    .m_axi_gmem_read_0_ARREADY(1'b0),
    .m_axi_gmem_read_0_ARADDR(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARADDR),
    .m_axi_gmem_read_0_ARID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARID),
    .m_axi_gmem_read_0_ARLEN(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARLEN),
    .m_axi_gmem_read_0_ARSIZE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARSIZE),
    .m_axi_gmem_read_0_ARBURST(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARBURST),
    .m_axi_gmem_read_0_ARLOCK(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARLOCK),
    .m_axi_gmem_read_0_ARCACHE(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARCACHE),
    .m_axi_gmem_read_0_ARPROT(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARPROT),
    .m_axi_gmem_read_0_ARQOS(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARQOS),
    .m_axi_gmem_read_0_ARREGION(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARREGION),
    .m_axi_gmem_read_0_ARUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_ARUSER),
    .m_axi_gmem_read_0_RVALID(1'b0),
    .m_axi_gmem_read_0_RREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_RREADY),
    .m_axi_gmem_read_0_RDATA(32'd0),
    .m_axi_gmem_read_0_RLAST(1'b0),
    .m_axi_gmem_read_0_RID(1'd0),
    .m_axi_gmem_read_0_RFIFONUM(13'd0),
    .m_axi_gmem_read_0_RUSER(1'd0),
    .m_axi_gmem_read_0_RRESP(2'd0),
    .m_axi_gmem_read_0_BVALID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BVALID),
    .m_axi_gmem_read_0_BREADY(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BREADY),
    .m_axi_gmem_read_0_BRESP(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BRESP),
    .m_axi_gmem_read_0_BID(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BID),
    .m_axi_gmem_read_0_BUSER(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BUSER),
    .pruned_dram_write(grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_write),
    .num_pruned_voxels(pruned_voxel_count_1_reg_781)
);

minkowski_net_14_layer_pipeline_final_layer_output_reconstruction grp_final_layer_output_reconstruction_fu_543(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_final_layer_output_reconstruction_fu_543_ap_start),
    .ap_done(grp_final_layer_output_reconstruction_fu_543_ap_done),
    .ap_idle(grp_final_layer_output_reconstruction_fu_543_ap_idle),
    .ap_ready(grp_final_layer_output_reconstruction_fu_543_ap_ready),
    .m_axi_gmem_read_0_AWVALID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWVALID),
    .m_axi_gmem_read_0_AWREADY(1'b0),
    .m_axi_gmem_read_0_AWADDR(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWADDR),
    .m_axi_gmem_read_0_AWID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWID),
    .m_axi_gmem_read_0_AWLEN(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWLEN),
    .m_axi_gmem_read_0_AWSIZE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWSIZE),
    .m_axi_gmem_read_0_AWBURST(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWBURST),
    .m_axi_gmem_read_0_AWLOCK(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWLOCK),
    .m_axi_gmem_read_0_AWCACHE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWCACHE),
    .m_axi_gmem_read_0_AWPROT(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWPROT),
    .m_axi_gmem_read_0_AWQOS(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWQOS),
    .m_axi_gmem_read_0_AWREGION(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWREGION),
    .m_axi_gmem_read_0_AWUSER(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_AWUSER),
    .m_axi_gmem_read_0_WVALID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WVALID),
    .m_axi_gmem_read_0_WREADY(1'b0),
    .m_axi_gmem_read_0_WDATA(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WDATA),
    .m_axi_gmem_read_0_WSTRB(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WSTRB),
    .m_axi_gmem_read_0_WLAST(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WLAST),
    .m_axi_gmem_read_0_WID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WID),
    .m_axi_gmem_read_0_WUSER(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_WUSER),
    .m_axi_gmem_read_0_ARVALID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARVALID),
    .m_axi_gmem_read_0_ARREADY(gmem_read_0_ARREADY),
    .m_axi_gmem_read_0_ARADDR(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARADDR),
    .m_axi_gmem_read_0_ARID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARID),
    .m_axi_gmem_read_0_ARLEN(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARLEN),
    .m_axi_gmem_read_0_ARSIZE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARSIZE),
    .m_axi_gmem_read_0_ARBURST(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARBURST),
    .m_axi_gmem_read_0_ARLOCK(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARLOCK),
    .m_axi_gmem_read_0_ARCACHE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARCACHE),
    .m_axi_gmem_read_0_ARPROT(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARPROT),
    .m_axi_gmem_read_0_ARQOS(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARQOS),
    .m_axi_gmem_read_0_ARREGION(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARREGION),
    .m_axi_gmem_read_0_ARUSER(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARUSER),
    .m_axi_gmem_read_0_RVALID(gmem_read_0_RVALID),
    .m_axi_gmem_read_0_RREADY(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_RREADY),
    .m_axi_gmem_read_0_RDATA(gmem_read_0_RDATA),
    .m_axi_gmem_read_0_RLAST(1'b0),
    .m_axi_gmem_read_0_RID(1'd0),
    .m_axi_gmem_read_0_RFIFONUM(gmem_read_0_RFIFONUM),
    .m_axi_gmem_read_0_RUSER(1'd0),
    .m_axi_gmem_read_0_RRESP(2'd0),
    .m_axi_gmem_read_0_BVALID(1'b0),
    .m_axi_gmem_read_0_BREADY(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_BREADY),
    .m_axi_gmem_read_0_BRESP(2'd0),
    .m_axi_gmem_read_0_BID(1'd0),
    .m_axi_gmem_read_0_BUSER(1'd0),
    .pruned_dram_output(pruned_feature_dram_read_read_reg_763),
    .m_axi_gmem_output_0_AWVALID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWVALID),
    .m_axi_gmem_output_0_AWREADY(gmem_output_0_AWREADY),
    .m_axi_gmem_output_0_AWADDR(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWADDR),
    .m_axi_gmem_output_0_AWID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWID),
    .m_axi_gmem_output_0_AWLEN(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWLEN),
    .m_axi_gmem_output_0_AWSIZE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWSIZE),
    .m_axi_gmem_output_0_AWBURST(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWBURST),
    .m_axi_gmem_output_0_AWLOCK(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWLOCK),
    .m_axi_gmem_output_0_AWCACHE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWCACHE),
    .m_axi_gmem_output_0_AWPROT(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWPROT),
    .m_axi_gmem_output_0_AWQOS(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWQOS),
    .m_axi_gmem_output_0_AWREGION(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWREGION),
    .m_axi_gmem_output_0_AWUSER(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWUSER),
    .m_axi_gmem_output_0_WVALID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WVALID),
    .m_axi_gmem_output_0_WREADY(gmem_output_0_WREADY),
    .m_axi_gmem_output_0_WDATA(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WDATA),
    .m_axi_gmem_output_0_WSTRB(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WSTRB),
    .m_axi_gmem_output_0_WLAST(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WLAST),
    .m_axi_gmem_output_0_WID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WID),
    .m_axi_gmem_output_0_WUSER(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WUSER),
    .m_axi_gmem_output_0_ARVALID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARVALID),
    .m_axi_gmem_output_0_ARREADY(1'b0),
    .m_axi_gmem_output_0_ARADDR(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARADDR),
    .m_axi_gmem_output_0_ARID(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARID),
    .m_axi_gmem_output_0_ARLEN(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARLEN),
    .m_axi_gmem_output_0_ARSIZE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARSIZE),
    .m_axi_gmem_output_0_ARBURST(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARBURST),
    .m_axi_gmem_output_0_ARLOCK(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARLOCK),
    .m_axi_gmem_output_0_ARCACHE(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARCACHE),
    .m_axi_gmem_output_0_ARPROT(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARPROT),
    .m_axi_gmem_output_0_ARQOS(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARQOS),
    .m_axi_gmem_output_0_ARREGION(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARREGION),
    .m_axi_gmem_output_0_ARUSER(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_ARUSER),
    .m_axi_gmem_output_0_RVALID(1'b0),
    .m_axi_gmem_output_0_RREADY(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_RREADY),
    .m_axi_gmem_output_0_RDATA(32'd0),
    .m_axi_gmem_output_0_RLAST(1'b0),
    .m_axi_gmem_output_0_RID(1'd0),
    .m_axi_gmem_output_0_RFIFONUM(9'd0),
    .m_axi_gmem_output_0_RUSER(1'd0),
    .m_axi_gmem_output_0_RRESP(2'd0),
    .m_axi_gmem_output_0_BVALID(gmem_output_0_BVALID),
    .m_axi_gmem_output_0_BREADY(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_BREADY),
    .m_axi_gmem_output_0_BRESP(2'd0),
    .m_axi_gmem_output_0_BID(1'd0),
    .m_axi_gmem_output_0_BUSER(1'd0),
    .full_cubic_output(final_output_full_cubic_read_reg_771),
    .num_pruned_voxels(pruned_voxel_count_1_reg_781)
);

minkowski_net_14_layer_pipeline_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .final_output_full_cubic(final_output_full_cubic),
    .pruned_feature_dram_read(pruned_feature_dram_read),
    .pruned_feature_dram_write(pruned_feature_dram_write),
    .bitmap_info(grp_pipeline_bitmap_stage_fu_462_ap_return_0),
    .bitmap_info_ap_vld(bitmap_info_ap_vld),
    .total_processed_voxels(pruned_voxel_count_1_reg_781),
    .total_processed_voxels_ap_vld(total_processed_voxels_ap_vld),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

minkowski_net_14_layer_pipeline_gmem_output_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 4 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 256 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_OUTPUT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_OUTPUT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_OUTPUT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_OUTPUT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_OUTPUT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_OUTPUT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_OUTPUT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_OUTPUT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_OUTPUT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_OUTPUT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_OUTPUT_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 0 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_output_m_axi_U(
    .AWVALID(m_axi_gmem_output_AWVALID),
    .AWREADY(m_axi_gmem_output_AWREADY),
    .AWADDR(m_axi_gmem_output_AWADDR),
    .AWID(m_axi_gmem_output_AWID),
    .AWLEN(m_axi_gmem_output_AWLEN),
    .AWSIZE(m_axi_gmem_output_AWSIZE),
    .AWBURST(m_axi_gmem_output_AWBURST),
    .AWLOCK(m_axi_gmem_output_AWLOCK),
    .AWCACHE(m_axi_gmem_output_AWCACHE),
    .AWPROT(m_axi_gmem_output_AWPROT),
    .AWQOS(m_axi_gmem_output_AWQOS),
    .AWREGION(m_axi_gmem_output_AWREGION),
    .AWUSER(m_axi_gmem_output_AWUSER),
    .WVALID(m_axi_gmem_output_WVALID),
    .WREADY(m_axi_gmem_output_WREADY),
    .WDATA(m_axi_gmem_output_WDATA),
    .WSTRB(m_axi_gmem_output_WSTRB),
    .WLAST(m_axi_gmem_output_WLAST),
    .WID(m_axi_gmem_output_WID),
    .WUSER(m_axi_gmem_output_WUSER),
    .ARVALID(m_axi_gmem_output_ARVALID),
    .ARREADY(m_axi_gmem_output_ARREADY),
    .ARADDR(m_axi_gmem_output_ARADDR),
    .ARID(m_axi_gmem_output_ARID),
    .ARLEN(m_axi_gmem_output_ARLEN),
    .ARSIZE(m_axi_gmem_output_ARSIZE),
    .ARBURST(m_axi_gmem_output_ARBURST),
    .ARLOCK(m_axi_gmem_output_ARLOCK),
    .ARCACHE(m_axi_gmem_output_ARCACHE),
    .ARPROT(m_axi_gmem_output_ARPROT),
    .ARQOS(m_axi_gmem_output_ARQOS),
    .ARREGION(m_axi_gmem_output_ARREGION),
    .ARUSER(m_axi_gmem_output_ARUSER),
    .RVALID(m_axi_gmem_output_RVALID),
    .RREADY(m_axi_gmem_output_RREADY),
    .RDATA(m_axi_gmem_output_RDATA),
    .RLAST(m_axi_gmem_output_RLAST),
    .RID(m_axi_gmem_output_RID),
    .RUSER(m_axi_gmem_output_RUSER),
    .RRESP(m_axi_gmem_output_RRESP),
    .BVALID(m_axi_gmem_output_BVALID),
    .BREADY(m_axi_gmem_output_BREADY),
    .BRESP(m_axi_gmem_output_BRESP),
    .BID(m_axi_gmem_output_BID),
    .BUSER(m_axi_gmem_output_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(1'b0),
    .I_CH0_ARREADY(gmem_output_0_ARREADY),
    .I_CH0_ARADDR(64'd0),
    .I_CH0_ARLEN(32'd0),
    .I_CH0_RVALID(gmem_output_0_RVALID),
    .I_CH0_RREADY(1'b0),
    .I_CH0_RDATA(gmem_output_0_RDATA),
    .I_CH0_RFIFONUM(gmem_output_0_RFIFONUM),
    .I_CH0_AWVALID(gmem_output_0_AWVALID),
    .I_CH0_AWREADY(gmem_output_0_AWREADY),
    .I_CH0_AWADDR(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWADDR),
    .I_CH0_AWLEN(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWLEN),
    .I_CH0_WVALID(gmem_output_0_WVALID),
    .I_CH0_WREADY(gmem_output_0_WREADY),
    .I_CH0_WDATA(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WDATA),
    .I_CH0_WSTRB(grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WSTRB),
    .I_CH0_BVALID(gmem_output_0_BVALID),
    .I_CH0_BREADY(gmem_output_0_BREADY)
);

minkowski_net_14_layer_pipeline_gmem_read_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 256 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_READ_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_READ_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_READ_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_READ_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_READ_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_READ_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_READ_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_READ_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_READ_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_READ_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_READ_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 13 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_read_m_axi_U(
    .AWVALID(m_axi_gmem_read_AWVALID),
    .AWREADY(m_axi_gmem_read_AWREADY),
    .AWADDR(m_axi_gmem_read_AWADDR),
    .AWID(m_axi_gmem_read_AWID),
    .AWLEN(m_axi_gmem_read_AWLEN),
    .AWSIZE(m_axi_gmem_read_AWSIZE),
    .AWBURST(m_axi_gmem_read_AWBURST),
    .AWLOCK(m_axi_gmem_read_AWLOCK),
    .AWCACHE(m_axi_gmem_read_AWCACHE),
    .AWPROT(m_axi_gmem_read_AWPROT),
    .AWQOS(m_axi_gmem_read_AWQOS),
    .AWREGION(m_axi_gmem_read_AWREGION),
    .AWUSER(m_axi_gmem_read_AWUSER),
    .WVALID(m_axi_gmem_read_WVALID),
    .WREADY(m_axi_gmem_read_WREADY),
    .WDATA(m_axi_gmem_read_WDATA),
    .WSTRB(m_axi_gmem_read_WSTRB),
    .WLAST(m_axi_gmem_read_WLAST),
    .WID(m_axi_gmem_read_WID),
    .WUSER(m_axi_gmem_read_WUSER),
    .ARVALID(m_axi_gmem_read_ARVALID),
    .ARREADY(m_axi_gmem_read_ARREADY),
    .ARADDR(m_axi_gmem_read_ARADDR),
    .ARID(m_axi_gmem_read_ARID),
    .ARLEN(m_axi_gmem_read_ARLEN),
    .ARSIZE(m_axi_gmem_read_ARSIZE),
    .ARBURST(m_axi_gmem_read_ARBURST),
    .ARLOCK(m_axi_gmem_read_ARLOCK),
    .ARCACHE(m_axi_gmem_read_ARCACHE),
    .ARPROT(m_axi_gmem_read_ARPROT),
    .ARQOS(m_axi_gmem_read_ARQOS),
    .ARREGION(m_axi_gmem_read_ARREGION),
    .ARUSER(m_axi_gmem_read_ARUSER),
    .RVALID(m_axi_gmem_read_RVALID),
    .RREADY(m_axi_gmem_read_RREADY),
    .RDATA(m_axi_gmem_read_RDATA),
    .RLAST(m_axi_gmem_read_RLAST),
    .RID(m_axi_gmem_read_RID),
    .RUSER(m_axi_gmem_read_RUSER),
    .RRESP(m_axi_gmem_read_RRESP),
    .BVALID(m_axi_gmem_read_BVALID),
    .BREADY(m_axi_gmem_read_BREADY),
    .BRESP(m_axi_gmem_read_BRESP),
    .BID(m_axi_gmem_read_BID),
    .BUSER(m_axi_gmem_read_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(gmem_read_0_ARVALID),
    .I_CH0_ARREADY(gmem_read_0_ARREADY),
    .I_CH0_ARADDR(gmem_read_0_ARADDR),
    .I_CH0_ARLEN(gmem_read_0_ARLEN),
    .I_CH0_RVALID(gmem_read_0_RVALID),
    .I_CH0_RREADY(gmem_read_0_RREADY),
    .I_CH0_RDATA(gmem_read_0_RDATA),
    .I_CH0_RFIFONUM(gmem_read_0_RFIFONUM),
    .I_CH0_AWVALID(gmem_read_0_AWVALID),
    .I_CH0_AWREADY(gmem_read_0_AWREADY),
    .I_CH0_AWADDR(gmem_read_0_AWADDR),
    .I_CH0_AWLEN(gmem_read_0_AWLEN),
    .I_CH0_WVALID(gmem_read_0_WVALID),
    .I_CH0_WREADY(gmem_read_0_WREADY),
    .I_CH0_WDATA(gmem_read_0_WDATA),
    .I_CH0_WSTRB(gmem_read_0_WSTRB),
    .I_CH0_BVALID(gmem_read_0_BVALID),
    .I_CH0_BREADY(gmem_read_0_BREADY)
);

minkowski_net_14_layer_pipeline_gmem_write_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 256 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_WRITE_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_WRITE_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_WRITE_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_WRITE_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_WRITE_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WRITE_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_WRITE_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_WRITE_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_WRITE_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_WRITE_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_WRITE_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_write_m_axi_U(
    .AWVALID(m_axi_gmem_write_AWVALID),
    .AWREADY(m_axi_gmem_write_AWREADY),
    .AWADDR(m_axi_gmem_write_AWADDR),
    .AWID(m_axi_gmem_write_AWID),
    .AWLEN(m_axi_gmem_write_AWLEN),
    .AWSIZE(m_axi_gmem_write_AWSIZE),
    .AWBURST(m_axi_gmem_write_AWBURST),
    .AWLOCK(m_axi_gmem_write_AWLOCK),
    .AWCACHE(m_axi_gmem_write_AWCACHE),
    .AWPROT(m_axi_gmem_write_AWPROT),
    .AWQOS(m_axi_gmem_write_AWQOS),
    .AWREGION(m_axi_gmem_write_AWREGION),
    .AWUSER(m_axi_gmem_write_AWUSER),
    .WVALID(m_axi_gmem_write_WVALID),
    .WREADY(m_axi_gmem_write_WREADY),
    .WDATA(m_axi_gmem_write_WDATA),
    .WSTRB(m_axi_gmem_write_WSTRB),
    .WLAST(m_axi_gmem_write_WLAST),
    .WID(m_axi_gmem_write_WID),
    .WUSER(m_axi_gmem_write_WUSER),
    .ARVALID(m_axi_gmem_write_ARVALID),
    .ARREADY(m_axi_gmem_write_ARREADY),
    .ARADDR(m_axi_gmem_write_ARADDR),
    .ARID(m_axi_gmem_write_ARID),
    .ARLEN(m_axi_gmem_write_ARLEN),
    .ARSIZE(m_axi_gmem_write_ARSIZE),
    .ARBURST(m_axi_gmem_write_ARBURST),
    .ARLOCK(m_axi_gmem_write_ARLOCK),
    .ARCACHE(m_axi_gmem_write_ARCACHE),
    .ARPROT(m_axi_gmem_write_ARPROT),
    .ARQOS(m_axi_gmem_write_ARQOS),
    .ARREGION(m_axi_gmem_write_ARREGION),
    .ARUSER(m_axi_gmem_write_ARUSER),
    .RVALID(m_axi_gmem_write_RVALID),
    .RREADY(m_axi_gmem_write_RREADY),
    .RDATA(m_axi_gmem_write_RDATA),
    .RLAST(m_axi_gmem_write_RLAST),
    .RID(m_axi_gmem_write_RID),
    .RUSER(m_axi_gmem_write_RUSER),
    .RRESP(m_axi_gmem_write_RRESP),
    .BVALID(m_axi_gmem_write_BVALID),
    .BREADY(m_axi_gmem_write_BREADY),
    .BRESP(m_axi_gmem_write_BRESP),
    .BID(m_axi_gmem_write_BID),
    .BUSER(m_axi_gmem_write_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(gmem_write_0_ARVALID),
    .I_CH0_ARREADY(gmem_write_0_ARREADY),
    .I_CH0_ARADDR(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARADDR),
    .I_CH0_ARLEN(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARLEN),
    .I_CH0_RVALID(gmem_write_0_RVALID),
    .I_CH0_RREADY(gmem_write_0_RREADY),
    .I_CH0_RDATA(gmem_write_0_RDATA),
    .I_CH0_RFIFONUM(gmem_write_0_RFIFONUM),
    .I_CH0_AWVALID(gmem_write_0_AWVALID),
    .I_CH0_AWREADY(gmem_write_0_AWREADY),
    .I_CH0_AWADDR(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWADDR),
    .I_CH0_AWLEN(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWLEN),
    .I_CH0_WVALID(gmem_write_0_WVALID),
    .I_CH0_WREADY(gmem_write_0_WREADY),
    .I_CH0_WDATA(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WDATA),
    .I_CH0_WSTRB(grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WSTRB),
    .I_CH0_BVALID(gmem_write_0_BVALID),
    .I_CH0_BREADY(gmem_write_0_BREADY)
);

minkowski_net_14_layer_pipeline_fifo_w1085_d1024_A feature_data_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pipeline_bitmap_stage_fu_462_feature_data_stream_din),
    .if_full_n(feature_data_stream_full_n),
    .if_write(feature_data_stream_write),
    .if_dout(feature_data_stream_dout),
    .if_empty_n(feature_data_stream_empty_n),
    .if_read(feature_data_stream_read)
);

minkowski_net_14_layer_pipeline_fifo_w60_d1024_A write_addr_stream_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_pipeline_bitmap_stage_fu_462_write_addr_stream_din),
    .if_full_n(write_addr_stream_full_n),
    .if_write(write_addr_stream_write),
    .if_dout(write_addr_stream_dout),
    .if_empty_n(write_addr_stream_empty_n),
    .if_read(write_addr_stream_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp5)) begin
                ap_block_pp0_stage0_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp7)) begin
                ap_block_pp0_stage0_subdone_grp7_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp1)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp2)) begin
                ap_block_pp0_stage1_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp3)) begin
                ap_block_pp0_stage1_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_final_layer_output_reconstruction_fu_543_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_final_layer_output_reconstruction_fu_543_ap_start_reg <= 1'b1;
        end else if ((grp_final_layer_output_reconstruction_fu_543_ap_ready == 1'b1)) begin
            grp_final_layer_output_reconstruction_fu_543_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
            grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start_reg <= 1'b1;
        end else if ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_ready == 1'b1)) begin
            grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pipeline_bitmap_stage_fu_462_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_pipeline_bitmap_stage_fu_462_ap_start_reg <= 1'b1;
        end else if ((grp_pipeline_bitmap_stage_fu_462_ap_ready == 1'b1)) begin
            grp_pipeline_bitmap_stage_fu_462_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        initial_processed_voxels_constprop <= 32'd0;
    end else if (((grp_pipeline_bitmap_stage_fu_462_initial_processed_voxels_constprop_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        initial_processed_voxels_constprop <= grp_pipeline_bitmap_stage_fu_462_initial_processed_voxels_constprop_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer_fu_292 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        layer_fu_292 <= add_ln131_reg_838;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pruned_voxel_count_fu_280 <= 32'd0;
    end else if (((tmp_s_nbreadreq_fu_367_p3 == 1'd1) & (tmp_nbreadreq_fu_360_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pruned_voxel_count_fu_280 <= pruned_voxel_count_2_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        L0_bitmap_read_reg_752 <= L0_bitmap_i;
        L1_bitmap_read_reg_747 <= L1_bitmap_i;
        L3_bitmap_read_reg_742 <= L3_bitmap_i;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        L2_bitmap_o_reg <= grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        MINKOWSKI_LAYERS_input_channels_load_reg_862 <= MINKOWSKI_LAYERS_input_channels_q0;
        MINKOWSKI_LAYERS_output_channels_load_reg_867 <= MINKOWSKI_LAYERS_output_channels_q0;
        MINKOWSKI_LAYERS_output_spatial_dim_load_reg_872 <= MINKOWSKI_LAYERS_output_spatial_dim_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln131_reg_838 <= add_ln131_fu_701_p2;
        layer_1_reg_831 <= layer_fu_292;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        call_ret_reg_776 <= grp_pipeline_bitmap_stage_fu_462_ap_return_0;
        final_output_full_cubic_read_reg_771 <= final_output_full_cubic;
        pruned_feature_dram_read_read_reg_763 <= pruned_feature_dram_read;
        pruned_feature_dram_write_read_reg_757 <= pruned_feature_dram_write;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_read_addr_reg_796 <= sext_ln107_fu_633_p1;
        tmp_reg_788 <= tmp_nbreadreq_fu_360_p3;
        tmp_s_reg_792 <= tmp_s_nbreadreq_fu_367_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_cast_reg_826 <= {{call_ret_reg_776[159:128]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pruned_voxel_count_1_reg_781 <= pruned_voxel_count_fu_280;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln98_3_reg_814 <= {{feature_data_stream_dout[96:65]}};
        voxel_features_1_reg_809 <= {{feature_data_stream_dout[64:33]}};
        voxel_features_reg_804 <= {{feature_data_stream_dout[32:1]}};
    end
end

always @ (*) begin
    if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        L0_bitmap_o_ap_vld = 1'b1;
    end else begin
        L0_bitmap_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        L1_bitmap_o_ap_vld = 1'b1;
    end else begin
        L1_bitmap_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        L2_bitmap_o = grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o;
    end else begin
        L2_bitmap_o = L2_bitmap_o_reg;
    end
end

always @ (*) begin
    if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        L3_bitmap_o_ap_vld = 1'b1;
    end else begin
        L3_bitmap_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        MINKOWSKI_LAYERS_input_channels_ce0_local = 1'b1;
    end else begin
        MINKOWSKI_LAYERS_input_channels_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        MINKOWSKI_LAYERS_output_channels_ce0_local = 1'b1;
    end else begin
        MINKOWSKI_LAYERS_output_channels_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        MINKOWSKI_LAYERS_output_spatial_dim_ce0_local = 1'b1;
    end else begin
        MINKOWSKI_LAYERS_output_spatial_dim_ce0_local = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state18_on_subcall_done)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state21_on_subcall_done)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((grp_final_layer_output_reconstruction_fu_543_ap_done == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_predicate_tran4to14_state4 == 1'b1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_final_layer_output_reconstruction_fu_543_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_final_layer_output_reconstruction_fu_543_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        bitmap_info_ap_vld = 1'b1;
    end else begin
        bitmap_info_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op153_read_state5 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        feature_data_stream_read = 1'b1;
    end else begin
        feature_data_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        feature_data_stream_write = grp_pipeline_bitmap_stage_fu_462_feature_data_stream_write;
    end else begin
        feature_data_stream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_output_0_AWVALID = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_AWVALID;
    end else begin
        gmem_output_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_output_0_BREADY = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_BREADY;
    end else begin
        gmem_output_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_output_0_WVALID = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_output_0_WVALID;
    end else begin
        gmem_output_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_read_0_ARADDR = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARADDR;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_read_0_ARADDR = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARADDR;
    end else begin
        gmem_read_0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_read_0_ARLEN = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARLEN;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_read_0_ARLEN = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARLEN;
    end else begin
        gmem_read_0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_read_0_ARVALID = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_ARVALID;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_read_0_ARVALID = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARVALID;
    end else begin
        gmem_read_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op158_writereq_state5 == 1'b1))) begin
        gmem_read_0_AWADDR = gmem_read_addr_reg_796;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_AWADDR = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWADDR;
    end else begin
        gmem_read_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op158_writereq_state5 == 1'b1))) begin
        gmem_read_0_AWLEN = 64'd3;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_AWLEN = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWLEN;
    end else begin
        gmem_read_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op158_writereq_state5 == 1'b1))) begin
        gmem_read_0_AWVALID = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_AWVALID = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWVALID;
    end else begin
        gmem_read_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_read_0_BREADY = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_BREADY = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BREADY;
    end else begin
        gmem_read_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22))) begin
        gmem_read_0_RREADY = grp_final_layer_output_reconstruction_fu_543_m_axi_gmem_read_0_RREADY;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_read_0_RREADY = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RREADY;
    end else begin
        gmem_read_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_01001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_read_0_WDATA = trunc_ln98_3_reg_814;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage0_01001_grp5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_read_0_WDATA = voxel_features_1_reg_809;
    end else if (((ap_predicate_op159_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        gmem_read_0_WDATA = voxel_features_reg_804;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_WDATA = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WDATA;
    end else begin
        gmem_read_0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op159_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage2_01001_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_01001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage0_01001_grp5) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_read_0_WSTRB = 4'd15;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_WSTRB = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WSTRB;
    end else begin
        gmem_read_0_WSTRB = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op159_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp5) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        gmem_read_0_WVALID = 1'b1;
    end else if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_read_0_WVALID = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WVALID;
    end else begin
        gmem_read_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_reg_792 == 1'd1) & (tmp_reg_788 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b0 == ap_block_pp0_stage1_grp3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_read_blk_n_AW = m_axi_gmem_read_AWREADY;
    end else begin
        gmem_read_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (1'b0 == ap_block_pp0_stage0_grp7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_read_blk_n_B = m_axi_gmem_read_BVALID;
    end else begin
        gmem_read_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage0_grp5) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_s_reg_792 == 1'd1) & (tmp_reg_788 == 1'd1) & (1'b0 == ap_block_pp0_stage2_grp4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        gmem_read_blk_n_W = m_axi_gmem_read_WREADY;
    end else begin
        gmem_read_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_write_0_ARVALID = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARVALID;
    end else begin
        gmem_write_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_write_0_AWVALID = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWVALID;
    end else begin
        gmem_write_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_write_0_BREADY = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BREADY;
    end else begin
        gmem_write_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        gmem_write_0_RREADY = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RREADY;
    end else begin
        gmem_write_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        gmem_write_0_WVALID = grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WVALID;
    end else begin
        gmem_write_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_13_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_0_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_1_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_2_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_3_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_4_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_5_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_6_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_7_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_8_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_9_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_10_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_11_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = layer_biases_12_Dout_A;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Dout_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_13_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_0_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_1_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_2_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_3_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_4_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_5_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_6_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_7_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_8_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_9_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_10_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_11_Dout_A;
    end else if ((((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = layer_weights_12_Dout_A;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Dout_A = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREADY = gmem_read_0_AWREADY;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREADY = gmem_write_0_AWREADY;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_AWREADY = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BID = 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BID = gmem_write_0_BID;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BID = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BRESP = 2'd0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BRESP = gmem_write_0_BRESP;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BRESP = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BUSER = 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BUSER = gmem_write_0_BUSER;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BUSER = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BVALID = gmem_read_0_BVALID;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BVALID = gmem_write_0_BVALID;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_BVALID = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WREADY = gmem_read_0_WREADY;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WREADY = gmem_write_0_WREADY;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_read_0_WREADY = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREADY = gmem_write_0_ARREADY;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREADY = gmem_read_0_ARREADY;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_ARREADY = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RDATA = gmem_write_0_RDATA;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RDATA = gmem_read_0_RDATA;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RFIFONUM = gmem_write_0_RFIFONUM;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RFIFONUM = gmem_read_0_RFIFONUM;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RFIFONUM = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RID = 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RID = gmem_read_0_RID;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RID = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RLAST = 1'b0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RLAST = gmem_read_0_RLAST;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RLAST = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RRESP = 2'd0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RRESP = gmem_read_0_RRESP;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RRESP = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RUSER = 1'd0;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RUSER = gmem_read_0_RUSER;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RUSER = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state20) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) 
    | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state20)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state20)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RVALID = gmem_write_0_RVALID;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 
    == 4'd7) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state17)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state17)) | ((1'b1 == ap_CS_fsm_state17) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RVALID = gmem_read_0_RVALID;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_m_axi_gmem_write_0_RVALID = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_read = pruned_feature_dram_write_read_reg_757;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_read = pruned_feature_dram_read_read_reg_763;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_read = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_write = pruned_feature_dram_read_read_reg_763;
    end else if ((((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_write = pruned_feature_dram_write_read_reg_757;
    end else begin
        grp_layer_convolution_with_persistent_accelerator_fu_496_pruned_dram_write = 'bx;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_0_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_10_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_10_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_11_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_11_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_12_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_12_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        layer_biases_13_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_13_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_1_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_2_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_3_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_4_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_5_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_6_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_7_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_8_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_biases_9_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_EN_A;
    end else begin
        layer_biases_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd0) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_0_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd10) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_10_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_10_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd11) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_11_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_11_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd12) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_12_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_12_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))) | ((1'b1 == ap_CS_fsm_state18) & ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)))))) begin
        layer_weights_13_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_13_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd1) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_1_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd2) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_2_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd3) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_3_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd4) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_4_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd5) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_5_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd6) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_6_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd7) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_7_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd8) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_8_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state21)) | ((layer_1_reg_831 == 4'd9) & (1'b1 == ap_CS_fsm_state18)))) begin
        layer_weights_9_EN_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_EN_A;
    end else begin
        layer_weights_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        total_processed_voxels_ap_vld = 1'b1;
    end else begin
        total_processed_voxels_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001_grp2) & (1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_predicate_op157_read_state5 == 1'b1))) begin
        write_addr_stream_read = 1'b1;
    end else begin
        write_addr_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        write_addr_stream_write = grp_pipeline_bitmap_stage_fu_462_write_addr_stream_write;
    end else begin
        write_addr_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_pipeline_bitmap_stage_fu_462_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_predicate_tran4to14_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_predicate_tran4to14_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln131_fu_695_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((trunc_ln146_fu_714_p1 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b0 == ap_block_state21_on_subcall_done) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_final_layer_output_reconstruction_fu_543_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L0_bitmap_o = grp_pipeline_bitmap_stage_fu_462_ap_return_3;

assign L1_bitmap_o = grp_pipeline_bitmap_stage_fu_462_ap_return_2;

assign L2_bitmap_o_ap_vld = grp_pipeline_bitmap_stage_fu_462_L2_bitmap_o_ap_vld;

assign L3_bitmap_o = grp_pipeline_bitmap_stage_fu_462_ap_return_1;

assign MINKOWSKI_LAYERS_input_channels_address0 = zext_ln131_fu_707_p1;

assign MINKOWSKI_LAYERS_output_channels_address0 = zext_ln131_fu_707_p1;

assign MINKOWSKI_LAYERS_output_spatial_dim_address0 = zext_ln131_fu_707_p1;

assign add_ln131_fu_701_p2 = (layer_fu_292 + 4'd1);

assign add_ln96_fu_618_p2 = (zext_ln96_fu_614_p1 + pruned_feature_dram_read_read_reg_763);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (gmem_read_0_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (gmem_read_0_WREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp5 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (gmem_read_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp7 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (gmem_read_0_BVALID == 1'b0));
end

assign ap_block_pp0_stage0_grp5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (gmem_read_0_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (gmem_read_0_WREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp5 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp5_done_reg) & (gmem_read_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp7 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone_grp7_done_reg) & (gmem_read_0_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_01001_grp1 = ((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (gmem_read_0_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp1)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b1 == ap_block_state5_io_grp3)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp2)))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp1 = (((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (gmem_read_0_WREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp2 = ((1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp2));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp3 = ((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_io_grp3));
end

assign ap_block_pp0_stage1_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (gmem_read_0_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp1)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (1'b1 == ap_block_state5_io_grp3)) | ((1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp2)))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp1 = (((1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (gmem_read_0_WREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp2 = ((1'b0 == ap_block_pp0_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_pp0_stage1_iter0_grp2));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp3 = ((1'b0 == ap_block_pp0_stage1_subdone_grp3_done_reg) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state5_io_grp3));
end

assign ap_block_pp0_stage2_01001_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state6_io_grp4));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp4 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state6_io_grp4));
end

assign ap_block_pp0_stage2_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state6_io_grp4));
end

always @ (*) begin
    ap_block_state18_on_subcall_done = (((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (ap_predicate_op232_call_state18 == 1'b1)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd0)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd1)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd2)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd3)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd4)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd5)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd6)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd7)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done 
    == 1'b0) & (layer_1_reg_831 == 4'd8)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd9)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd10)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd11)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd12)));
end

always @ (*) begin
    ap_block_state21_on_subcall_done = (((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (ap_predicate_op278_call_state21 == 1'b1)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd0)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd1)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd2)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd3)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd4)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd5)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd6)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd7)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done 
    == 1'b0) & (layer_1_reg_831 == 4'd8)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd9)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd10)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd11)) | ((grp_layer_convolution_with_persistent_accelerator_fu_496_ap_done == 1'b0) & (layer_1_reg_831 == 4'd12)));
end

always @ (*) begin
    ap_block_state5_io_grp3 = ((gmem_read_0_AWREADY == 1'b0) & (ap_predicate_op158_writereq_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage1_iter0_grp1 = ((ap_predicate_op153_read_state5 == 1'b1) & (feature_data_stream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage1_iter0_grp2 = ((write_addr_stream_empty_n == 1'b0) & (ap_predicate_op157_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_io_grp4 = ((ap_predicate_op159_write_state6 == 1'b1) & (gmem_read_0_WREADY == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op153_read_state5 = ((tmp_s_reg_792 == 1'd1) & (tmp_reg_788 == 1'd1));
end

always @ (*) begin
    ap_predicate_op157_read_state5 = ((tmp_s_reg_792 == 1'd1) & (tmp_reg_788 == 1'd1));
end

always @ (*) begin
    ap_predicate_op158_writereq_state5 = ((tmp_s_reg_792 == 1'd1) & (tmp_reg_788 == 1'd1));
end

always @ (*) begin
    ap_predicate_op159_write_state6 = ((tmp_s_reg_792 == 1'd1) & (tmp_reg_788 == 1'd1));
end

always @ (*) begin
    ap_predicate_op232_call_state18 = ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)));
end

always @ (*) begin
    ap_predicate_op278_call_state21 = ((layer_1_reg_831 == 4'd13) | ((layer_1_reg_831 == 4'd14) | (layer_1_reg_831 == 4'd15)));
end

always @ (*) begin
    ap_predicate_tran4to14_state4 = ((tmp_s_nbreadreq_fu_367_p3 == 1'd0) | (tmp_nbreadreq_fu_360_p3 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign gmem_read_0_RID = 1'd0;

assign gmem_read_0_RLAST = 1'b0;

assign gmem_read_0_RRESP = 2'd0;

assign gmem_read_0_RUSER = 1'd0;

assign gmem_write_0_BID = 1'd0;

assign gmem_write_0_BRESP = 2'd0;

assign gmem_write_0_BUSER = 1'd0;

assign grp_final_layer_output_reconstruction_fu_543_ap_start = grp_final_layer_output_reconstruction_fu_543_ap_start_reg;

assign grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start = grp_layer_convolution_with_persistent_accelerator_fu_496_ap_start_reg;

assign grp_pipeline_bitmap_stage_fu_462_ap_start = grp_pipeline_bitmap_stage_fu_462_ap_start_reg;

assign icmp_ln131_fu_695_p2 = ((layer_fu_292 == 4'd14) ? 1'b1 : 1'b0);

assign input_voxel_stream_read = grp_pipeline_bitmap_stage_fu_462_input_voxel_stream_read;

assign layer_biases_0_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_0_Clk_A = ap_clk;

assign layer_biases_0_Din_A = 32'd0;

assign layer_biases_0_Rst_A = ap_rst_n_inv;

assign layer_biases_0_WEN_A = 4'd0;

assign layer_biases_10_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_10_Clk_A = ap_clk;

assign layer_biases_10_Din_A = 32'd0;

assign layer_biases_10_Rst_A = ap_rst_n_inv;

assign layer_biases_10_WEN_A = 4'd0;

assign layer_biases_11_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_11_Clk_A = ap_clk;

assign layer_biases_11_Din_A = 32'd0;

assign layer_biases_11_Rst_A = ap_rst_n_inv;

assign layer_biases_11_WEN_A = 4'd0;

assign layer_biases_12_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_12_Clk_A = ap_clk;

assign layer_biases_12_Din_A = 32'd0;

assign layer_biases_12_Rst_A = ap_rst_n_inv;

assign layer_biases_12_WEN_A = 4'd0;

assign layer_biases_13_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_13_Clk_A = ap_clk;

assign layer_biases_13_Din_A = 32'd0;

assign layer_biases_13_Rst_A = ap_rst_n_inv;

assign layer_biases_13_WEN_A = 4'd0;

assign layer_biases_1_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_1_Clk_A = ap_clk;

assign layer_biases_1_Din_A = 32'd0;

assign layer_biases_1_Rst_A = ap_rst_n_inv;

assign layer_biases_1_WEN_A = 4'd0;

assign layer_biases_2_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_2_Clk_A = ap_clk;

assign layer_biases_2_Din_A = 32'd0;

assign layer_biases_2_Rst_A = ap_rst_n_inv;

assign layer_biases_2_WEN_A = 4'd0;

assign layer_biases_3_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_3_Clk_A = ap_clk;

assign layer_biases_3_Din_A = 32'd0;

assign layer_biases_3_Rst_A = ap_rst_n_inv;

assign layer_biases_3_WEN_A = 4'd0;

assign layer_biases_4_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_4_Clk_A = ap_clk;

assign layer_biases_4_Din_A = 32'd0;

assign layer_biases_4_Rst_A = ap_rst_n_inv;

assign layer_biases_4_WEN_A = 4'd0;

assign layer_biases_5_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_5_Clk_A = ap_clk;

assign layer_biases_5_Din_A = 32'd0;

assign layer_biases_5_Rst_A = ap_rst_n_inv;

assign layer_biases_5_WEN_A = 4'd0;

assign layer_biases_6_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_6_Clk_A = ap_clk;

assign layer_biases_6_Din_A = 32'd0;

assign layer_biases_6_Rst_A = ap_rst_n_inv;

assign layer_biases_6_WEN_A = 4'd0;

assign layer_biases_7_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_7_Clk_A = ap_clk;

assign layer_biases_7_Din_A = 32'd0;

assign layer_biases_7_Rst_A = ap_rst_n_inv;

assign layer_biases_7_WEN_A = 4'd0;

assign layer_biases_8_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_8_Clk_A = ap_clk;

assign layer_biases_8_Din_A = 32'd0;

assign layer_biases_8_Rst_A = ap_rst_n_inv;

assign layer_biases_8_WEN_A = 4'd0;

assign layer_biases_9_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_biases_12_Addr_A;

assign layer_biases_9_Clk_A = ap_clk;

assign layer_biases_9_Din_A = 32'd0;

assign layer_biases_9_Rst_A = ap_rst_n_inv;

assign layer_biases_9_WEN_A = 4'd0;

assign layer_weights_0_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_0_Clk_A = ap_clk;

assign layer_weights_0_Din_A = 32'd0;

assign layer_weights_0_Rst_A = ap_rst_n_inv;

assign layer_weights_0_WEN_A = 4'd0;

assign layer_weights_10_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_10_Clk_A = ap_clk;

assign layer_weights_10_Din_A = 32'd0;

assign layer_weights_10_Rst_A = ap_rst_n_inv;

assign layer_weights_10_WEN_A = 4'd0;

assign layer_weights_11_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_11_Clk_A = ap_clk;

assign layer_weights_11_Din_A = 32'd0;

assign layer_weights_11_Rst_A = ap_rst_n_inv;

assign layer_weights_11_WEN_A = 4'd0;

assign layer_weights_12_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_12_Clk_A = ap_clk;

assign layer_weights_12_Din_A = 32'd0;

assign layer_weights_12_Rst_A = ap_rst_n_inv;

assign layer_weights_12_WEN_A = 4'd0;

assign layer_weights_13_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_13_Clk_A = ap_clk;

assign layer_weights_13_Din_A = 32'd0;

assign layer_weights_13_Rst_A = ap_rst_n_inv;

assign layer_weights_13_WEN_A = 4'd0;

assign layer_weights_1_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_1_Clk_A = ap_clk;

assign layer_weights_1_Din_A = 32'd0;

assign layer_weights_1_Rst_A = ap_rst_n_inv;

assign layer_weights_1_WEN_A = 4'd0;

assign layer_weights_2_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_2_Clk_A = ap_clk;

assign layer_weights_2_Din_A = 32'd0;

assign layer_weights_2_Rst_A = ap_rst_n_inv;

assign layer_weights_2_WEN_A = 4'd0;

assign layer_weights_3_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_3_Clk_A = ap_clk;

assign layer_weights_3_Din_A = 32'd0;

assign layer_weights_3_Rst_A = ap_rst_n_inv;

assign layer_weights_3_WEN_A = 4'd0;

assign layer_weights_4_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_4_Clk_A = ap_clk;

assign layer_weights_4_Din_A = 32'd0;

assign layer_weights_4_Rst_A = ap_rst_n_inv;

assign layer_weights_4_WEN_A = 4'd0;

assign layer_weights_5_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_5_Clk_A = ap_clk;

assign layer_weights_5_Din_A = 32'd0;

assign layer_weights_5_Rst_A = ap_rst_n_inv;

assign layer_weights_5_WEN_A = 4'd0;

assign layer_weights_6_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_6_Clk_A = ap_clk;

assign layer_weights_6_Din_A = 32'd0;

assign layer_weights_6_Rst_A = ap_rst_n_inv;

assign layer_weights_6_WEN_A = 4'd0;

assign layer_weights_7_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_7_Clk_A = ap_clk;

assign layer_weights_7_Din_A = 32'd0;

assign layer_weights_7_Rst_A = ap_rst_n_inv;

assign layer_weights_7_WEN_A = 4'd0;

assign layer_weights_8_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_8_Clk_A = ap_clk;

assign layer_weights_8_Din_A = 32'd0;

assign layer_weights_8_Rst_A = ap_rst_n_inv;

assign layer_weights_8_WEN_A = 4'd0;

assign layer_weights_9_Addr_A = grp_layer_convolution_with_persistent_accelerator_fu_496_layer_weights_12_Addr_A;

assign layer_weights_9_Clk_A = ap_clk;

assign layer_weights_9_Din_A = 32'd0;

assign layer_weights_9_Rst_A = ap_rst_n_inv;

assign layer_weights_9_WEN_A = 4'd0;

assign pruned_voxel_count_2_fu_588_p2 = (pruned_voxel_count_fu_280 + 32'd1);

assign sext_ln107_fu_633_p1 = $signed(trunc_ln_fu_623_p4);

assign shl_ln96_fu_594_p2 = pruned_voxel_count_fu_280 << 32'd2;

assign shl_ln_fu_606_p3 = {{sub_ln96_fu_600_p2}, {2'd0}};

assign sub_ln96_fu_600_p2 = (shl_ln96_fu_594_p2 - pruned_voxel_count_fu_280);

assign tmp_nbreadreq_fu_360_p3 = feature_data_stream_empty_n;

assign tmp_s_nbreadreq_fu_367_p3 = write_addr_stream_empty_n;

assign trunc_ln146_fu_714_p1 = layer_fu_292[0:0];

assign trunc_ln_fu_623_p4 = {{add_ln96_fu_618_p2[63:2]}};

assign zext_ln131_fu_707_p1 = layer_fu_292;

assign zext_ln96_fu_614_p1 = shl_ln_fu_606_p3;

endmodule //minkowski_net_14_layer_pipeline
