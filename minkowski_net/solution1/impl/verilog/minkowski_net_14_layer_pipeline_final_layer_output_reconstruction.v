// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module minkowski_net_14_layer_pipeline_final_layer_output_reconstruction (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_read_0_AWVALID,
        m_axi_gmem_read_0_AWREADY,
        m_axi_gmem_read_0_AWADDR,
        m_axi_gmem_read_0_AWID,
        m_axi_gmem_read_0_AWLEN,
        m_axi_gmem_read_0_AWSIZE,
        m_axi_gmem_read_0_AWBURST,
        m_axi_gmem_read_0_AWLOCK,
        m_axi_gmem_read_0_AWCACHE,
        m_axi_gmem_read_0_AWPROT,
        m_axi_gmem_read_0_AWQOS,
        m_axi_gmem_read_0_AWREGION,
        m_axi_gmem_read_0_AWUSER,
        m_axi_gmem_read_0_WVALID,
        m_axi_gmem_read_0_WREADY,
        m_axi_gmem_read_0_WDATA,
        m_axi_gmem_read_0_WSTRB,
        m_axi_gmem_read_0_WLAST,
        m_axi_gmem_read_0_WID,
        m_axi_gmem_read_0_WUSER,
        m_axi_gmem_read_0_ARVALID,
        m_axi_gmem_read_0_ARREADY,
        m_axi_gmem_read_0_ARADDR,
        m_axi_gmem_read_0_ARID,
        m_axi_gmem_read_0_ARLEN,
        m_axi_gmem_read_0_ARSIZE,
        m_axi_gmem_read_0_ARBURST,
        m_axi_gmem_read_0_ARLOCK,
        m_axi_gmem_read_0_ARCACHE,
        m_axi_gmem_read_0_ARPROT,
        m_axi_gmem_read_0_ARQOS,
        m_axi_gmem_read_0_ARREGION,
        m_axi_gmem_read_0_ARUSER,
        m_axi_gmem_read_0_RVALID,
        m_axi_gmem_read_0_RREADY,
        m_axi_gmem_read_0_RDATA,
        m_axi_gmem_read_0_RLAST,
        m_axi_gmem_read_0_RID,
        m_axi_gmem_read_0_RFIFONUM,
        m_axi_gmem_read_0_RUSER,
        m_axi_gmem_read_0_RRESP,
        m_axi_gmem_read_0_BVALID,
        m_axi_gmem_read_0_BREADY,
        m_axi_gmem_read_0_BRESP,
        m_axi_gmem_read_0_BID,
        m_axi_gmem_read_0_BUSER,
        pruned_dram_output,
        m_axi_gmem_output_0_AWVALID,
        m_axi_gmem_output_0_AWREADY,
        m_axi_gmem_output_0_AWADDR,
        m_axi_gmem_output_0_AWID,
        m_axi_gmem_output_0_AWLEN,
        m_axi_gmem_output_0_AWSIZE,
        m_axi_gmem_output_0_AWBURST,
        m_axi_gmem_output_0_AWLOCK,
        m_axi_gmem_output_0_AWCACHE,
        m_axi_gmem_output_0_AWPROT,
        m_axi_gmem_output_0_AWQOS,
        m_axi_gmem_output_0_AWREGION,
        m_axi_gmem_output_0_AWUSER,
        m_axi_gmem_output_0_WVALID,
        m_axi_gmem_output_0_WREADY,
        m_axi_gmem_output_0_WDATA,
        m_axi_gmem_output_0_WSTRB,
        m_axi_gmem_output_0_WLAST,
        m_axi_gmem_output_0_WID,
        m_axi_gmem_output_0_WUSER,
        m_axi_gmem_output_0_ARVALID,
        m_axi_gmem_output_0_ARREADY,
        m_axi_gmem_output_0_ARADDR,
        m_axi_gmem_output_0_ARID,
        m_axi_gmem_output_0_ARLEN,
        m_axi_gmem_output_0_ARSIZE,
        m_axi_gmem_output_0_ARBURST,
        m_axi_gmem_output_0_ARLOCK,
        m_axi_gmem_output_0_ARCACHE,
        m_axi_gmem_output_0_ARPROT,
        m_axi_gmem_output_0_ARQOS,
        m_axi_gmem_output_0_ARREGION,
        m_axi_gmem_output_0_ARUSER,
        m_axi_gmem_output_0_RVALID,
        m_axi_gmem_output_0_RREADY,
        m_axi_gmem_output_0_RDATA,
        m_axi_gmem_output_0_RLAST,
        m_axi_gmem_output_0_RID,
        m_axi_gmem_output_0_RFIFONUM,
        m_axi_gmem_output_0_RUSER,
        m_axi_gmem_output_0_RRESP,
        m_axi_gmem_output_0_BVALID,
        m_axi_gmem_output_0_BREADY,
        m_axi_gmem_output_0_BRESP,
        m_axi_gmem_output_0_BID,
        m_axi_gmem_output_0_BUSER,
        full_cubic_output,
        num_pruned_voxels
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_pp0_stage0 = 28'd2;
parameter    ap_ST_fsm_state4 = 28'd4;
parameter    ap_ST_fsm_state5 = 28'd8;
parameter    ap_ST_fsm_state6 = 28'd16;
parameter    ap_ST_fsm_state7 = 28'd32;
parameter    ap_ST_fsm_state8 = 28'd64;
parameter    ap_ST_fsm_pp1_stage0 = 28'd128;
parameter    ap_ST_fsm_pp1_stage1 = 28'd256;
parameter    ap_ST_fsm_pp1_stage2 = 28'd512;
parameter    ap_ST_fsm_pp1_stage3 = 28'd1024;
parameter    ap_ST_fsm_pp1_stage4 = 28'd2048;
parameter    ap_ST_fsm_pp1_stage5 = 28'd4096;
parameter    ap_ST_fsm_pp1_stage6 = 28'd8192;
parameter    ap_ST_fsm_pp1_stage7 = 28'd16384;
parameter    ap_ST_fsm_pp1_stage8 = 28'd32768;
parameter    ap_ST_fsm_pp1_stage9 = 28'd65536;
parameter    ap_ST_fsm_pp1_stage10 = 28'd131072;
parameter    ap_ST_fsm_pp1_stage11 = 28'd262144;
parameter    ap_ST_fsm_pp1_stage12 = 28'd524288;
parameter    ap_ST_fsm_pp1_stage13 = 28'd1048576;
parameter    ap_ST_fsm_pp1_stage14 = 28'd2097152;
parameter    ap_ST_fsm_pp1_stage15 = 28'd4194304;
parameter    ap_ST_fsm_pp1_stage16 = 28'd8388608;
parameter    ap_ST_fsm_pp1_stage17 = 28'd16777216;
parameter    ap_ST_fsm_pp1_stage18 = 28'd33554432;
parameter    ap_ST_fsm_pp1_stage19 = 28'd67108864;
parameter    ap_ST_fsm_state44 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_read_0_AWVALID;
input   m_axi_gmem_read_0_AWREADY;
output  [63:0] m_axi_gmem_read_0_AWADDR;
output  [0:0] m_axi_gmem_read_0_AWID;
output  [31:0] m_axi_gmem_read_0_AWLEN;
output  [2:0] m_axi_gmem_read_0_AWSIZE;
output  [1:0] m_axi_gmem_read_0_AWBURST;
output  [1:0] m_axi_gmem_read_0_AWLOCK;
output  [3:0] m_axi_gmem_read_0_AWCACHE;
output  [2:0] m_axi_gmem_read_0_AWPROT;
output  [3:0] m_axi_gmem_read_0_AWQOS;
output  [3:0] m_axi_gmem_read_0_AWREGION;
output  [0:0] m_axi_gmem_read_0_AWUSER;
output   m_axi_gmem_read_0_WVALID;
input   m_axi_gmem_read_0_WREADY;
output  [31:0] m_axi_gmem_read_0_WDATA;
output  [3:0] m_axi_gmem_read_0_WSTRB;
output   m_axi_gmem_read_0_WLAST;
output  [0:0] m_axi_gmem_read_0_WID;
output  [0:0] m_axi_gmem_read_0_WUSER;
output   m_axi_gmem_read_0_ARVALID;
input   m_axi_gmem_read_0_ARREADY;
output  [63:0] m_axi_gmem_read_0_ARADDR;
output  [0:0] m_axi_gmem_read_0_ARID;
output  [31:0] m_axi_gmem_read_0_ARLEN;
output  [2:0] m_axi_gmem_read_0_ARSIZE;
output  [1:0] m_axi_gmem_read_0_ARBURST;
output  [1:0] m_axi_gmem_read_0_ARLOCK;
output  [3:0] m_axi_gmem_read_0_ARCACHE;
output  [2:0] m_axi_gmem_read_0_ARPROT;
output  [3:0] m_axi_gmem_read_0_ARQOS;
output  [3:0] m_axi_gmem_read_0_ARREGION;
output  [0:0] m_axi_gmem_read_0_ARUSER;
input   m_axi_gmem_read_0_RVALID;
output   m_axi_gmem_read_0_RREADY;
input  [31:0] m_axi_gmem_read_0_RDATA;
input   m_axi_gmem_read_0_RLAST;
input  [0:0] m_axi_gmem_read_0_RID;
input  [12:0] m_axi_gmem_read_0_RFIFONUM;
input  [0:0] m_axi_gmem_read_0_RUSER;
input  [1:0] m_axi_gmem_read_0_RRESP;
input   m_axi_gmem_read_0_BVALID;
output   m_axi_gmem_read_0_BREADY;
input  [1:0] m_axi_gmem_read_0_BRESP;
input  [0:0] m_axi_gmem_read_0_BID;
input  [0:0] m_axi_gmem_read_0_BUSER;
input  [63:0] pruned_dram_output;
output   m_axi_gmem_output_0_AWVALID;
input   m_axi_gmem_output_0_AWREADY;
output  [63:0] m_axi_gmem_output_0_AWADDR;
output  [0:0] m_axi_gmem_output_0_AWID;
output  [31:0] m_axi_gmem_output_0_AWLEN;
output  [2:0] m_axi_gmem_output_0_AWSIZE;
output  [1:0] m_axi_gmem_output_0_AWBURST;
output  [1:0] m_axi_gmem_output_0_AWLOCK;
output  [3:0] m_axi_gmem_output_0_AWCACHE;
output  [2:0] m_axi_gmem_output_0_AWPROT;
output  [3:0] m_axi_gmem_output_0_AWQOS;
output  [3:0] m_axi_gmem_output_0_AWREGION;
output  [0:0] m_axi_gmem_output_0_AWUSER;
output   m_axi_gmem_output_0_WVALID;
input   m_axi_gmem_output_0_WREADY;
output  [31:0] m_axi_gmem_output_0_WDATA;
output  [3:0] m_axi_gmem_output_0_WSTRB;
output   m_axi_gmem_output_0_WLAST;
output  [0:0] m_axi_gmem_output_0_WID;
output  [0:0] m_axi_gmem_output_0_WUSER;
output   m_axi_gmem_output_0_ARVALID;
input   m_axi_gmem_output_0_ARREADY;
output  [63:0] m_axi_gmem_output_0_ARADDR;
output  [0:0] m_axi_gmem_output_0_ARID;
output  [31:0] m_axi_gmem_output_0_ARLEN;
output  [2:0] m_axi_gmem_output_0_ARSIZE;
output  [1:0] m_axi_gmem_output_0_ARBURST;
output  [1:0] m_axi_gmem_output_0_ARLOCK;
output  [3:0] m_axi_gmem_output_0_ARCACHE;
output  [2:0] m_axi_gmem_output_0_ARPROT;
output  [3:0] m_axi_gmem_output_0_ARQOS;
output  [3:0] m_axi_gmem_output_0_ARREGION;
output  [0:0] m_axi_gmem_output_0_ARUSER;
input   m_axi_gmem_output_0_RVALID;
output   m_axi_gmem_output_0_RREADY;
input  [31:0] m_axi_gmem_output_0_RDATA;
input   m_axi_gmem_output_0_RLAST;
input  [0:0] m_axi_gmem_output_0_RID;
input  [8:0] m_axi_gmem_output_0_RFIFONUM;
input  [0:0] m_axi_gmem_output_0_RUSER;
input  [1:0] m_axi_gmem_output_0_RRESP;
input   m_axi_gmem_output_0_BVALID;
output   m_axi_gmem_output_0_BREADY;
input  [1:0] m_axi_gmem_output_0_BRESP;
input  [0:0] m_axi_gmem_output_0_BID;
input  [0:0] m_axi_gmem_output_0_BUSER;
input  [63:0] full_cubic_output;
input  [31:0] num_pruned_voxels;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_read_0_ARVALID;
reg m_axi_gmem_read_0_RREADY;
reg m_axi_gmem_output_0_AWVALID;
reg[63:0] m_axi_gmem_output_0_AWADDR;
reg[31:0] m_axi_gmem_output_0_AWLEN;
reg m_axi_gmem_output_0_WVALID;
reg[31:0] m_axi_gmem_output_0_WDATA;
reg m_axi_gmem_output_0_BREADY;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    gmem_read_blk_n_AR;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
reg    ap_enable_reg_pp1_iter0_reg;
wire    ap_block_pp1_stage1_grp2;
reg   [0:0] icmp_ln416_reg_921;
reg   [0:0] icmp_ln427_reg_925;
reg    ap_block_pp1_stage1_subdone_grp2_done_reg;
reg    ap_block_pp1_stage1_subdone_grp2;
reg    ap_block_pp1_stage1_subdone;
reg    gmem_read_blk_n_R;
wire    ap_CS_fsm_pp1_stage9;
wire    ap_block_pp1_stage9_grp3;
reg    ap_block_pp1_stage9_subdone_grp3_done_reg;
reg    ap_block_pp1_stage9_subdone_grp3;
reg    ap_block_pp1_stage9_subdone;
wire    ap_CS_fsm_pp1_stage10;
wire    ap_block_pp1_stage10_grp5;
wire    ap_CS_fsm_pp1_stage11;
wire    ap_block_pp1_stage11_grp7;
wire    ap_CS_fsm_pp1_stage12;
wire    ap_block_pp1_stage12_grp9;
wire    ap_CS_fsm_pp1_stage13;
wire    ap_block_pp1_stage13_grp11;
wire    ap_CS_fsm_pp1_stage14;
wire    ap_block_pp1_stage14_grp13;
reg    ap_block_pp1_stage14_subdone_grp13_done_reg;
reg    ap_block_pp1_stage14_subdone_grp13;
reg    ap_block_pp1_stage14_subdone;
wire    ap_CS_fsm_pp1_stage15;
wire    ap_block_pp1_stage15_grp15;
wire    ap_CS_fsm_pp1_stage16;
wire    ap_block_pp1_stage16_grp17;
wire    ap_CS_fsm_pp1_stage17;
wire    ap_block_pp1_stage17_grp19;
wire    ap_CS_fsm_pp1_stage18;
wire    ap_block_pp1_stage18_grp21;
wire    ap_CS_fsm_pp1_stage19;
wire    ap_block_pp1_stage19_grp23;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0_grp25;
wire    ap_block_pp1_stage1_grp27;
reg   [0:0] icmp_ln427_reg_925_pp1_iter1_reg;
reg    ap_block_pp1_stage1_subdone_grp27_done_reg;
reg    ap_block_pp1_stage1_subdone_grp27;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2_grp29;
wire    ap_CS_fsm_pp1_stage3;
wire    ap_block_pp1_stage3_grp31;
wire    ap_CS_fsm_pp1_stage4;
wire    ap_block_pp1_stage4_grp33;
wire    ap_CS_fsm_pp1_stage5;
wire    ap_block_pp1_stage5_grp35;
wire    ap_CS_fsm_pp1_stage6;
wire    ap_block_pp1_stage6_grp37;
wire    ap_CS_fsm_pp1_stage7;
wire    ap_block_pp1_stage7_grp39;
wire    ap_CS_fsm_pp1_stage8;
wire    ap_block_pp1_stage8_grp41;
reg    gmem_output_blk_n_AW;
reg    gmem_output_blk_n_W;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_grp1;
reg    gmem_output_blk_n_B;
wire    ap_CS_fsm_state8;
wire    ap_block_pp1_stage9_grp4;
reg    ap_block_pp1_stage9_subdone_grp4_done_reg;
reg    ap_block_pp1_stage9_subdone_grp4;
wire    ap_block_pp1_stage14_grp44;
reg    ap_block_pp1_stage14_subdone_grp44_done_reg;
reg    ap_block_pp1_stage14_subdone_grp44;
reg   [31:0] reg_379;
reg    ap_predicate_op163_read_state18;
reg    ap_block_state18_pp1_stage9_iter0_grp3;
reg    ap_block_state38_io_grp3;
reg    ap_block_pp1_stage9_11001_grp3;
reg    ap_predicate_op165_read_state19;
reg    ap_block_state19_pp1_stage10_iter0_grp5;
reg    ap_predicate_op166_write_state19;
reg    ap_block_state19_io_grp5;
reg    ap_block_pp1_stage10_11001_grp5;
reg    ap_predicate_op167_read_state20;
reg    ap_block_state20_pp1_stage11_iter0_grp7;
reg    ap_predicate_op168_write_state20;
reg    ap_block_state20_io_grp7;
reg    ap_block_pp1_stage11_11001_grp7;
reg    ap_predicate_op169_read_state21;
reg    ap_block_state21_pp1_stage12_iter0_grp9;
reg    ap_predicate_op170_write_state21;
reg    ap_block_state21_io_grp9;
reg    ap_block_pp1_stage12_11001_grp9;
reg    ap_predicate_op171_read_state22;
reg    ap_block_state22_pp1_stage13_iter0_grp11;
reg    ap_predicate_op172_write_state22;
reg    ap_block_state22_io_grp11;
reg    ap_block_pp1_stage13_11001_grp11;
reg    ap_predicate_op173_read_state23;
reg    ap_block_state23_pp1_stage14_iter0_grp13;
reg    ap_predicate_op174_write_state23;
reg    ap_block_state23_io_grp13;
reg    ap_block_pp1_stage14_11001_grp13;
reg    ap_predicate_op175_read_state24;
reg    ap_block_state24_pp1_stage15_iter0_grp15;
reg    ap_predicate_op176_write_state24;
reg    ap_block_state24_io_grp15;
reg    ap_block_pp1_stage15_11001_grp15;
reg    ap_predicate_op177_read_state25;
reg    ap_block_state25_pp1_stage16_iter0_grp17;
reg    ap_predicate_op178_write_state25;
reg    ap_block_state25_io_grp17;
reg    ap_block_pp1_stage16_11001_grp17;
reg    ap_predicate_op179_read_state26;
reg    ap_block_state26_pp1_stage17_iter0_grp19;
reg    ap_predicate_op180_write_state26;
reg    ap_block_state26_io_grp19;
reg    ap_block_pp1_stage17_11001_grp19;
reg    ap_predicate_op181_read_state27;
reg    ap_block_state27_pp1_stage18_iter0_grp21;
reg    ap_predicate_op182_write_state27;
reg    ap_block_state27_io_grp21;
reg    ap_block_pp1_stage18_11001_grp21;
reg    ap_predicate_op183_read_state28;
reg    ap_block_state28_pp1_stage19_iter0_grp23;
reg    ap_predicate_op184_write_state28;
reg    ap_block_state28_io_grp23;
reg    ap_block_pp1_stage19_11001_grp23;
reg    ap_block_state29_pp1_stage0_iter1_grp25;
reg    ap_block_state29_io_grp25;
reg    ap_block_pp1_stage0_11001_grp25;
reg    ap_block_state30_pp1_stage1_iter1_grp27;
reg    ap_block_state30_io_grp27;
reg    ap_block_pp1_stage1_11001_grp27;
reg    ap_block_state31_pp1_stage2_iter1_grp29;
reg    ap_block_state31_io_grp29;
reg    ap_block_pp1_stage2_11001_grp29;
reg    ap_block_state32_pp1_stage3_iter1_grp31;
reg    ap_block_state32_io_grp31;
reg    ap_block_pp1_stage3_11001_grp31;
reg    ap_block_state33_pp1_stage4_iter1_grp33;
reg    ap_block_state33_io_grp33;
reg    ap_block_pp1_stage4_11001_grp33;
reg    ap_block_state34_pp1_stage5_iter1_grp35;
reg    ap_block_state34_io_grp35;
reg    ap_block_pp1_stage5_11001_grp35;
reg    ap_block_state35_pp1_stage6_iter1_grp37;
reg    ap_block_state35_io_grp37;
reg    ap_block_pp1_stage6_11001_grp37;
reg    ap_block_state36_pp1_stage7_iter1_grp39;
reg    ap_block_state36_io_grp39;
reg    ap_block_pp1_stage7_11001_grp39;
reg    ap_block_state37_pp1_stage8_iter1_grp41;
reg    ap_block_state37_io_grp41;
reg    ap_block_pp1_stage8_11001_grp41;
wire   [0:0] icmp_ln416_fu_485_p2;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln427_fu_497_p2;
reg   [63:0] gmem_read_addr_reg_929;
wire   [6:0] select_ln416_fu_623_p3;
reg   [6:0] select_ln416_reg_935;
wire    ap_block_pp1_stage7_11001_grp0;
reg    ap_block_pp1_stage7_subdone_grp0_done_reg;
wire    ap_block_pp1_stage7_subdone_grp0;
reg    ap_block_pp1_stage7_subdone;
wire   [6:0] x_mid2_fu_643_p3;
reg   [6:0] x_mid2_reg_941;
wire   [6:0] select_ln417_fu_651_p3;
reg   [6:0] select_ln417_reg_947;
reg   [63:0] gmem_output_addr_1_reg_953;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln408_fu_432_p2;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
reg    ap_block_pp1_stage19_subdone;
reg    ap_block_state43_pp1_stage14_iter1_grp44;
wire  signed [63:0] sext_ln408_fu_413_p1;
wire  signed [63:0] sext_ln433_fu_547_p1;
wire    ap_block_pp1_stage0;
wire  signed [63:0] sext_ln435_fu_837_p1;
reg    ap_block_pp0_stage0_11001_grp1;
wire    ap_block_pp0_stage0_01001_grp1;
reg    ap_predicate_op104_readreq_state10;
reg    ap_block_state10_io_grp2;
reg    ap_block_pp1_stage1_11001_grp2;
reg    ap_predicate_op164_writereq_state18;
reg    ap_block_state18_io_grp4;
reg    ap_block_pp1_stage9_11001_grp4;
reg    ap_block_pp1_stage14_11001_grp44;
reg    ap_block_pp1_stage10_01001_grp5;
reg    ap_block_pp1_stage11_01001_grp7;
reg    ap_block_pp1_stage12_01001_grp9;
reg    ap_block_pp1_stage13_01001_grp11;
reg    ap_block_pp1_stage14_01001_grp13;
reg    ap_block_pp1_stage15_01001_grp15;
reg    ap_block_pp1_stage16_01001_grp17;
reg    ap_block_pp1_stage17_01001_grp19;
reg    ap_block_pp1_stage18_01001_grp21;
reg    ap_block_pp1_stage19_01001_grp23;
reg    ap_block_pp1_stage0_01001_grp25;
reg    ap_block_pp1_stage1_01001_grp27;
reg    ap_block_pp1_stage2_01001_grp29;
reg    ap_block_pp1_stage3_01001_grp31;
reg    ap_block_pp1_stage4_01001_grp33;
reg    ap_block_pp1_stage5_01001_grp35;
reg    ap_block_pp1_stage6_01001_grp37;
reg    ap_block_pp1_stage7_01001_grp39;
reg    ap_block_pp1_stage8_01001_grp41;
reg    ap_block_pp1_stage9_01001_grp3;
reg   [22:0] i_fu_136;
wire   [22:0] add_ln408_fu_438_p2;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage0;
reg   [6:0] x_fu_140;
wire   [6:0] add_ln418_fu_662_p2;
wire    ap_CS_fsm_state4;
wire    ap_block_pp1_stage7_grp0;
reg   [6:0] y_fu_144;
reg   [13:0] indvar_flatten_fu_148;
wire   [13:0] select_ln417_1_fu_674_p3;
reg   [6:0] z_fu_152;
reg   [18:0] indvar_flatten14_fu_156;
wire   [18:0] add_ln416_1_fu_491_p2;
reg   [31:0] pruned_idx_fu_160;
wire   [31:0] pruned_idx_2_fu_557_p2;
wire   [61:0] trunc_ln_fu_403_p4;
wire   [31:0] empty_87_fu_502_p2;
wire   [31:0] empty_88_fu_508_p2;
wire   [31:0] pruned_addr_fu_514_p2;
wire   [33:0] shl_ln1_fu_520_p3;
wire   [63:0] zext_ln433_fu_528_p1;
wire   [63:0] add_ln433_fu_532_p2;
wire   [61:0] trunc_ln4_fu_537_p4;
wire   [0:0] icmp_ln417_fu_591_p2;
wire   [0:0] icmp_ln418_fu_611_p2;
wire   [0:0] xor_ln414_fu_605_p2;
wire   [6:0] add_ln416_fu_585_p2;
wire   [6:0] select_ln414_fu_597_p3;
wire   [0:0] and_ln414_fu_617_p2;
wire   [0:0] empty_92_fu_637_p2;
wire   [6:0] add_ln417_fu_631_p2;
wire   [13:0] add_ln417_1_fu_668_p2;
wire   [20:0] tmp_66_fu_709_p3;
wire   [22:0] p_shl1_fu_702_p3;
wire   [22:0] zext_ln417_fu_716_p1;
wire   [16:0] tmp_67_fu_726_p3;
wire   [14:0] tmp_68_fu_737_p3;
wire   [17:0] p_shl33_fu_733_p1;
wire   [17:0] p_shl34_fu_744_p1;
wire   [17:0] empty_93_fu_748_p2;
wire   [10:0] tmp_69_fu_758_p3;
wire   [8:0] tmp_70_fu_769_p3;
wire   [11:0] zext_ln427_1_fu_765_p1;
wire   [11:0] zext_ln427_2_fu_776_p1;
wire   [22:0] add_ln417_2_fu_720_p2;
wire   [10:0] tmp_s_fu_786_p4;
wire   [11:0] add_ln427_2_fu_780_p2;
wire   [22:0] tmp_fu_796_p3;
wire   [22:0] zext_ln418_fu_754_p1;
wire   [22:0] add_ln427_fu_804_p2;
wire   [24:0] shl_ln_fu_810_p3;
wire   [63:0] zext_ln427_fu_818_p1;
wire   [63:0] add_ln427_1_fu_822_p2;
wire   [61:0] trunc_ln5_fu_827_p4;
wire    ap_CS_fsm_state44;
reg   [27:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state44_blk;
reg    ap_block_pp1_stage2_subdone;
reg    ap_block_pp1_stage3_subdone;
reg    ap_block_pp1_stage4_subdone;
reg    ap_block_pp1_stage5_subdone;
reg    ap_block_pp1_stage6_subdone;
reg    ap_block_pp1_stage8_subdone;
reg    ap_block_pp1_stage10_subdone;
reg    ap_block_pp1_stage11_subdone;
reg    ap_block_pp1_stage12_subdone;
reg    ap_block_pp1_stage13_subdone;
reg    ap_block_pp1_stage15_subdone;
reg    ap_block_pp1_stage16_subdone;
reg    ap_block_pp1_stage17_subdone;
reg    ap_block_pp1_stage18_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0_reg = 1'b0;
#0 ap_block_pp1_stage1_subdone_grp2_done_reg = 1'b0;
#0 ap_block_pp1_stage9_subdone_grp3_done_reg = 1'b0;
#0 ap_block_pp1_stage14_subdone_grp13_done_reg = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_block_pp1_stage1_subdone_grp27_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_block_pp1_stage9_subdone_grp4_done_reg = 1'b0;
#0 ap_block_pp1_stage14_subdone_grp44_done_reg = 1'b0;
#0 ap_block_pp1_stage7_subdone_grp0_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 i_fu_136 = 23'd0;
#0 x_fu_140 = 7'd0;
#0 y_fu_144 = 7'd0;
#0 indvar_flatten_fu_148 = 14'd0;
#0 z_fu_152 = 7'd0;
#0 indvar_flatten14_fu_156 = 19'd0;
#0 pruned_idx_fu_160 = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage14_subdone_grp13_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage14)) begin
            if ((1'b0 == ap_block_pp1_stage14_subdone)) begin
                ap_block_pp1_stage14_subdone_grp13_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage14_subdone_grp13)) begin
                ap_block_pp1_stage14_subdone_grp13_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage14_subdone_grp44_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage14)) begin
            if ((1'b0 == ap_block_pp1_stage14_subdone)) begin
                ap_block_pp1_stage14_subdone_grp44_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage14_subdone_grp44)) begin
                ap_block_pp1_stage14_subdone_grp44_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage1_subdone_grp27_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage1)) begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_block_pp1_stage1_subdone_grp27_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage1_subdone_grp27)) begin
                ap_block_pp1_stage1_subdone_grp27_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage1_subdone_grp2_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage1)) begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_block_pp1_stage1_subdone_grp2_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage1_subdone_grp2)) begin
                ap_block_pp1_stage1_subdone_grp2_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage7_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage7)) begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_block_pp1_stage7_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage7_subdone_grp0)) begin
                ap_block_pp1_stage7_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage9_subdone_grp3_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage9)) begin
            if ((1'b0 == ap_block_pp1_stage9_subdone)) begin
                ap_block_pp1_stage9_subdone_grp3_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage9_subdone_grp3)) begin
                ap_block_pp1_stage9_subdone_grp3_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp1_stage9_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp1_stage9)) begin
            if ((1'b0 == ap_block_pp1_stage9_subdone)) begin
                ap_block_pp1_stage9_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp1_stage9_subdone_grp4)) begin
                ap_block_pp1_stage9_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem_output_0_BVALID == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem_output_0_BVALID == 1'b1))) begin
            ap_enable_reg_pp1_iter0_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage19) & (1'b0 == ap_block_pp1_stage19_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem_output_0_BVALID == 1'b1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_136 <= 23'd0;
    end else if (((icmp_ln408_fu_432_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_fu_136 <= add_ln408_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten14_fu_156 <= 19'd0;
    end else if (((icmp_ln416_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        indvar_flatten14_fu_156 <= add_ln416_1_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        indvar_flatten_fu_148 <= 14'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp1_stage7_11001_grp0) & (ap_enable_reg_pp1_iter0_reg == 1'b1))) begin
        indvar_flatten_fu_148 <= select_ln417_1_fu_674_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pruned_idx_fu_160 <= 32'd0;
    end else if (((icmp_ln427_fu_497_p2 == 1'd1) & (icmp_ln416_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        pruned_idx_fu_160 <= pruned_idx_2_fu_557_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_fu_140 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp1_stage7_11001_grp0) & (ap_enable_reg_pp1_iter0_reg == 1'b1))) begin
        x_fu_140 <= add_ln418_fu_662_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        y_fu_144 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp1_stage7_11001_grp0) & (ap_enable_reg_pp1_iter0_reg == 1'b1))) begin
        y_fu_144 <= select_ln417_fu_651_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        z_fu_152 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage7) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp1_stage7_11001_grp0) & (ap_enable_reg_pp1_iter0_reg == 1'b1))) begin
        z_fu_152 <= select_ln416_fu_623_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_11001_grp41))) begin
        gmem_output_addr_1_reg_953 <= sext_ln435_fu_837_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        gmem_read_addr_reg_929 <= sext_ln433_fu_547_p1;
        icmp_ln416_reg_921 <= icmp_ln416_fu_485_p2;
        icmp_ln427_reg_925 <= icmp_ln427_fu_497_p2;
        icmp_ln427_reg_925_pp1_iter1_reg <= icmp_ln427_reg_925;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_11001_grp41)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_11001_grp39)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_11001_grp37)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_11001_grp35)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_11001_grp33)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001_grp31)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001_grp29)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001_grp25)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001_grp27) 
    & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg)) | ((1'b1 == ap_CS_fsm_pp1_stage19) & (1'b0 == ap_block_pp1_stage19_11001_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage18) & (1'b0 == ap_block_pp1_stage18_11001_grp21) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage17) & (1'b0 == ap_block_pp1_stage17_11001_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage16) & (1'b0 == ap_block_pp1_stage16_11001_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage15) & (1'b0 == ap_block_pp1_stage15_11001_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_11001_grp13) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage13) & (1'b0 == ap_block_pp1_stage13_11001_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage12) & (1'b0 == ap_block_pp1_stage12_11001_grp9) 
    & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage11) & (1'b0 == ap_block_pp1_stage11_11001_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage10) & (1'b0 == ap_block_pp1_stage10_11001_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_11001_grp3) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1)))) begin
        reg_379 <= m_axi_gmem_read_0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_subdone_grp0_done_reg) & (1'b0 == ap_block_pp1_stage7_11001_grp0))) begin
        select_ln416_reg_935 <= select_ln416_fu_623_p3;
        select_ln417_reg_947 <= select_ln417_fu_651_p3;
        x_mid2_reg_941 <= x_mid2_fu_643_p3;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_output_0_BVALID == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln408_fu_432_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln416_fu_485_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp1_stage9) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg) & (1'b0 == ap_block_pp1_stage9_grp4) & (ap_enable_reg_pp1_iter0_reg == 1'b1)))) begin
        gmem_output_blk_n_AW = m_axi_gmem_output_0_AWREADY;
    end else begin
        gmem_output_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_subdone_grp44_done_reg) & (1'b0 == ap_block_pp1_stage14_grp44)))) begin
        gmem_output_blk_n_B = m_axi_gmem_output_0_BVALID;
    end else begin
        gmem_output_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_grp1)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_grp41)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_grp39)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_grp37)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_grp35)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_grp33)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_grp31)) 
    | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_grp29)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (1'b0 == ap_block_pp1_stage9_grp3)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg) & (1'b0 == ap_block_pp1_stage1_grp27)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln427_reg_925 == 1'd1) & (1'b0 == ap_block_pp1_stage0_grp25)) | ((1'b1 == ap_CS_fsm_pp1_stage19) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage19_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage18) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage18_grp21) & 
    (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage17) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage17_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage16) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage16_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage15) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage15_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (1'b0 == ap_block_pp1_stage14_grp13) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage13) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage13_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage12) & (icmp_ln427_reg_925 
    == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage12_grp9) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage11) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage11_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage10) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage10_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1)))) begin
        gmem_output_blk_n_W = m_axi_gmem_output_0_WREADY;
    end else begin
        gmem_output_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage1_subdone_grp2_done_reg) & (1'b0 == ap_block_pp1_stage1_grp2) & (ap_enable_reg_pp1_iter0_reg == 1'b1))) begin
        gmem_read_blk_n_AR = m_axi_gmem_read_0_ARREADY;
    end else begin
        gmem_read_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_grp41)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_grp39)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_grp37)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_grp35)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_grp33)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_grp31)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) 
    & (1'b0 == ap_block_pp1_stage2_grp29)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg) & (1'b0 == ap_block_pp1_stage1_grp27)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln427_reg_925 == 1'd1) & (1'b0 == ap_block_pp1_stage0_grp25)) | ((1'b1 == ap_CS_fsm_pp1_stage19) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage19_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage18) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage18_grp21) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage17) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage17_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage16) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == 
    ap_block_pp1_stage16_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage15) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage15_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage14) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (1'b0 == ap_block_pp1_stage14_grp13) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage13) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage13_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage12) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage12_grp9) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage11) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage11_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage10) 
    & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage10_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp1_stage9) & (icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (1'b0 == ap_block_pp1_stage9_grp3) & (ap_enable_reg_pp1_iter0_reg == 1'b1)))) begin
        gmem_read_blk_n_R = m_axi_gmem_read_0_RVALID;
    end else begin
        gmem_read_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg) & (1'b0 == ap_block_pp1_stage9_11001_grp4) & (ap_enable_reg_pp1_iter0_reg == 1'b1) & (ap_predicate_op164_writereq_state18 == 1'b1))) begin
        m_axi_gmem_output_0_AWADDR = gmem_output_addr_1_reg_953;
    end else if ((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_output_0_AWADDR = sext_ln408_fu_413_p1;
    end else begin
        m_axi_gmem_output_0_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg) & (1'b0 == ap_block_pp1_stage9_11001_grp4) & (ap_enable_reg_pp1_iter0_reg == 1'b1) & (ap_predicate_op164_writereq_state18 == 1'b1))) begin
        m_axi_gmem_output_0_AWLEN = 64'd20;
    end else if ((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_gmem_output_0_AWLEN = 64'd5242880;
    end else begin
        m_axi_gmem_output_0_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg) & (1'b0 == ap_block_pp1_stage9_11001_grp4) & (ap_enable_reg_pp1_iter0_reg == 1'b1) & (ap_predicate_op164_writereq_state18 == 1'b1)))) begin
        m_axi_gmem_output_0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_output_0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem_output_0_BVALID == 1'b1)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_subdone_grp44_done_reg) & (1'b0 == ap_block_pp1_stage14_11001_grp44)))) begin
        m_axi_gmem_output_0_BREADY = 1'b1;
    end else begin
        m_axi_gmem_output_0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op184_write_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage19) & (1'b0 == ap_block_pp1_stage19_01001_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op182_write_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage18) & (1'b0 == ap_block_pp1_stage18_01001_grp21) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op180_write_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage17) & (1'b0 == ap_block_pp1_stage17_01001_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op178_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage16) & (1'b0 == ap_block_pp1_stage16_01001_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op176_write_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage15) & (1'b0 == ap_block_pp1_stage15_01001_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op174_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (1'b0 == ap_block_pp1_stage14_01001_grp13) & (ap_enable_reg_pp1_iter0_reg 
    == 1'b1)) | ((ap_predicate_op172_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage13) & (1'b0 == ap_block_pp1_stage13_01001_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op170_write_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage12) & (1'b0 == ap_block_pp1_stage12_01001_grp9) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op168_write_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage11) & (1'b0 == ap_block_pp1_stage11_01001_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op166_write_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage10) & (1'b0 == ap_block_pp1_stage10_01001_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_01001_grp41)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_01001_grp39)) | ((icmp_ln427_reg_925_pp1_iter1_reg 
    == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_01001_grp37)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_01001_grp35)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_01001_grp33)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_01001_grp31)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_01001_grp29)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (1'b0 == ap_block_pp1_stage9_01001_grp3)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg) & (1'b0 == ap_block_pp1_stage1_01001_grp27)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln427_reg_925 == 1'd1) & (1'b0 == ap_block_pp1_stage0_01001_grp25)))) begin
        m_axi_gmem_output_0_WDATA = reg_379;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001_grp1))) begin
        m_axi_gmem_output_0_WDATA = 32'd0;
    end else begin
        m_axi_gmem_output_0_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op184_write_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage19) & (1'b0 == ap_block_pp1_stage19_11001_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op182_write_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage18) & (1'b0 == ap_block_pp1_stage18_11001_grp21) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op180_write_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage17) & (1'b0 == ap_block_pp1_stage17_11001_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op178_write_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage16) & (1'b0 == ap_block_pp1_stage16_11001_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op176_write_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage15) & (1'b0 == ap_block_pp1_stage15_11001_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op174_write_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_11001_grp13) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg 
    == 1'b1)) | ((ap_predicate_op172_write_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage13) & (1'b0 == ap_block_pp1_stage13_11001_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op170_write_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage12) & (1'b0 == ap_block_pp1_stage12_11001_grp9) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op168_write_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage11) & (1'b0 == ap_block_pp1_stage11_11001_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op166_write_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage10) & (1'b0 == ap_block_pp1_stage10_11001_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_grp1)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_11001_grp41)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) 
    & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_11001_grp39)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_11001_grp37)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_11001_grp35)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_11001_grp33)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001_grp31)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001_grp29)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_11001_grp3) 
    & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001_grp27) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln427_reg_925 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001_grp25)))) begin
        m_axi_gmem_output_0_WVALID = 1'b1;
    end else begin
        m_axi_gmem_output_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op104_readreq_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001_grp2) & (1'b0 == ap_block_pp1_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1))) begin
        m_axi_gmem_read_0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_read_0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op183_read_state28 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage19) & (1'b0 == ap_block_pp1_stage19_11001_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op181_read_state27 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage18) & (1'b0 == ap_block_pp1_stage18_11001_grp21) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op179_read_state26 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage17) & (1'b0 == ap_block_pp1_stage17_11001_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op177_read_state25 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage16) & (1'b0 == ap_block_pp1_stage16_11001_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op175_read_state24 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage15) & (1'b0 == ap_block_pp1_stage15_11001_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op173_read_state23 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_11001_grp13) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg 
    == 1'b1)) | ((ap_predicate_op171_read_state22 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage13) & (1'b0 == ap_block_pp1_stage13_11001_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op169_read_state21 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage12) & (1'b0 == ap_block_pp1_stage12_11001_grp9) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op167_read_state20 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage11) & (1'b0 == ap_block_pp1_stage11_11001_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op165_read_state19 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage10) & (1'b0 == ap_block_pp1_stage10_11001_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_predicate_op163_read_state18 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage9) & (1'b0 == ap_block_pp1_stage9_11001_grp3) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage8) & (1'b0 == ap_block_pp1_stage8_11001_grp41)) 
    | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage7) & (1'b0 == ap_block_pp1_stage7_11001_grp39)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage6) & (1'b0 == ap_block_pp1_stage6_11001_grp37)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage5) & (1'b0 == ap_block_pp1_stage5_11001_grp35)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage4) & (1'b0 == ap_block_pp1_stage4_11001_grp33)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (1'b0 == ap_block_pp1_stage3_11001_grp31)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001_grp29)) | ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001_grp27) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln427_reg_925 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001_grp25)))) begin
        m_axi_gmem_read_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem_read_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (m_axi_gmem_output_0_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln408_fu_432_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((icmp_ln408_fu_432_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (m_axi_gmem_output_0_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln416_fu_485_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((icmp_ln416_fu_485_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_pp1_stage4 : begin
            if ((1'b0 == ap_block_pp1_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage4;
            end
        end
        ap_ST_fsm_pp1_stage5 : begin
            if ((1'b0 == ap_block_pp1_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage5;
            end
        end
        ap_ST_fsm_pp1_stage6 : begin
            if ((1'b0 == ap_block_pp1_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage6;
            end
        end
        ap_ST_fsm_pp1_stage7 : begin
            if ((1'b0 == ap_block_pp1_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage7;
            end
        end
        ap_ST_fsm_pp1_stage8 : begin
            if ((1'b0 == ap_block_pp1_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage8;
            end
        end
        ap_ST_fsm_pp1_stage9 : begin
            if ((1'b0 == ap_block_pp1_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage9;
            end
        end
        ap_ST_fsm_pp1_stage10 : begin
            if ((1'b0 == ap_block_pp1_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage10;
            end
        end
        ap_ST_fsm_pp1_stage11 : begin
            if ((1'b0 == ap_block_pp1_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage11;
            end
        end
        ap_ST_fsm_pp1_stage12 : begin
            if ((1'b0 == ap_block_pp1_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage12;
            end
        end
        ap_ST_fsm_pp1_stage13 : begin
            if ((1'b0 == ap_block_pp1_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage13;
            end
        end
        ap_ST_fsm_pp1_stage14 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage14_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage14) & (1'b0 == ap_block_pp1_stage14_subdone) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage14;
            end
        end
        ap_ST_fsm_pp1_stage15 : begin
            if ((1'b0 == ap_block_pp1_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage15;
            end
        end
        ap_ST_fsm_pp1_stage16 : begin
            if ((1'b0 == ap_block_pp1_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage16;
            end
        end
        ap_ST_fsm_pp1_stage17 : begin
            if ((1'b0 == ap_block_pp1_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage17;
            end
        end
        ap_ST_fsm_pp1_stage18 : begin
            if ((1'b0 == ap_block_pp1_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage18;
            end
        end
        ap_ST_fsm_pp1_stage19 : begin
            if ((1'b0 == ap_block_pp1_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage19;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln408_fu_438_p2 = (i_fu_136 + 23'd1);

assign add_ln416_1_fu_491_p2 = (indvar_flatten14_fu_156 + 19'd1);

assign add_ln416_fu_585_p2 = (z_fu_152 + 7'd1);

assign add_ln417_1_fu_668_p2 = (indvar_flatten_fu_148 + 14'd1);

assign add_ln417_2_fu_720_p2 = (p_shl1_fu_702_p3 + zext_ln417_fu_716_p1);

assign add_ln417_fu_631_p2 = (select_ln414_fu_597_p3 + 7'd1);

assign add_ln418_fu_662_p2 = (x_mid2_fu_643_p3 + 7'd1);

assign add_ln427_1_fu_822_p2 = (zext_ln427_fu_818_p1 + full_cubic_output);

assign add_ln427_2_fu_780_p2 = (zext_ln427_1_fu_765_p1 + zext_ln427_2_fu_776_p1);

assign add_ln427_fu_804_p2 = (tmp_fu_796_p3 + zext_ln418_fu_754_p1);

assign add_ln433_fu_532_p2 = (zext_ln433_fu_528_p1 + pruned_dram_output);

assign and_ln414_fu_617_p2 = (xor_ln414_fu_605_p2 & icmp_ln418_fu_611_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage10 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp1_stage11 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp1_stage12 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp1_stage13 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp1_stage14 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp1_stage15 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp1_stage16 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp1_stage17 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp1_stage18 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp1_stage19 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage4 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage5 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage6 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage7 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage8 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp1_stage9 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001_grp25 = ((1'b1 == ap_block_state29_pp1_stage0_iter1_grp25) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state29_io_grp25) | (1'b1 == ap_block_state29_pp1_stage0_iter1_grp25)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_grp25 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state29_io_grp25) | (1'b1 == ap_block_state29_pp1_stage0_iter1_grp25)));
end

assign ap_block_pp1_stage0_grp25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state29_io_grp25) | (1'b1 == ap_block_state29_pp1_stage0_iter1_grp25)));
end

always @ (*) begin
    ap_block_pp1_stage10_01001_grp5 = ((1'b1 == ap_block_state19_pp1_stage10_iter0_grp5) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage10_11001_grp5 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state19_io_grp5) | (1'b1 == ap_block_state19_pp1_stage10_iter0_grp5)));
end

assign ap_block_pp1_stage10_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage10_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state19_io_grp5) | (1'b1 == ap_block_state19_pp1_stage10_iter0_grp5)));
end

always @ (*) begin
    ap_block_pp1_stage11_01001_grp7 = ((1'b1 == ap_block_state20_pp1_stage11_iter0_grp7) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage11_11001_grp7 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state20_io_grp7) | (1'b1 == ap_block_state20_pp1_stage11_iter0_grp7)));
end

assign ap_block_pp1_stage11_grp7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage11_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state20_io_grp7) | (1'b1 == ap_block_state20_pp1_stage11_iter0_grp7)));
end

always @ (*) begin
    ap_block_pp1_stage12_01001_grp9 = ((1'b1 == ap_block_state21_pp1_stage12_iter0_grp9) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage12_11001_grp9 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state21_io_grp9) | (1'b1 == ap_block_state21_pp1_stage12_iter0_grp9)));
end

assign ap_block_pp1_stage12_grp9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage12_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state21_io_grp9) | (1'b1 == ap_block_state21_pp1_stage12_iter0_grp9)));
end

always @ (*) begin
    ap_block_pp1_stage13_01001_grp11 = ((1'b1 == ap_block_state22_pp1_stage13_iter0_grp11) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage13_11001_grp11 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state22_io_grp11) | (1'b1 == ap_block_state22_pp1_stage13_iter0_grp11)));
end

assign ap_block_pp1_stage13_grp11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage13_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state22_io_grp11) | (1'b1 == ap_block_state22_pp1_stage13_iter0_grp11)));
end

always @ (*) begin
    ap_block_pp1_stage14_01001_grp13 = ((1'b1 == ap_block_state23_pp1_stage14_iter0_grp13) & (1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage14_11001_grp13 = ((1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state23_io_grp13) | (1'b1 == ap_block_state23_pp1_stage14_iter0_grp13)));
end

always @ (*) begin
    ap_block_pp1_stage14_11001_grp44 = ((1'b1 == ap_block_state43_pp1_stage14_iter1_grp44) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage14_subdone_grp44_done_reg));
end

assign ap_block_pp1_stage14_grp13 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage14_grp44 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage14_subdone = (((1'b1 == ap_block_state43_pp1_stage14_iter1_grp44) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage14_subdone_grp44_done_reg)) | ((1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state23_io_grp13) | (1'b1 == ap_block_state23_pp1_stage14_iter0_grp13))));
end

always @ (*) begin
    ap_block_pp1_stage14_subdone_grp13 = ((1'b0 == ap_block_pp1_stage14_subdone_grp13_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state23_io_grp13) | (1'b1 == ap_block_state23_pp1_stage14_iter0_grp13)));
end

always @ (*) begin
    ap_block_pp1_stage14_subdone_grp44 = ((1'b1 == ap_block_state43_pp1_stage14_iter1_grp44) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage14_subdone_grp44_done_reg));
end

always @ (*) begin
    ap_block_pp1_stage15_01001_grp15 = ((1'b1 == ap_block_state24_pp1_stage15_iter0_grp15) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage15_11001_grp15 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state24_io_grp15) | (1'b1 == ap_block_state24_pp1_stage15_iter0_grp15)));
end

assign ap_block_pp1_stage15_grp15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage15_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state24_io_grp15) | (1'b1 == ap_block_state24_pp1_stage15_iter0_grp15)));
end

always @ (*) begin
    ap_block_pp1_stage16_01001_grp17 = ((1'b1 == ap_block_state25_pp1_stage16_iter0_grp17) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage16_11001_grp17 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state25_io_grp17) | (1'b1 == ap_block_state25_pp1_stage16_iter0_grp17)));
end

assign ap_block_pp1_stage16_grp17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage16_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state25_io_grp17) | (1'b1 == ap_block_state25_pp1_stage16_iter0_grp17)));
end

always @ (*) begin
    ap_block_pp1_stage17_01001_grp19 = ((1'b1 == ap_block_state26_pp1_stage17_iter0_grp19) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage17_11001_grp19 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state26_io_grp19) | (1'b1 == ap_block_state26_pp1_stage17_iter0_grp19)));
end

assign ap_block_pp1_stage17_grp19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage17_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state26_io_grp19) | (1'b1 == ap_block_state26_pp1_stage17_iter0_grp19)));
end

always @ (*) begin
    ap_block_pp1_stage18_01001_grp21 = ((1'b1 == ap_block_state27_pp1_stage18_iter0_grp21) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage18_11001_grp21 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state27_io_grp21) | (1'b1 == ap_block_state27_pp1_stage18_iter0_grp21)));
end

assign ap_block_pp1_stage18_grp21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage18_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state27_io_grp21) | (1'b1 == ap_block_state27_pp1_stage18_iter0_grp21)));
end

always @ (*) begin
    ap_block_pp1_stage19_01001_grp23 = ((1'b1 == ap_block_state28_pp1_stage19_iter0_grp23) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage19_11001_grp23 = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state28_io_grp23) | (1'b1 == ap_block_state28_pp1_stage19_iter0_grp23)));
end

assign ap_block_pp1_stage19_grp23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage19_subdone = ((ap_enable_reg_pp1_iter0_reg == 1'b1) & ((1'b1 == ap_block_state28_io_grp23) | (1'b1 == ap_block_state28_pp1_stage19_iter0_grp23)));
end

always @ (*) begin
    ap_block_pp1_stage1_01001_grp27 = ((1'b1 == ap_block_state30_pp1_stage1_iter1_grp27) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_grp2 = ((1'b1 == ap_block_state10_io_grp2) & (1'b0 == ap_block_pp1_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_11001_grp27 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg) & ((1'b1 == ap_block_state30_io_grp27) | (1'b1 == ap_block_state30_pp1_stage1_iter1_grp27)));
end

assign ap_block_pp1_stage1_grp2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_grp27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((1'b1 == ap_block_state10_io_grp2) & (1'b0 == ap_block_pp1_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg) & ((1'b1 == ap_block_state30_io_grp27) | (1'b1 == ap_block_state30_pp1_stage1_iter1_grp27))));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone_grp2 = ((1'b1 == ap_block_state10_io_grp2) & (1'b0 == ap_block_pp1_stage1_subdone_grp2_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone_grp27 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage1_subdone_grp27_done_reg) & ((1'b1 == ap_block_state30_io_grp27) | (1'b1 == ap_block_state30_pp1_stage1_iter1_grp27)));
end

always @ (*) begin
    ap_block_pp1_stage2_01001_grp29 = ((1'b1 == ap_block_state31_pp1_stage2_iter1_grp29) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage2_11001_grp29 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state31_io_grp29) | (1'b1 == ap_block_state31_pp1_stage2_iter1_grp29)));
end

assign ap_block_pp1_stage2_grp29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state31_io_grp29) | (1'b1 == ap_block_state31_pp1_stage2_iter1_grp29)));
end

always @ (*) begin
    ap_block_pp1_stage3_01001_grp31 = ((1'b1 == ap_block_state32_pp1_stage3_iter1_grp31) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage3_11001_grp31 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state32_io_grp31) | (1'b1 == ap_block_state32_pp1_stage3_iter1_grp31)));
end

assign ap_block_pp1_stage3_grp31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage3_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state32_io_grp31) | (1'b1 == ap_block_state32_pp1_stage3_iter1_grp31)));
end

always @ (*) begin
    ap_block_pp1_stage4_01001_grp33 = ((1'b1 == ap_block_state33_pp1_stage4_iter1_grp33) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage4_11001_grp33 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state33_io_grp33) | (1'b1 == ap_block_state33_pp1_stage4_iter1_grp33)));
end

assign ap_block_pp1_stage4_grp33 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage4_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state33_io_grp33) | (1'b1 == ap_block_state33_pp1_stage4_iter1_grp33)));
end

always @ (*) begin
    ap_block_pp1_stage5_01001_grp35 = ((1'b1 == ap_block_state34_pp1_stage5_iter1_grp35) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage5_11001_grp35 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state34_io_grp35) | (1'b1 == ap_block_state34_pp1_stage5_iter1_grp35)));
end

assign ap_block_pp1_stage5_grp35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage5_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state34_io_grp35) | (1'b1 == ap_block_state34_pp1_stage5_iter1_grp35)));
end

always @ (*) begin
    ap_block_pp1_stage6_01001_grp37 = ((1'b1 == ap_block_state35_pp1_stage6_iter1_grp37) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage6_11001_grp37 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state35_io_grp37) | (1'b1 == ap_block_state35_pp1_stage6_iter1_grp37)));
end

assign ap_block_pp1_stage6_grp37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage6_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state35_io_grp37) | (1'b1 == ap_block_state35_pp1_stage6_iter1_grp37)));
end

always @ (*) begin
    ap_block_pp1_stage7_01001_grp39 = ((1'b1 == ap_block_state36_pp1_stage7_iter1_grp39) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage7_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_11001_grp39 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state36_io_grp39) | (1'b1 == ap_block_state36_pp1_stage7_iter1_grp39)));
end

assign ap_block_pp1_stage7_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage7_grp39 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage7_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state36_io_grp39) | (1'b1 == ap_block_state36_pp1_stage7_iter1_grp39)));
end

assign ap_block_pp1_stage7_subdone_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage8_01001_grp41 = ((1'b1 == ap_block_state37_pp1_stage8_iter1_grp41) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage8_11001_grp41 = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state37_io_grp41) | (1'b1 == ap_block_state37_pp1_stage8_iter1_grp41)));
end

assign ap_block_pp1_stage8_grp41 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage8_subdone = ((ap_enable_reg_pp1_iter1 == 1'b1) & ((1'b1 == ap_block_state37_io_grp41) | (1'b1 == ap_block_state37_pp1_stage8_iter1_grp41)));
end

always @ (*) begin
    ap_block_pp1_stage9_01001_grp3 = ((1'b1 == ap_block_state18_pp1_stage9_iter0_grp3) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage9_11001_grp3 = (((1'b1 == ap_block_state38_io_grp3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg)) | ((1'b1 == ap_block_state18_pp1_stage9_iter0_grp3) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage9_11001_grp4 = ((1'b1 == ap_block_state18_io_grp4) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

assign ap_block_pp1_stage9_grp3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage9_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage9_subdone = (((1'b1 == ap_block_state38_io_grp3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg)) | ((ap_enable_reg_pp1_iter0_reg == 1'b1) & (((1'b1 == ap_block_state18_pp1_stage9_iter0_grp3) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg)) | ((1'b1 == ap_block_state18_io_grp4) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg)))));
end

always @ (*) begin
    ap_block_pp1_stage9_subdone_grp3 = (((1'b1 == ap_block_state38_io_grp3) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg)) | ((1'b1 == ap_block_state18_pp1_stage9_iter0_grp3) & (1'b0 == ap_block_pp1_stage9_subdone_grp3_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage9_subdone_grp4 = ((1'b1 == ap_block_state18_io_grp4) & (1'b0 == ap_block_pp1_stage9_subdone_grp4_done_reg) & (ap_enable_reg_pp1_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_io_grp2 = ((ap_predicate_op104_readreq_state10 == 1'b1) & (m_axi_gmem_read_0_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_io_grp4 = ((m_axi_gmem_output_0_AWREADY == 1'b0) & (ap_predicate_op164_writereq_state18 == 1'b1));
end

always @ (*) begin
    ap_block_state18_pp1_stage9_iter0_grp3 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op163_read_state18 == 1'b1));
end

always @ (*) begin
    ap_block_state19_io_grp5 = ((ap_predicate_op166_write_state19 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp1_stage10_iter0_grp5 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op165_read_state19 == 1'b1));
end

always @ (*) begin
    ap_block_state20_io_grp7 = ((ap_predicate_op168_write_state20 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp1_stage11_iter0_grp7 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op167_read_state20 == 1'b1));
end

always @ (*) begin
    ap_block_state21_io_grp9 = ((ap_predicate_op170_write_state21 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp1_stage12_iter0_grp9 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op169_read_state21 == 1'b1));
end

always @ (*) begin
    ap_block_state22_io_grp11 = ((ap_predicate_op172_write_state22 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp1_stage13_iter0_grp11 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op171_read_state22 == 1'b1));
end

always @ (*) begin
    ap_block_state23_io_grp13 = ((ap_predicate_op174_write_state23 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp1_stage14_iter0_grp13 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op173_read_state23 == 1'b1));
end

always @ (*) begin
    ap_block_state24_io_grp15 = ((ap_predicate_op176_write_state24 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp1_stage15_iter0_grp15 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op175_read_state24 == 1'b1));
end

always @ (*) begin
    ap_block_state25_io_grp17 = ((ap_predicate_op178_write_state25 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp1_stage16_iter0_grp17 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op177_read_state25 == 1'b1));
end

always @ (*) begin
    ap_block_state26_io_grp19 = ((ap_predicate_op180_write_state26 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp1_stage17_iter0_grp19 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op179_read_state26 == 1'b1));
end

always @ (*) begin
    ap_block_state27_io_grp21 = ((ap_predicate_op182_write_state27 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp1_stage18_iter0_grp21 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op181_read_state27 == 1'b1));
end

always @ (*) begin
    ap_block_state28_io_grp23 = ((ap_predicate_op184_write_state28 == 1'b1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp1_stage19_iter0_grp23 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (ap_predicate_op183_read_state28 == 1'b1));
end

always @ (*) begin
    ap_block_state29_io_grp25 = ((icmp_ln427_reg_925 == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp1_stage0_iter1_grp25 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925 == 1'd1));
end

always @ (*) begin
    ap_block_state30_io_grp27 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp1_stage1_iter1_grp27 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state31_io_grp29 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp1_stage2_iter1_grp29 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state32_io_grp31 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp1_stage3_iter1_grp31 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state33_io_grp33 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp1_stage4_iter1_grp33 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state34_io_grp35 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state34_pp1_stage5_iter1_grp35 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state35_io_grp37 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state35_pp1_stage6_iter1_grp37 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state36_io_grp39 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state36_pp1_stage7_iter1_grp39 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state37_io_grp41 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state37_pp1_stage8_iter1_grp41 = ((m_axi_gmem_read_0_RVALID == 1'b0) & (icmp_ln427_reg_925_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state38_io_grp3 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state43_pp1_stage14_iter1_grp44 = ((icmp_ln427_reg_925_pp1_iter1_reg == 1'd1) & (m_axi_gmem_output_0_BVALID == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_predicate_op104_readreq_state10 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op163_read_state18 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_writereq_state18 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op165_read_state19 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_write_state19 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_read_state20 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_write_state20 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_read_state21 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_write_state21 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_read_state22 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_write_state22 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op173_read_state23 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op174_write_state23 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op175_read_state24 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op176_write_state24 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op177_read_state25 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op178_write_state25 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op179_read_state26 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op180_write_state26 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op181_read_state27 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_write_state27 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op183_read_state28 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

always @ (*) begin
    ap_predicate_op184_write_state28 = ((icmp_ln427_reg_925 == 1'd1) & (icmp_ln416_reg_921 == 1'd0));
end

assign empty_87_fu_502_p2 = pruned_idx_fu_160 << 32'd4;

assign empty_88_fu_508_p2 = pruned_idx_fu_160 << 32'd2;

assign empty_92_fu_637_p2 = (icmp_ln417_fu_591_p2 | and_ln414_fu_617_p2);

assign empty_93_fu_748_p2 = (p_shl33_fu_733_p1 + p_shl34_fu_744_p1);

assign icmp_ln408_fu_432_p2 = ((i_fu_136 == 23'd5242880) ? 1'b1 : 1'b0);

assign icmp_ln416_fu_485_p2 = ((indvar_flatten14_fu_156 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln417_fu_591_p2 = ((indvar_flatten_fu_148 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln418_fu_611_p2 = ((x_fu_140 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln427_fu_497_p2 = ((pruned_idx_fu_160 < num_pruned_voxels) ? 1'b1 : 1'b0);

assign m_axi_gmem_output_0_ARADDR = 64'd0;

assign m_axi_gmem_output_0_ARBURST = 2'd0;

assign m_axi_gmem_output_0_ARCACHE = 4'd0;

assign m_axi_gmem_output_0_ARID = 1'd0;

assign m_axi_gmem_output_0_ARLEN = 32'd0;

assign m_axi_gmem_output_0_ARLOCK = 2'd0;

assign m_axi_gmem_output_0_ARPROT = 3'd0;

assign m_axi_gmem_output_0_ARQOS = 4'd0;

assign m_axi_gmem_output_0_ARREGION = 4'd0;

assign m_axi_gmem_output_0_ARSIZE = 3'd0;

assign m_axi_gmem_output_0_ARUSER = 1'd0;

assign m_axi_gmem_output_0_ARVALID = 1'b0;

assign m_axi_gmem_output_0_AWBURST = 2'd0;

assign m_axi_gmem_output_0_AWCACHE = 4'd0;

assign m_axi_gmem_output_0_AWID = 1'd0;

assign m_axi_gmem_output_0_AWLOCK = 2'd0;

assign m_axi_gmem_output_0_AWPROT = 3'd0;

assign m_axi_gmem_output_0_AWQOS = 4'd0;

assign m_axi_gmem_output_0_AWREGION = 4'd0;

assign m_axi_gmem_output_0_AWSIZE = 3'd0;

assign m_axi_gmem_output_0_AWUSER = 1'd0;

assign m_axi_gmem_output_0_RREADY = 1'b0;

assign m_axi_gmem_output_0_WID = 1'd0;

assign m_axi_gmem_output_0_WLAST = 1'b0;

assign m_axi_gmem_output_0_WSTRB = 4'd15;

assign m_axi_gmem_output_0_WUSER = 1'd0;

assign m_axi_gmem_read_0_ARADDR = gmem_read_addr_reg_929;

assign m_axi_gmem_read_0_ARBURST = 2'd0;

assign m_axi_gmem_read_0_ARCACHE = 4'd0;

assign m_axi_gmem_read_0_ARID = 1'd0;

assign m_axi_gmem_read_0_ARLEN = 64'd20;

assign m_axi_gmem_read_0_ARLOCK = 2'd0;

assign m_axi_gmem_read_0_ARPROT = 3'd0;

assign m_axi_gmem_read_0_ARQOS = 4'd0;

assign m_axi_gmem_read_0_ARREGION = 4'd0;

assign m_axi_gmem_read_0_ARSIZE = 3'd0;

assign m_axi_gmem_read_0_ARUSER = 1'd0;

assign m_axi_gmem_read_0_AWADDR = 64'd0;

assign m_axi_gmem_read_0_AWBURST = 2'd0;

assign m_axi_gmem_read_0_AWCACHE = 4'd0;

assign m_axi_gmem_read_0_AWID = 1'd0;

assign m_axi_gmem_read_0_AWLEN = 32'd0;

assign m_axi_gmem_read_0_AWLOCK = 2'd0;

assign m_axi_gmem_read_0_AWPROT = 3'd0;

assign m_axi_gmem_read_0_AWQOS = 4'd0;

assign m_axi_gmem_read_0_AWREGION = 4'd0;

assign m_axi_gmem_read_0_AWSIZE = 3'd0;

assign m_axi_gmem_read_0_AWUSER = 1'd0;

assign m_axi_gmem_read_0_AWVALID = 1'b0;

assign m_axi_gmem_read_0_BREADY = 1'b0;

assign m_axi_gmem_read_0_WDATA = 32'd0;

assign m_axi_gmem_read_0_WID = 1'd0;

assign m_axi_gmem_read_0_WLAST = 1'b0;

assign m_axi_gmem_read_0_WSTRB = 4'd0;

assign m_axi_gmem_read_0_WUSER = 1'd0;

assign m_axi_gmem_read_0_WVALID = 1'b0;

assign p_shl1_fu_702_p3 = {{select_ln416_reg_935}, {16'd0}};

assign p_shl33_fu_733_p1 = tmp_67_fu_726_p3;

assign p_shl34_fu_744_p1 = tmp_68_fu_737_p3;

assign pruned_addr_fu_514_p2 = (empty_87_fu_502_p2 + empty_88_fu_508_p2);

assign pruned_idx_2_fu_557_p2 = (pruned_idx_fu_160 + 32'd1);

assign select_ln414_fu_597_p3 = ((icmp_ln417_fu_591_p2[0:0] == 1'b1) ? 7'd0 : y_fu_144);

assign select_ln416_fu_623_p3 = ((icmp_ln417_fu_591_p2[0:0] == 1'b1) ? add_ln416_fu_585_p2 : z_fu_152);

assign select_ln417_1_fu_674_p3 = ((icmp_ln417_fu_591_p2[0:0] == 1'b1) ? 14'd1 : add_ln417_1_fu_668_p2);

assign select_ln417_fu_651_p3 = ((and_ln414_fu_617_p2[0:0] == 1'b1) ? add_ln417_fu_631_p2 : select_ln414_fu_597_p3);

assign sext_ln408_fu_413_p1 = $signed(trunc_ln_fu_403_p4);

assign sext_ln433_fu_547_p1 = $signed(trunc_ln4_fu_537_p4);

assign sext_ln435_fu_837_p1 = $signed(trunc_ln5_fu_827_p4);

assign shl_ln1_fu_520_p3 = {{pruned_addr_fu_514_p2}, {2'd0}};

assign shl_ln_fu_810_p3 = {{add_ln427_fu_804_p2}, {2'd0}};

assign tmp_66_fu_709_p3 = {{select_ln416_reg_935}, {14'd0}};

assign tmp_67_fu_726_p3 = {{select_ln417_reg_947}, {10'd0}};

assign tmp_68_fu_737_p3 = {{select_ln417_reg_947}, {8'd0}};

assign tmp_69_fu_758_p3 = {{x_mid2_reg_941}, {4'd0}};

assign tmp_70_fu_769_p3 = {{x_mid2_reg_941}, {2'd0}};

assign tmp_fu_796_p3 = {{tmp_s_fu_786_p4}, {add_ln427_2_fu_780_p2}};

assign tmp_s_fu_786_p4 = {{add_ln417_2_fu_720_p2[22:12]}};

assign trunc_ln4_fu_537_p4 = {{add_ln433_fu_532_p2[63:2]}};

assign trunc_ln5_fu_827_p4 = {{add_ln427_1_fu_822_p2[63:2]}};

assign trunc_ln_fu_403_p4 = {{full_cubic_output[63:2]}};

assign x_mid2_fu_643_p3 = ((empty_92_fu_637_p2[0:0] == 1'b1) ? 7'd0 : x_fu_140);

assign xor_ln414_fu_605_p2 = (icmp_ln417_fu_591_p2 ^ 1'd1);

assign zext_ln417_fu_716_p1 = tmp_66_fu_709_p3;

assign zext_ln418_fu_754_p1 = empty_93_fu_748_p2;

assign zext_ln427_1_fu_765_p1 = tmp_69_fu_758_p3;

assign zext_ln427_2_fu_776_p1 = tmp_70_fu_769_p3;

assign zext_ln427_fu_818_p1 = shl_ln_fu_810_p3;

assign zext_ln433_fu_528_p1 = shl_ln1_fu_520_p3;

endmodule //minkowski_net_14_layer_pipeline_final_layer_output_reconstruction
