<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb1EEC2EDq33_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<512, false>& ap_bit_ref<512, false>::operator=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<96>::ap_int<96, true>(ap_int_base<96, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi96ELb1EEC2EDq96_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, true>::mult operator*<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<88, true>::ap_int_base<56, false>(ap_int_base<56, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<88, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<88, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<32, false>::ssdm_int(unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<89, true>::ap_int_base<69, true>(ap_int_base<69, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::ap_int_base<4, false>(ap_int_base<4, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<68>::ap_int<68, true>(ap_int_base<68, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi68ELb1EEC2EDq68_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::RType<32, true>::mult operator*<4, false, 32, true>(ap_int_base<4, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<68, true>::ap_int_base<36, true>(ap_int_base<36, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<68, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<68, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<69>::ap_int<69, true>(ap_int_base<69, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi69ELb1EEC2EDq69_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::RType<32, true>::mult operator*<36, true, 32, true>(ap_int_base<36, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<69, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<69, true>::ap_int_base<68, true>(ap_int_base<68, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<69, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<88>::ap_int<88, true>(ap_int_base<88, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi88ELb1EEC2EDq88_i" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi89ELb1EEC2EDq89_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<56, false>::RType<32, true>::mult operator*<56, false, 32, true>(ap_int_base<56, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<89, true>::ap_int_base<88, true>(ap_int_base<88, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<89, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<89>::ap_int<89, true>(ap_int_base<89, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<69, true>::RType<88, true>::plus operator+<69, true, 88, true>(ap_int_base<69, true> const&, ap_int_base<88, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<89>(ap_int<89> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<89, true>(ap_int_base<89, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::RType<($_0)32, true>::mult operator*<4, false>(ap_int_base<4, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::RType<($_0)32, true>::mult operator*<36, true>(ap_int_base<36, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<68, true>::plus operator+<64, true, 68, true>(ap_int_base<64, true> const&, ap_int_base<68, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<56, false>::RType<($_0)32, true>::mult operator*<56, false>(ap_int_base<56, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<8, false>::ssdm_int(unsigned char)" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="261" pragmaType="inline" parentfunction="extract_morton_address" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="streaming_bitmap_constructor.cpp" line="314" pragmaType="inline" parentfunction="calculate_voxel_base_address" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="full" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::div operator/<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<33>(ap_int<33> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::mult operator*<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<($_0)32, true>::mult operator*<64, true>(ap_int_base<64, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<96, true>::RType<64, true>::plus operator+<96, true, 64, true>(ap_int_base<96, true> const&, ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="177" pragmaType="inline" parentfunction="morton_decode" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="183" pragmaType="unroll" parentfunction="morton_decode" factor="-1" skip_exit_check="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="155" pragmaType="inline" parentfunction="coord_to_idx" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="full" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="148" pragmaType="inline" parentfunction="set_bit" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="full" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<8, true>::ssdm_int(signed char)" off="0" region="0" recursive="0"/>
<pragma file="streaming_bitmap_constructor.cpp" line="21" pragmaType="inline" parentfunction="process_voxel" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<97, true>::RType<32, false>::plus operator+<97, true, 32, false>(ap_int_base<97, true> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<98>(ap_int<98> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<8>::ap_int(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::ap_int_base<60, false>(ap_int_base<60, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<96, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<96, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<96, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<97, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<97>::ap_int<97, true>(ap_int_base<97, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi97ELb1EEC2EDq97_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<32, true>::mult operator*<64, true, 32, true>(ap_int_base<64, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<98, true>(ap_int_base<98, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<98, true>::ap_int_base<97, true>(ap_int_base<97, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi4ELb0EEC2EDq4_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<60>::ap_uint<60, false>(ap_int_base<60, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi60ELb0EEC2EDq60_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base<60, false>(ap_int_base<60, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi56ELb0EEC2EDq56_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::RType<64, false>::logic operator&<60, false, 64, false>(ap_int_base<60, false> const&, ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<4>::ap_uint<60>(ap_uint<60> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::RType<($_0)64, false>::logic operator&<60, false>(ap_int_base<60, false> const&, unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<56>::ap_uint<64>(ap_uint<64> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<56, false>::ap_int_base<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<36>::ap_int<36, true>(ap_int_base<36, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi36ELb1EEC2EDq36_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::RType<60, false>::arg1 operator>><60, false>(ap_int_base<60, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<64, true>::ssdm_int(long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& ap_int_base<32, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, true>::div operator/<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi98ELb1EEC2EDq98_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<97, true>::ap_int_base<96, true>(ap_int_base<96, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<97, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<98, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<98, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<98>::ap_int<98, true>(ap_int_base<98, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<512, false>::operator[](int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<512, false>::operator=(unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& ap_int_base<32, false>::operator|=<61, true>(ap_int_base<61, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::RType<($_0)32, true>::logic operator&<60, false>(ap_int_base<60, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<61, true>::RType<61, true>::arg1 operator<<<61, true>(ap_int_base<61, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<8, false>& ap_bit_ref<8, false>::operator=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<61, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<61>::ap_int<61, true>(ap_int_base<61, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi61ELb1EEC2EDq61_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::RType<32, true>::logic operator&<60, false, 32, true>(ap_int_base<60, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<61, true>::ap_int_base<60, false>(ap_int_base<60, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<61, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="streaming_bitmap_constructor.cpp" line="136" pragmaType="pipeline" parentfunction="streaming_bitmap_constructor" off="0" ii="1" rewind="0" style=""/>
<pragma file="streaming_bitmap_constructor.cpp" line="139" pragmaType="unroll" parentfunction="streaming_bitmap_constructor" factor="-1" skip_exit_check="0"/>
<pragma file="streaming_bitmap_constructor.cpp" line="149" pragmaType="unroll" parentfunction="streaming_bitmap_constructor" factor="-1" skip_exit_check="0"/>
<pragma file="streaming_bitmap_constructor.cpp" line="122" pragmaType="pipeline" parentfunction="streaming_bitmap_constructor" off="0" ii="1" rewind="0" style=""/>
<pragma file="streaming_bitmap_constructor.cpp" line="94" pragmaType="bind_storage" parentfunction="streaming_bitmap_constructor" op="666" impl="18" latency="-1" variable="_ZZ28streaming_bitmap_constructorRN3hls6streamI9VoxelDataLi0EEES3_RNS0_I7ap_uintILi60EELi0EEERNS0_I18EarlyTriggerSignalLi0EEERNS0_I17RetainedBlockInfoLi0EEEPS4_ILi512EESF_SF_SF_R16PrunedBitmapInfoRS4_ILi32EEE7L1_temp"/>
<pragma file="streaming_bitmap_constructor.cpp" line="95" pragmaType="bind_storage" parentfunction="streaming_bitmap_constructor" op="666" impl="18" latency="-1" variable="_ZZ28streaming_bitmap_constructorRN3hls6streamI9VoxelDataLi0EEES3_RNS0_I7ap_uintILi60EELi0EEERNS0_I18EarlyTriggerSignalLi0EEERNS0_I17RetainedBlockInfoLi0EEEPS4_ILi512EESF_SF_SF_R16PrunedBitmapInfoRS4_ILi32EEE7L2_temp"/>
<pragma file="streaming_bitmap_constructor.cpp" line="96" pragmaType="bind_storage" parentfunction="streaming_bitmap_constructor" op="666" impl="18" latency="-1" variable="_ZZ28streaming_bitmap_constructorRN3hls6streamI9VoxelDataLi0EEES3_RNS0_I7ap_uintILi60EELi0EEERNS0_I18EarlyTriggerSignalLi0EEERNS0_I17RetainedBlockInfoLi0EEEPS4_ILi512EESF_SF_SF_R16PrunedBitmapInfoRS4_ILi32EEE7L3_temp"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="empty" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::operator[](int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& operator+=<32, false>(ap_int_base<32, false>&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::plus operator+<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint<8, false>(ap_bit_ref<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<($_0)32, true>::plus operator+<32, false>(int, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::RType<32, false>::plus operator+<34, true, 32, false>(ap_int_base<34, true> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<35, true>::RType<32, false>::plus operator+<35, true, 32, false>(ap_int_base<35, true> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<36>(ap_int<36> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator>=<32, false>(ap_int_base<32, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<60>::ap_uint(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<60>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="full" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::ap_int_base(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator>=<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<36, true>(ap_int_base<36, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>& ap_int_base<32, false>::operator+=<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::ap_int_base<35, true>(ap_int_base<35, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<36, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<35, true>::ap_int_base<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<35, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<35, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<35>::ap_int<35, true>(ap_int_base<35, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi35ELb1EEC2EDq35_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::RType<32, false>::plus operator+<32, true, 32, false>(ap_int_base<32, true> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<34>::ap_int<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi34ELb1EEC2EDq34_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<8, false>::operator=(unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base<8, false>(ap_bit_ref<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<8, false>::operator bool() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<32, true>::plus operator+<32, false, 32, true>(ap_int_base<32, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<VoxelData, 0>::stream(char const*)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<8, false>::ap_bit_ref(ap_int_base<8, false>*, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="dynamic_access.cpp" line="22" pragmaType="inline" parentfunction="initialize_streaming_pointers" off="0" region="0" recursive="0"/>
<pragma file="complete_pipeline.cpp" line="140" pragmaType="inline" parentfunction="pipeline_bitmap_stage" off="1" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="132" pragmaType="loop_tripcount" parentfunction="minkowski_net_14_layer_pipeline" min="14" max="14" avg="14"/>
<pragma file="minkowski_net.cpp" line="97" pragmaType="pipeline" parentfunction="minkowski_net_14_layer_pipeline" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="103" pragmaType="unroll" parentfunction="minkowski_net_14_layer_pipeline" factor="2" skip_exit_check="0"/>
<pragma file="minkowski_net.cpp" line="35" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="m_axi" port="pruned_feature_dram_read" bundle="gmem_read" offset="" name="" depth="262144" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="256" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="minkowski_net.cpp" line="36" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="m_axi" port="pruned_feature_dram_write" bundle="gmem_write" offset="" name="" depth="262144" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="256" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="minkowski_net.cpp" line="37" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="m_axi" port="final_output_full_cubic" bundle="gmem_output" offset="" name="" depth="5242880" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="256" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="minkowski_net.cpp" line="38" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="ap_memory" port="L3_bitmap" storage_type="-1" impl="-1" latency="-1" name="" depth="-1"/>
<pragma file="minkowski_net.cpp" line="39" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="ap_memory" port="L2_bitmap" storage_type="-1" impl="-1" latency="-1" name="" depth="-1"/>
<pragma file="minkowski_net.cpp" line="40" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="ap_memory" port="L1_bitmap" storage_type="-1" impl="-1" latency="-1" name="" depth="-1"/>
<pragma file="minkowski_net.cpp" line="41" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="ap_memory" port="L0_bitmap" storage_type="-1" impl="-1" latency="-1" name="" depth="-1"/>
<pragma file="minkowski_net.cpp" line="42" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="ap_memory" port="layer_weights" storage_type="-1" impl="-1" latency="-1" name="" depth="-1"/>
<pragma file="minkowski_net.cpp" line="43" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="ap_memory" port="layer_biases" storage_type="-1" impl="-1" latency="-1" name="" depth="-1"/>
<pragma file="minkowski_net.cpp" line="44" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="s_axilite" port="bitmap_info" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="minkowski_net.cpp" line="45" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="s_axilite" port="total_processed_voxels" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="minkowski_net.cpp" line="46" pragmaType="interface" parentfunction="minkowski_net_14_layer_pipeline" mode="s_axilite" port="" bundle="" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="minkowski_net.cpp" line="49" pragmaType="array_partition" parentfunction="minkowski_net_14_layer_pipeline" dim="1" factor="0" mode="complete" dynamic="0" variable="layer_weights"/>
<pragma file="minkowski_net.cpp" line="50" pragmaType="array_partition" parentfunction="minkowski_net_14_layer_pipeline" dim="1" factor="0" mode="complete" dynamic="0" variable="layer_biases"/>
<pragma file="minkowski_net.cpp" line="53" pragmaType="bind_storage" parentfunction="minkowski_net_14_layer_pipeline" op="666" impl="22" latency="-1" variable="layer_weights"/>
<pragma file="minkowski_net.cpp" line="54" pragmaType="bind_storage" parentfunction="minkowski_net_14_layer_pipeline" op="666" impl="22" latency="-1" variable="layer_biases"/>
<pragma file="minkowski_net.cpp" line="71" pragmaType="stream" parentfunction="minkowski_net_14_layer_pipeline" depth="1024" type="fifo" variable="feature_data_stream"/>
<pragma file="minkowski_net.cpp" line="72" pragmaType="stream" parentfunction="minkowski_net_14_layer_pipeline" depth="1024" type="fifo" variable="write_addr_stream"/>
<pragma file="minkowski_net.cpp" line="73" pragmaType="stream" parentfunction="minkowski_net_14_layer_pipeline" depth="256" type="fifo" variable="retained_blocks_stream"/>
<pragma file="minkowski_net.cpp" line="74" pragmaType="stream" parentfunction="minkowski_net_14_layer_pipeline" depth="64" type="fifo" variable="early_trigger_stream"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<ap_uint<60>, 0>::stream(char const*)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<RetainedBlockInfo, 0>::stream(char const*)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<EarlyTriggerSignal, 0>::stream(char const*)" off="0" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="0" pragmaType="inline" parentfunction="logical_bitmap_reconstruction_with_access_pointers" off="1" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="empty" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<($_0)32, true>::plus operator+<64, true>(ap_int_base<64, true> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<65>(ap_int<65> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<32, false>::operator<<32, false>(ap_int_base<32, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<20>::ap_uint<32>(ap_uint<32> const&)" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="171" pragmaType="inline" parentfunction="morton3D" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::RType<32, false>::mod operator%<60, false, 32, false>(ap_int_base<60, false> const&, ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<21>::ap_uint<20>(ap_uint<20> const&)" off="0" region="0" recursive="0"/>
<pragma file="./octree_master.h" line="160" pragmaType="inline" parentfunction="part1by2" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::RType<64, false>::arg1 operator<<<64, false>(ap_int_base<64, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::RType<64, false>::logic operator|<64, false, 64, false>(ap_int_base<64, false> const&, ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<60>::ap_uint<64>(ap_uint<64> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<60, false>::ap_int_base<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint<21>(ap_uint<21> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::RType<($_0)64, false>::logic operator&<64, false>(ap_int_base<64, false> const&, unsigned long long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::RType<64, false>::logic operator&<64, false, 64, false>(ap_int_base<64, false> const&, ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base<21, false>(ap_int_base<21, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<21, false>::ap_int_base<20, false>(ap_int_base<20, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi21ELb0EEC2EDq21_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<20, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi20ELb0EEC2EDq20_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::RType<8, true>::plus operator+<32, false, 8, true>(ap_int_base<32, false> const&, ap_int_base<8, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<32>::ap_uint<34>(ap_int<34> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="382" pragmaType="inline" parentfunction="should_use_cross_row_sorting" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<34, true>(ap_int_base<34, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<34, true>::ap_int_base<8, true>(ap_int_base<8, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base<65, true>(ap_int_base<65, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, true>::RType<32, true>::plus operator+<64, true, 32, true>(ap_int_base<64, true> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<65, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="/tools/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi65ELb1EEC2EDq65_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<512, false>::ap_bit_ref(ap_int_base<512, false>*, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="0" pragmaType="inline" parentfunction="final_layer_output_reconstruction" off="1" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="419" pragmaType="pipeline" parentfunction="final_layer_output_reconstruction" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="430" pragmaType="unroll" parentfunction="final_layer_output_reconstruction" factor="4" skip_exit_check="0"/>
<pragma file="minkowski_net.cpp" line="409" pragmaType="pipeline" parentfunction="final_layer_output_reconstruction" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="0" pragmaType="inline" parentfunction="layer_convolution_with_persistent_accelerator" off="1" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="230" pragmaType="pipeline" parentfunction="layer_convolution_with_persistent_accelerator" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="231" pragmaType="loop_tripcount" parentfunction="layer_convolution_with_persistent_accelerator" min="1000" max="100000" avg="50500"/>
<pragma file="minkowski_net.cpp" line="236" pragmaType="pipeline" parentfunction="layer_convolution_with_persistent_accelerator" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="246" pragmaType="unroll" parentfunction="layer_convolution_with_persistent_accelerator" factor="4" skip_exit_check="0"/>
<pragma file="minkowski_net.cpp" line="252" pragmaType="pipeline" parentfunction="layer_convolution_with_persistent_accelerator" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="297" pragmaType="unroll" parentfunction="layer_convolution_with_persistent_accelerator" factor="4" skip_exit_check="0"/>
<pragma file="minkowski_net.cpp" line="312" pragmaType="pipeline" parentfunction="layer_convolution_with_persistent_accelerator" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="305" pragmaType="pipeline" parentfunction="layer_convolution_with_persistent_accelerator" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="281" pragmaType="unroll" parentfunction="layer_convolution_with_persistent_accelerator" factor="-1" skip_exit_check="0"/>
<pragma file="minkowski_net.cpp" line="274" pragmaType="unroll" parentfunction="layer_convolution_with_persistent_accelerator" factor="2" skip_exit_check="0"/>
<pragma file="minkowski_net.cpp" line="289" pragmaType="pipeline" parentfunction="layer_convolution_with_persistent_accelerator" off="0" ii="1" rewind="0" style=""/>
<pragma file="minkowski_net.cpp" line="226" pragmaType="bind_storage" parentfunction="layer_convolution_with_persistent_accelerator" op="666" impl="24" latency="-1" variable="_ZZ45layer_convolution_with_persistent_acceleratoriRK11LayerConfigPA1024_A1024_fPfP7ap_uintILi512EES8_S8_S8_R16PrunedBitmapInfoPS6_ILi32EESC_SB_E8z_buffer"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="minkowski_net.cpp" line="0" pragmaType="inline" parentfunction="access_pointer_lookup" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
</pragmas>
